namespace = TOW

# Reserved : TOW.50 to TOW.51

#when creating a character via history, event or decision, make sure to give them the appropriate culture, graphical_culture and trait there

#on_birth: Assigning race trait depending on parents
character_event = {

	id = TOW.51
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		#First same-trait pairings
		if = {
			limit = {
				mother = {
					trait = race_human
				}
				true_father = {
					trait = race_human
				}
			}
			set_character_flag = race_assigned
			add_trait = race_human
		}
		if = {
			limit = {
				mother = {
					trait = race_high_elf
				}
				true_father = {
					trait = race_high_elf
				}
			}
			set_character_flag = race_assigned
			add_trait = race_high_elf
		}
		if = {
			limit = {
				mother = {
					trait = race_blood_elf
				}
				true_father = {
					trait = race_blood_elf
				}
			}
			set_character_flag = race_assigned
			add_trait = race_blood_elf
		}
		if = {
			limit = {
				mother = {
					trait = race_wretched
				}
				true_father = {
					trait = race_wretched
				}
			}
			set_character_flag = race_assigned
			add_trait = race_wretched
		}
		if = {
			limit = {
				mother = {
					trait = race_gnome
				}
				true_father = {
					trait = race_gnome
				}
			}
			set_character_flag = race_assigned
			add_trait = race_gnome
		}
		if = {
			limit = {
				mother = {
					trait = race_goblin
				}
				true_father = {
					trait = race_goblin
				}
			}
			set_character_flag = race_assigned
			add_trait = race_goblin
		}
		#Trolls are handled down in the crossbreed section
		if = {
			limit = {
				mother = {
					trait = race_ogre
				}
				true_father = {
					trait = race_ogre
				}
			}
			set_character_flag = race_assigned
			add_trait = race_ogre
		}
		if = {
			limit = {
				mother = {
					trait = race_murloc
				}
				true_father = {
					trait = race_murloc
				}
			}
			set_character_flag = race_assigned
			add_trait = race_murloc
		}
		if = {
			limit = {
				mother = {
					trait = race_gnoll
				}
				true_father = {
					trait = race_gnoll
				}
			}
			set_character_flag = race_assigned
			add_trait = race_gnoll
		}
		if = {
			limit = {
				mother = {
					trait = race_naga
				}
				true_father = {
					trait = race_naga
				}
			}
			set_character_flag = race_assigned
			add_trait = race_naga
		}
		if = {
			limit = {
				mother = {
					trait = race_trogg
				}
				true_father = {
					trait = race_trogg
				}
			}
			set_character_flag = race_assigned
			add_trait = race_trogg
		}
		if = {
			limit = {
				mother = {
					trait = race_kobold
				}
				true_father = {
					trait = race_kobold
				}
			}
			set_character_flag = race_assigned
			add_trait = race_kobold
		}
		if = {
			limit = {
				mother = {
					trait = race_draenei
				}
				true_father = {
					trait = race_draenei
				}
			}
			set_character_flag = race_assigned
			add_trait = race_draenei
		}
		if = {
			limit = {
				mother = {
					trait = race_broken
				}
				true_father = {
					trait = race_broken
				}
			}
			set_character_flag = race_assigned
			add_trait = race_broken
		}
		if = {
			limit = {
				mother = {
					trait = race_lost_one
				}
				true_father = {
					trait = race_lost_one
				}
			}
			set_character_flag = race_assigned
			add_trait = race_lost_one
		}
		if = {
			limit = {
				mother = {
					trait = race_pale_orc
				}
				true_father = {
					trait = race_pale_orc
				}
			}
			set_character_flag = race_assigned
			add_trait = race_pale_orc
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_wretched
						}
						true_father = {
							trait = race_high_elf
						}
					}
					AND = {
						mother = {
							trait = race_high_elf
						}
						true_father = {
							trait = race_wretched
						}
					}
				}
			}
			set_character_flag = race_assigned
			add_trait = race_high_elf
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							OR = {
								trait = race_high_elf
								trait = race_wretched
							}
						}
						true_father = {
							trait = race_blood_elf
						}
					}
					AND = {
						mother = {
							trait = race_blood_elf
						}
						true_father = {
							OR = {
								trait = race_high_elf
								trait = race_wretched
							}
						}
					}
				}
			}
			set_character_flag = race_assigned
			add_trait = race_blood_elf
		}
		if = {
			limit = {
				mother = {
					trait = race_half_elf
				}
				true_father = {
					trait = race_half_elf
				}
			}
			set_character_flag = race_assigned
			add_trait = race_half_elf
			random_list = {
				1 = {
					modifier = {
						factor = 0
						mother = {
							NOR = {
								has_character_flag = half_high_elf
								has_character_flag = quarter_high_elf
							}
						}
						true_father = {
							NOR = {
								has_character_flag = half_high_elf
								has_character_flag = quarter_high_elf
							}
						}
					}
					set_character_flag = half_high_elf
				}
				1 = {
					modifier = {
						factor = 0
						mother = {
							NOR = {
								has_character_flag = half_blood_elf
								has_character_flag = quarter_blood_elf
							}
						}
						true_father = {
							NOR = {
								has_character_flag = half_blood_elf
								has_character_flag = quarter_blood_elf
							}
						}
					}
					set_character_flag = half_blood_elf
				}
			}
		}
		if = {
			limit = {
				mother = {
					trait = race_half_draenei
				}
				true_father = {
					trait = race_half_draenei
				}
			}
			set_character_flag = race_assigned
			add_trait = race_half_draenei
		}
		if = {
			limit = {
				mother = {
					trait = race_half_ogre
				}
				true_father = {
					trait = race_half_ogre
				}
			}
			set_character_flag = race_assigned
			add_trait = race_half_ogre
		}
		# For the few race traits with multiple GFXes
		if = {
			limit = {
				mother = {
					trait = race_orc
				}
				true_father = {
					trait = race_orc
				}
			}
			set_character_flag = race_assigned
			add_trait = race_orc
			random_list = {
				1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = rorcgfx }
						}
						true_father = {
							NOT = { graphical_culture = rorcgfx }
						}
					}
					set_graphical_culture = fel_orc
					add_trait = race_rorc
				 }
			 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = morcgfx }
						}
						true_father = {
							NOT = { graphical_culture = morcgfx }
						}
					}
					set_graphical_culture = mok_nathal
					add_trait = race_morc
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = borcgfx }
						}
						true_father = {
							NOT = { graphical_culture = borcgfx }
						}
					}
					set_graphical_culture = mag_har
					add_trait = race_borc
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = dorcgfx }
						}
						true_father = {
							NOT = { graphical_culture = dorcgfx }
						}
					}
					set_graphical_culture = blackrock
					add_trait = race_dorc
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = worcgfx }
						}
						true_father = {
							NOT = { graphical_culture = worcgfx }
						}
					}
					set_graphical_culture = shattered_hand
					add_trait = race_worc
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = gorcgfx }
						}
						true_father = {
							NOT = { graphical_culture = gorcgfx }
						}
					}
					set_graphical_culture = twilights_hammer
					add_trait = race_gorc
				 }
				 # Add more as needed
			}
		}
		if = {
			limit = {
				mother = {
					trait = race_dwarf
				}
				true_father = {
					trait = race_dwarf
				}
			}
			set_character_flag = race_assigned
			add_trait = race_dwarf
			random_list = {
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = bronzebeardgfx }
						}
						true_father = {
							NOT = { graphical_culture = bronzebeardgfx }
						}
					}
					set_graphical_culture = bronzebeard
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = blackdwarfgfx }
						}
						true_father = {
							NOT = { graphical_culture = blackdwarfgfx }
						}
					}
					set_graphical_culture = dark_iron
					add_trait = race_blackdwarf
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = wilddwarfgfx }
						}
						true_father = {
							NOT = { graphical_culture = wilddwarfgfx }
						}
					}
					set_graphical_culture = wildhammer
				 }
			}
		}
		if = {
			limit = {
				mother = {
					trait = race_dragon
				}
				true_father = {
					trait = race_dragon
				}
			}
			set_character_flag = race_assigned
			add_trait = race_dragon
			random_list = {
				1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = bronzedragongfx }
						}
						true_father = {
							NOT = { graphical_culture = bronzedragongfx }
						}
					}
					set_graphical_culture = bronze_dragonflight
					add_trait = race_bronzedragon
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = reddragongfx }
						}
						true_father = {
							NOT = { graphical_culture = reddragongfx }
						}
					}
					set_graphical_culture = red_dragonflight
					add_trait = race_reddragon
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = blackdragongfx }
						}
						true_father = {
							NOT = { graphical_culture = blackdragongfx }
						}
					}
					set_graphical_culture = black_dragonflight
					add_trait = race_blackdragon
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = bluedragongfx }
						}
						true_father = {
							NOT = { graphical_culture = bluedragongfx }
						}
					}
					set_graphical_culture = blue_dragonflight
					add_trait = race_bluedragon
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = greendragongfx }
						}
						true_father = {
							NOT = { graphical_culture = greendragongfx }
						}
					}
					set_graphical_culture = green_dragonflight
					add_trait = race_greendragon
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = infinitedragongfx }
						}
						true_father = {
							NOT = { graphical_culture = infinitedragongfx }
						}
					}
					set_graphical_culture = infinite_dragonflight
					add_trait = race_infinitedragon
				 }
				 1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { graphical_culture = nightdragongfx }
						}
						true_father = {
							NOT = { graphical_culture = nightdragongfx }
						}
					}
					set_graphical_culture = nightmare_dragonflight
					add_trait = race_nightdragon
				 }
				 # Add more as needed
			}
		}
		#For crossbreeds and the cases with sub-races
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_human
						}
						true_father = {
							TOW_race_pregnancy_is_human_compatible = yes
						}
					}
					AND = {
						true_father = {
							trait = race_human
						}
						mother = {
							TOW_race_pregnancy_is_human_compatible = yes
						}
					}
				}
			}
			set_character_flag = race_assigned
			add_trait = race_half_elf
			if = {
				limit = {
					OR = {
						mother = {
							OR = {
								trait = race_high_elf
								AND = {
									trait = race_wretched
									culture = high_elven
								}
							}
						}
						true_father = {
							OR = {
								trait = race_high_elf
								AND = {
									trait = race_wretched
									culture = high_elven
								}
							}
						}
					}
				}
				set_character_flag = half_high_elf
			}
			if = {
				limit = {
					OR = {
						mother = {
							OR = {
								trait = race_blood_elf
								AND = {
									trait = race_wretched
									culture = blood_elven
								}
							}
						}
						true_father = {
							OR = {
								trait = race_blood_elf
								AND = {
									trait = race_wretched
									culture = blood_elven
								}
							}
						}
					}
				}
				set_character_flag = half_blood_elf
			}
			#Add GFX when it is done
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_half_elf
						}
						true_father = {
							trait = race_human
						}
					}
					AND = {
						true_father = {
							trait = race_half_elf
						}
						mother = {
							trait = race_human
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						mother = {
							OR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
						true_father = {
							OR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
					}
				}
				set_character_flag = race_assigned
				add_trait = race_human
				set_graphical_culture = humangfx
			}
			if = {
				limit = {
					OR = {
						mother = {
							NOR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
						true_father = {
							NOR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
					}
				}
				set_character_flag = race_assigned
				add_trait = race_half_elf
				if = {
					limit = {
						OR = {
							mother = {
								has_character_flag = half_high_elf
							}
							true_father = {
								has_character_flag = half_high_elf
							}
						} 
					}
					set_character_flag = quarter_high_elf
				}
				if = {
					limit = {
						OR = {
							mother = {
								has_character_flag = half_blood_elf
							}
							true_father = {
								has_character_flag = half_blood_elf
							}
						} 
					}
					set_character_flag = quarter_blood_elf
				}
				#Add the GFX later
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_half_elf
						}
						true_father = {
							trait = race_high_elf
						}
					}
					AND = {
						true_father = {
							trait = race_half_elf
						}
						mother = {
							trait = race_high_elf
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						mother = {
							OR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
						true_father = {
							OR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
					}
				}
				set_character_flag = race_assigned
				add_trait = race_high_elf
				set_graphical_culture = helvengfx
			}
			if = {
				limit = {
					OR = {
						mother = {
							NOR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
						true_father = {
							NOR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
					}
				}
				set_character_flag = race_assigned
				add_trait = race_half_elf
				set_character_flag = quarter_high_elf
				#Add the GFX later
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_half_elf
						}
						true_father = {
							trait = race_blood_elf
						}
					}
					AND = {
						true_father = {
							trait = race_half_elf
						}
						mother = {
							trait = race_blood_elf
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						mother = {
							OR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
						true_father = {
							OR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
					}
				}
				set_character_flag = race_assigned
				add_trait = race_blood_elf
				set_graphical_culture = belvengfx
			}
			if = {
				limit = {
					OR = {
						mother = {
							NOR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
						true_father = {
							NOR = {
								has_character_flag = quarter_high_elf
								has_character_flag = quarter_blood_elf
							}
						}
					}
				}
				set_character_flag = race_assigned
				add_trait = race_blood_elf
				set_character_flag = quarter_blood_elf
				#Add the GFX later
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_orc
						}
						true_father = {
							trait = race_ogre
						}
					}
					AND = {
						mother = {
							trait = race_ogre
						}
						true_father = {
							trait = race_orc
						}
					}
				}
			}
			set_character_flag = race_assigned
			add_trait = race_half_ogre
			#Add GFX later
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_orc
						}
						true_father = {
							trait = race_half_ogre
						}
					}
					AND = {
						mother = {
							trait = race_half_ogre
						}
						true_father = {
							trait = race_orc
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						mother = {
							has_character_flag = quarter_orc
						}
						true_father = {
							has_character_flag = quarter_orc
						}
					}
				}
				set_character_flag = race_assigned
				add_trait = race_orc
				if = {
					limit = {
						true_father = {
							has_character_flag = quarter_orc
						}
					}
					true_father = {
						PREV = {
							set_graphical_culture = PREV
						}
					}
				}
				if = { # In this order so mother will be the overriding one
					limit = {
						mother = {
							has_character_flag = quarter_orc
						}
					}
					mother = {
						PREV = {
							set_graphical_culture = PREV
						}
					}
				}
			}
			if = {
				limit = {
					mother = {
						NOT = { has_character_flag = quarter_orc }
					}
					true_father = {
						NOT = { has_character_flag = quarter_orc }
					}
				}
				set_character_flag = race_assigned
				add_trait = race_half_ogre
				set_character_flag = quarter_orc
				#Add GFX later
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_ogre
						}
						true_father = {
							trait = race_half_ogre
						}
					}
					AND = {
						mother = {
							trait = race_half_ogre
						}
						true_father = {
							trait = race_ogre
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						mother = {
							has_character_flag = quarter_ogre
						}
						true_father = {
							has_character_flag = quarter_ogre
						}
					}
				}
				set_character_flag = race_assigned
				add_trait = race_ogre
				set_graphical_culture = boulderfist # All of them use the same GFX, so doesn't matter
			}
			if = {
				limit = {
					mother = {
						NOT = { has_character_flag = quarter_ogre }
					}
					true_father = {
						NOT = { has_character_flag = quarter_ogre }
					}
				}
				set_character_flag = race_assigned
				add_trait = race_half_ogre
				set_character_flag = quarter_ogre
				#Add GFX later
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_orc
						}
						true_father = {
							OR = {
								trait = race_draenei
								trait = race_broken
								trait = race_lost_one
							}
						}
					}
					AND = {
						mother = {
							OR = {
								trait = race_draenei
								trait = race_broken
								trait = race_lost_one
							}
						}
						true_father = {
							trait = race_orc
						}
					}
				}
			}
			set_character_flag = race_assigned
			add_trait = race_half_draenei
			#Add GFX later
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_orc
						}
						true_father = {
							trait = race_half_draenei
						}
					}
					AND = {
						mother = {
							trait = race_half_draenei
						}
						true_father = {
							trait = race_orc
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						mother = {
							has_character_flag = quarter_orc
						}
						true_father = {
							has_character_flag = quarter_orc
						}
					}
				}
				set_character_flag = race_assigned
				add_trait = race_orc
				if = {
					limit = {
						true_father = {
							has_character_flag = quarter_orc
						}
					}
					true_father = {
						PREV = {
							set_graphical_culture = PREV
						}
					}
				}
				if = { # In this order so mother will be the overriding one
					limit = {
						mother = {
							has_character_flag = quarter_orc
						}
					}
					mother = {
						PREV = {
							set_graphical_culture = PREV
						}
					}
				}
			}
			if = {
				limit = {
					mother = {
						NOT = { has_character_flag = quarter_orc }
					}
					true_father = {
						NOT = { has_character_flag = quarter_orc }
					}
				}
				set_character_flag = race_assigned
				add_trait = race_half_draenei
				set_character_flag = quarter_orc
				#Add GFX later
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							OR = {
								trait = race_draenei
								trait = race_broken
								trait = race_lost_one
							}
						}
						true_father = {
							trait = race_half_draenei
						}
					}
					AND = {
						mother = {
							trait = race_half_draenei
						}
						true_father = {
							OR = {
								trait = race_draenei
								trait = race_broken
								trait = race_lost_one
							}
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						mother = {
							has_character_flag = quarter_draenei
						}
						true_father = {
							has_character_flag = quarter_draenei
						}
					}
				}
				if = {
					limit = {
						OR = {
							mother = {
								trait = race_draenei
							}
							true_father = {
								trait = race_draenei
							}
						}
					}
					set_character_flag = race_assigned
					add_trait = race_draenei
					#Add GFX later
				}
				if = {
					limit = {
						OR = {
							mother = {
								trait = race_broken
							}
							true_father = {
								trait = race_broken
							}
						}
					}
					set_character_flag = race_assigned
					add_trait = race_broken
					#Add GFX later
				}
				if = {
					limit = {
						OR = {
							mother = {
								trait = race_lost_one
							}
							true_father = {
								trait = race_lost_one
							}
						}
					}
					set_character_flag = race_assigned
					add_trait = race_draenei
					#Add GFX later
				}
			}
			if = {
				limit = {
					mother = {
						NOT = { has_character_flag = quarter_draenei }
					}
					true_father = {
						NOT = { has_character_flag = quarter_draenei }
					}
				}
				set_character_flag = race_assigned
				add_trait = race_half_draenei
				set_character_flag = quarter_draenei
				#Add GFX later
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_draenei
						}
						true_father = {
							trait = race_broken
						}
					}
					AND = {
						true_father = {
							trait = race_draenei
						}
						mother = {
							trait = race_broken
						}
					}
				}
			}
			random_list = {
				1 = {
					set_character_flag = race_assigned
					add_trait = race_draenei
					#Add GFX later
				}
				1 = {
					set_character_flag = race_assigned
					add_trait = race_broken
					#Add GFX later
				}
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_lost_one
						}
						true_father = {
							trait = race_broken
						}
					}
					AND = {
						true_father = {
							trait = race_lost_one
						}
						mother = {
							trait = race_broken
						}
					}
				}
			}
			random_list = {
				1 = {
					set_character_flag = race_assigned
					add_trait = race_lost_one
					#Add GFX later
				}
				1 = {
					set_character_flag = race_assigned
					add_trait = race_broken
					#Add GFX later
				}
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_draenei
						}
						true_father = {
							trait = race_lost_one
						}
					}
					AND = {
						true_father = {
							trait = race_draenei
						}
						mother = {
							trait = race_lost_one
						}
					}
				}
			}
			set_character_flag = race_assigned
			add_trait = race_broken
			#Add GFX later
		}
		if = {
			limit = {
				mother = {
					OR = {
						trait = race_troll_forest
						trait = race_troll_ice
						trait = race_troll_dark
						trait = race_troll_jungle
						trait = race_troll_sand
						trait = race_troll_zandalari
					}
				}
				true_father = {
					OR = {
						trait = race_troll_forest
						trait = race_troll_ice
						trait = race_troll_dark
						trait = race_troll_jungle
						trait = race_troll_sand
						trait = race_troll_zandalari
					}
				}
			}
			random_list = {
				1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { trait = race_troll_forest }
						}
						true_father = {
							NOT = { trait = race_troll_forest }
						}
					}
					set_character_flag = race_assigned
					add_trait = race_troll_forest
					set_graphical_culture = amani
				}
				1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { trait = race_troll_ice }
						}
						true_father = {
							NOT = { trait = race_troll_ice }
						}
					}
					set_character_flag = race_assigned
					add_trait = race_troll_ice
					set_graphical_culture = drakkari
				}
				1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { trait = race_troll_dark }
						}
						true_father = {
							NOT = { trait = race_troll_dark }
						}
					}
					set_character_flag = race_assigned
					add_trait = race_troll_dark
					set_graphical_culture = shadowtooth
				}
				1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { trait = race_troll_jungle }
						}
						true_father = {
							NOT = { trait = race_troll_jungle }
						}
					}
					set_character_flag = race_assigned
					add_trait = race_troll_jungle
					set_graphical_culture = gurubashi
				}
				1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { trait = race_troll_sand }
						}
						true_father = {
							NOT = { trait = race_troll_sand }
						}
					}
					set_character_flag = race_assigned
					add_trait = race_troll_sand
					set_graphical_culture = sandfury
				}
				1 = {
					modifier = {
						factor = 0
						mother = {
							NOT = { trait = race_troll_zandalari }
						}
						true_father = {
							NOT = { trait = race_troll_zandalari }
						}
					}
					set_character_flag = race_assigned
					add_trait = race_troll_zandalari
					set_graphical_culture = zandalari
				}
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						mother = {
							trait = race_orc
						}
						true_father = {
							trait = race_pale_orc
						}
					}
					AND = {
						true_father = {
							trait = race_orc
						}
						mother = {
							trait = race_pale_orc
						}
					}
				}
			}
			random_list = {
				1 = {
					set_character_flag = race_assigned
					add_trait = race_orc
					if = {
						limit = {
							true_father = {
								trait = race_orc
							}
						}
						true_father = {
							PREV = {
								set_graphical_culture = PREV
							}
						}
					}
					if = {
						limit = {
							mother = {
								trait = race_orc
							}
						}
						mother = {
							PREV = {
								set_graphical_culture = PREV
							}
						}
					}
				}
				1 = {
					set_character_flag = race_assigned
					add_trait = race_pale_orc
					if = {
						limit = {
							true_father = {
								trait = race_pale_orc
							}
						}
						true_father = {
							PREV = {
								set_graphical_culture = PREV
							}
						}
					}
					if = {
						limit = {
							mother = {
								trait = race_pale_orc
							}
						}
						mother = {
							PREV = {
								set_graphical_culture = PREV
							}
						}
					}
				}
			}
		}
		#If both parents are corrupted
		if = {
			limit = {
				mother = {
					OR = {
						trait = fel_touched
						trait = fel_tainted
						trait = fel_corrupted
						trait = felsworn
					}
				}
				true_father = {
					OR = {
						trait = fel_touched
						trait = fel_tainted
						trait = fel_corrupted
						trait = felsworn
					}
				}
			}
			random_list = {
				1 = {
					modifier = {
						factor = 0
						OR = {
							AND = {
								mother = {
									trait = fel_touched
								}
								true_father = {
									OR = {
										trait = fel_tainted
										trait = fel_corrupted
										trait = felsworn
									}
								}
							}
							AND = {
								mother = {
									OR = {
										trait = fel_tainted
										trait = fel_corrupted
										trait = felsworn
									}
								}
								true_father = {
									trait = fel_touched
								}
							}
							AND = {
								mother = {
									OR = {
										trait = fel_tainted
										trait = fel_corrupted
										trait = felsworn
									}
								}
								true_father = {
									OR = {
										trait = fel_tainted
										trait = fel_corrupted
										trait = felsworn
									}
								}
							}
						}
					}
					add_trait = fel_traces
				}
				1 = {
					modifier = {
						factor = 0
						OR = {
							AND = {
								mother = {
									trait = fel_tainted
								}
								true_father = {
									OR = {
										trait = fel_corrupted
										trait = felsworn
									}
								}
							}
							AND = {
								mother = {
									OR = {
										trait = fel_corrupted
										trait = felsworn
									}
								}
								true_father = {
									trait = fel_tainted
								}
							}
							AND = {
								mother = {
									OR = {
										trait = fel_corrupted
										trait = felsworn
									}
								}
								true_father = {
									OR = {
										trait = fel_corrupted
										trait = felsworn
									}
								}
							}
						}
					}
					add_trait = fel_touched
					trigger_switch = {
						on_trigger = trait
						race_high_elf = {
							set_graphical_culture = blood_elven
						}
					}
				}
				1 = {
					modifier = {
						factor = 0
						mother = {
							NOR = {
								trait = fel_tainted
								trait = fel_corrupted
								trait = felsworn
							}
						}
						true_father = {
							NOR = {
								trait = fel_tainted
								trait = fel_corrupted
								trait = felsworn
							}
						}
					}
					add_trait = fel_tainted
					trigger_switch = {
						on_trigger = trait
						race_high_elf = {
							set_graphical_culture = blood_elven
						}
					}
				}
			}
		}
		#If one parent is corrupted
		if = {
			limit = {
				OR = {
					mother = {
						OR = {
							trait = fel_touched
							trait = fel_tainted
							trait = fel_corrupted
							trait = felsworn
						}
					}
					true_father = {
						OR = {
							trait = fel_touched
							trait = fel_tainted
							trait = fel_corrupted
							trait = felsworn
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						mother = {
							trait = fel_touched
						}
						true_father = {
							trait = fel_touched
						}
					}
				}
				random_list = {
					1 = {
						#nothing
					}
					1 = {
						add_trait = fel_traces
					}
				}
			}
			if = {
				limit = {
					OR = {
						mother = {
							trait = fel_tainted
						}
					}
					OR = {
						father = {
							trait = fel_tainted
						}
					}
				}
				random_list = {
					1 = {
						add_trait = fel_traces
					}
					1 = {
						add_trait = fel_touched
					}
				}
			}
			if = {
				limit = {
					OR = {
						mother = {
							trait = fel_corrupted
						}
					}
					OR = {
						father = {
							trait = fel_corrupted
						}
					}
				}
				random_list = {
					1 = {
						add_trait = fel_touched
					}
					1 = {
						add_trait = fel_tainted
						trigger_switch = {
							on_trigger = trait
							race_high_elf = {
								set_graphical_culture = blood_elven
							}
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						mother = {
							trait = felsworn
						}
					}
					OR = {
						father = {
							trait = felsworn
						}
					}
				}
				add_trait = fel_tainted
				trigger_switch = {
					on_trigger = trait
					race_high_elf = {
						set_graphical_culture = blood_elven
					}
				}
			}
		}
		# In case the flag hasn't been assigned
		if = {
			limit = {
				NOT = { has_character_flag = race_assigned }
			}
			TOW_initialize_character_race_from_culture = yes
			log = " -- TOW -- : TOW.51: Race not assigned for [This.GetBestName]. New race [This.TOW_GetRace] from culture [This.Culture.GetName]."
			true_father = { log = " -- TOW -- : TOW.51: True Father Race : [This.TOW_GetRace]" }
			mother = { log = " -- TOW -- : TOW.51: Mother Race : [This.TOW_GetRace]" }
		}
	}
}


character_event = { # this is for on_new_holder (for auto-generated new barons) and on_yearly_pulse (for auto-generated courtiers)
	id = TOW.52
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { TOW_has_race = no }
	
	immediate = {
		TOW_initialize_character = yes
	}
}

character_event = { # On change of ruler, repeat the previous events for the court

	id = TOW.53
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		any_courtier = {
			limit = { TOW_has_race = no }
			TOW_initialize_character = yes
		}
	}
}

character_event = { # this is for on_marriage
	id = TOW.54
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { FROM = { TOW_has_race = no } }
	
	immediate = {
		FROM = { TOW_initialize_character_race_from_culture = yes }
	}
}

character_event = { # this is for on_startup
	id = TOW.55
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { TOW_has_race = no }
	
	immediate = {
		TOW_initialize_character_race_from_culture = yes
	}
}

# Assign race to ruler designed chars
character_event = {
	id = TOW.56
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		is_save_game = no
		1 = { holder_scope = { character = ROOT } }
	}
	immediate = {
		any_player = {
			limit = {
				TOW_has_race = no
			}
			TOW_initialize_character_race_from_culture = yes
		}
	}
}