namespace = TOW

# Reserved : TOW.50 to TOW.51

#when creating a character via history, event or decision, make sure to give them the appropriate culture, graphical_culture and trait there

#on_birth: Assigning race trait depending on parents
character_event = {

	id = TOW.51
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		if = {
			limit = {
				mother = { TOW_has_race_trait = no }
			}
			mother = { TOW_initialize_character_race_from_culture = yes }
		}
		if = {
			limit = {
				true_father = { TOW_has_race_trait = no }
			}
			true_father = { TOW_initialize_character_race_from_culture = yes }
		}
		TOW_initialize_character_race_from_parents = yes
		# In case the flag hasn't been assigned
		if = {
			limit = {
				NOT = { has_character_flag = race_assigned }
			}
			TOW_initialize_character_race_from_culture = yes
			#log = " -- TOW -- : TOW.51: TOW_initialize_character_race_from_parents failed for [This.GetBestName]."
			#true_father = { log = " -- TOW -- : True Father [This.GetBestName]. Race : [This.TOW_GetFullRace]" }
			#mother = { log = " -- TOW -- : Mother [This.GetBestName]. Race : [This.TOW_GetFullRace]" }
		}
	}
}


character_event = { # this is for on_new_holder (for auto-generated new barons) and on_yearly_pulse (for auto-generated courtiers)
	id = TOW.52
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { TOW_has_race = no }
	
	immediate = {
		TOW_initialize_adult_character = yes
	}
}

character_event = { # On change of ruler, repeat the previous events for the court

	id = TOW.53
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		any_courtier = {
			limit = { TOW_has_race = no }
			TOW_initialize_adult_character = yes
		}
	}
}

character_event = { # this is for on_marriage
	id = TOW.54
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { FROM = { TOW_has_race = no } }
	
	immediate = {
		#FROM = { log = " -- TOW -- : TOW.54: TOW_initialize_character_race_from_culture for [This.GetBestName]." }
		FROM = { TOW_initialize_character_race_from_culture = yes }
	}
}

character_event = { # this is for on_startup
	id = TOW.55
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { TOW_has_race = no }
	
	immediate = {
		#log = " -- TOW -- : TOW.55: TOW_initialize_character_race_from_culture for [This.GetBestName]."
		TOW_initialize_character_race_from_culture = yes
	}
}

# Assign race to ruler designed chars
character_event = {
	id = TOW.56
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		is_save_game = no
		1 = { holder_scope = { character = ROOT } }
	}
	immediate = {
		character_event = { id = TOW.57 days = 1 }
	}
}

# Assign race to ruler designed chars
character_event = {
	id = TOW.57
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		any_player = {
			limit = {
				TOW_has_race = no
			}
			#log = " -- TOW -- : TOW.56: TOW_initialize_character_race_from_culture for [This.GetBestName]."
			TOW_initialize_character_race_from_culture = yes
		}
	}
}