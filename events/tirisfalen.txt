namespace = tirisfalen

# TOW TODO : replace duel.1 event id

#Demons appear near Dalaran
narrative_event = {
	id = tirisfalen.1
	title = EVTTITLETIRIS.1 # Demons!
	desc = EVTDESCTIRIS.1 # There have been reports of strange creatures, identified as demons by some of the elves residing in the city, in various locations close to Dalaran. Perhaps you should contact Quel'Thalas about this issue.
	picture = GFX_evt_corruption
	border = GFX_event_narrative_frame_intrigue
	
	mean_time_to_happen = {
		years = 150
	}

	trigger = {
		NOT = { has_global_flag = tirisfalen_start }
		NOT = {
			has_game_rule = {
				name = troll_wars_events
				value = off
			}
		}
		OR = {
			has_landed_title = k_dalaran
			AND = {
				NOT = { is_title_active = k_dalaran }
				has_landed_title = d_dalaran
			}
			AND = {
				NOT = { is_title_active = k_dalaran }
				NOT = { is_title_active = d_dalaran }
				has_landed_title = c_dalaran
			}
		}
		government = kirin_tor_government
	}
	
	immediate = {
		set_global_flag = tirisfalen_start
		15 = {
			prov_corruption_nochar_guaranteed = yes
		}
	}
	
	option = {
		ai_chance = {
			factor = 1
			modifier = {
				factor = 50
				has_game_rule = {
					name = troll_wars_events
					value = alternate
				}
			}
		}
		name = EVTOPTTIRIS.1a # We can deal with it on our own!
		set_global_flag = tirisfalen_noelves
	}
	
	option = {
		trigger = {
			is_title_active = k_silvermoon
			k_silvermoon = {
				holder_scope = {
					OR = {
						trait = high_elf
						trait = blood_elf
					}
				}
			}
		}
		ai_chance = {
			factor = 100
		}
		name = EVTOPTTIRIS.1b # Let's ask the elves for help!
		character_event = { id = tirisfalen.3 }
	}
}

#Demon incursion on Dalaran
narrative_event = {
	id = tirisfalen.2
	title = EVTTITLETIRIS.1 # Demons!
	desc = EVTDESCTIRIS.2 # A host of demons from beyond the world has appeared near Dalaran and marches for the city, attracted by the rampant use of arcane magic in it! They must be driven back, or the violet city will burn!
	picture = GFX_evt_corruption
	border = GFX_event_narrative_frame_war
	
	mean_time_to_happen = {
		years = 5
	}
	
	trigger = {
		has_global_flag = tirisfalen_start
		has_global_flag = tirisfalen_noelves
		NOT = { has_global_flag = tirisfalen_end }
		OR = {
			has_landed_title = k_dalaran
			AND = {
				NOT = { is_title_active = k_dalaran }
				has_landed_title = d_dalaran
			}
			AND = {
				NOT = { is_title_active = k_dalaran }
				NOT = { is_title_active = d_dalaran }
				has_landed_title = c_dalaran
			}
		}
		government = kirin_tor_government
	}
	
	option = {
		set_global_flag = tirisfalen_end
		name = EVTOPTTIRIS.2 # Dalaran shall not fall!
		create_character = {
			age = 666
			name = Kathra'nathir
			culture = nathrezim
			religion = burning_legion
			dynasty = random
			employer = THIS
			female = no
			trait = dreadlord
			flag = race_assigned
			random_traits = yes
		}
		new_character = {
			create_title = {
				tier = DUKE
				landless = yes
				temporary = yes
				culture = nathrezim
				name = "LEGION_INVADERS"
				holder = THIS
			}
			set_defacto_liege = e_burning_legion
			remove_trait = kind
			remove_trait = humble
			remove_trait = chaste
			remove_trait = charitable
			set_government_type = demon_government
			add_artifact = apocalypse
			wealth = 500
			15 = {
				PREV = {
					spawn_unit = {
						owner = THIS
						province = PREV
						home = PREV
						leader = THIS
						troops = {
							light_infantry = { 50 50 }
							heavy_infantry = { 30 30 }
							archers = { 30 30 }
							war_beasts = { 20 20 }
						}
						maintenance_multiplier = 1
						is_looter = no
						can_toggle_looting = no
						reinforces = no
						match_character = PREVPREVPREV
						match_mult = 1
						match_min = 500
					}
				}
			}
		}
		ROOT = {
			primary_title = {
				new_character = {
					war = {
						target = ROOT
						infamy = 0
						casus_belli = invasion
						thirdparty_title = PREV
					}
				}
			}
		}
	}
}

#Elves consulted
character_event = {
	id = tirisfalen.3
	desc = EVTDESCTIRIS.3 # The elves explain to you that the demons have been attracted by the massive use of arcane magic across Dalaran. They suggest limiting the use of magic to remedy this.
	picture = "GFX_evt_lorthemar"
	border = "GFX_event_normal_frame_diplomacy"
	
	is_triggered_only = yes
	
	option = {
		ai_chance = {
			factor = 1
			modifier = {
				factor = 50
				has_game_rule = {
					name = troll_wars_events
					value = alternate
				}
			}
		}
		name = EVTOPTTIRIS.3a # Very well.
		15 = {
			add_province_modifier = { name = restricted_magic duration = 36500 }
		}
		set_global_flag = tirisfalen_end
	}
	
	option = {
		ai_chance = {
			factor = 1
			modifier = {
				factor = 50
				has_game_rule = {
					name = troll_wars_events
					value = alternate
				}
			}
		}
		name = EVTOPTTRIS.3b # Bah! We can just kill the demons as they appear.
		set_global_flag = tirisfalen_noelves
	}
	
	option = {
		ai_chance = {
			factor = 100
		}
		name = EVTOPTTIRIS.3c # Perhaps there's another way...
		custom_tooltip = { text = EVTTOOLTIPTIRIS.3 } # A secret order will be created to deal with the threat.
		narrative_event = { id = tirisfalen.4 }
	}
}

#COUNCIL OF TIRISFAL
narrative_event = {
	id = tirisfalen.4
	title = EVTTITLETIRIS.4 # The Council of Tirisfal
	desc = EVTDESCTIRIS.4 # You issue the decree, an extremely secret group of only the best the magi in the Northlands. Its duty to combat demonic influence and guide the human realms as needed, always covertly. The first target of the order has already been decided: a dreadlord, Kathra'nathir. His location is yet uknown, but diviners are already hard at work to find him.
	picture = "GFX_evt_council_of_six"
	border = "GFX_event_narrative_frame_diplomacy"
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTTIRIS.4 # We must fight the demons!
		set_global_flag = tirisfalen_council_founded
		join_society = council_of_tirisfal
		set_society_grandmaster = yes
		hidden_tooltip = {
			create_character = {
				age = 100
				name = Meryl
				dynasty = 101013
				attributes = {
					learning = 17
				}
				culture = arathi
				religion = arcane
				random_traits = yes
				female = no
				historical = yes
				trait = human
				trait = undead_generic
				trait = warlock
				trait = mage_fake
				flag = race_assigned
				flag = has_adv_class
				flag = secret_warlock
			}
			new_character = {
				add_character_modifier = { modifier = evocation_fake duration = -1 }
				join_society = council_of_tirisfal
				banish = yes
			}
		}
	}
}

#The banishing of Kathra'nathir
character_event = {
	id = tirisfalen.5
	desc = EVTDESCTIRIS.5 # Your agents finally find the dreadlord that is terrorizing Dalaran. Kathra'nathir. This nathrezim reportedly has slaughtered entire armies with his blade, Apocalypse. You and the rest of the Council corner him and start to channel their powers into you, the spearhead. This will not be easy.
	picture = GFX_evt_dreadlord
	border = GFX_event_normal_frame_intrigue
	
	mean_time_to_happen = {
		years = 2
	}
	
	trigger = {
		has_global_flag = tirisfalen_council_founded
		society_member_of = council_of_tirisfal
		society_rank = 4
		NOT = { has_global_flag = tirisfalen_end }
	}
	
	immediate = {
		set_global_flag = tirisfalen_end
	}
	
	option = {
		trigger = {
			NOT = { true_religion = burning_legion }
		}
		name = EVTOPTTIRIS.5a # You will fall, demon!
		random_list = {
			20 = {
				modifier = {
					factor = 0.5
					has_game_rule = {
						name = troll_wars_events
						value = alternate
					}
				}
				custom_tooltip = { text = EVTTOOLTIP.5aa } # You banish the dreadlord, at a cost.
				add_artifact = apocalypse
				prestige = 500
				any_society_member = {
					limit = {
						society_member_of = council_of_tirisfal
						NOT = { character = ROOT }
					}
					character_event = { id = tirisfalen.6 }
				}
			}
			10 = {
				modifier = {
					factor = 2
					has_game_rule = {
						name = troll_wars_events
						value = alternate
					}
				}
				custom_tooltip = { text = EVTTOOLTIP.5ab } # You banish the dreadlord.
				add_artifact = apocalypse
				prestige = 100
				any_society_member = {
					limit = {
						society_member_of = council_of_tirisfal
						NOT = { character = ROOT }
					}
					character_event = { id = tirisfalen.7 }
				}
			}
			1 = {
				modifier = {
					factor = 3
					has_game_rule = {
						name = troll_wars_events
						value = alternate
					}
				}
				custom_tooltip = { text = EVTTOOLTIP.5ac } # The dreadlord overpowers you.
				death = { death_reason = death_murder }
				any_society_member = {
					limit = {
						society_member_of = council_of_tirisfal
						NOT = { character = ROOT }
					}
					character_event = { id = tirisfalen.8 }
				}
				any_playable_ruler = {
					limit = {
						OR = {
							has_landed_title = k_dalaran
							AND = {
								NOT = { is_title_active = k_dalaran }
								has_landed_title = d_dalaran
							}
							AND = {
								NOT = { is_title_active = k_dalaran }
								NOT = { is_title_active = d_dalaran }
								has_landed_title = c_dalaran
							}
						}
					}
					narrative_event = { id = tirisfalen.2 }
				}
				set_global_flag = tirisfalen_council_destroyed
			}
		}
	}
	
	option = {
		trigger = {
			true_religion = burning_legion
		}
		name = EVTOPTTIRIS.5b # For the Legion!
		custom_tooltip = { text = EVTTOOLTIPTIRIS.5b } # Turn against your peers.
		any_society_member = {
			limit = {
				society_member_of = council_of_tirisfal
				NOT = { character = ROOT }
			}
			character_event = { id = tirisfalen.9 }
		}
		set_global_flag = tirisfalen_council_destroyed
		create_character = {
			age = 666
			name = Kathra'nathir
			culture = nathrezim
			religion = burning_legion
			dynasty = random
			female = no
			trait = dreadlord
			flag = race_assigned
			random_traits = yes
		}
		new_character = {
			create_title = {
				tier = DUKE
				landless = yes
				temporary = yes
				culture = nathrezim
				name = "LEGION_INVADERS"
				holder = THIS
			}
			set_defacto_liege = e_burning_legion
			remove_trait = kind
			remove_trait = humble
			remove_trait = chaste
			remove_trait = charitable
			set_government_type = demon_government
			add_artifact = apocalypse
			15 = {
				PREV = {
					spawn_unit = {
						owner = THIS
						province = PREV
						home = PREV
						leader = THIS
						troops = {
							light_infantry = { 50 50 }
							heavy_infantry = { 30 30 }
							archers = { 30 30 }
							war_beasts = { 20 20 }
						}
						maintenance_multiplier = 1
						is_looter = no
						can_toggle_looting = no
						reinforces = no
						match_character = PREVPREVPREV
						match_mult = 0.8
						match_min = 500
					}
				}
			}
			if = {
				limit = {
					ROOT = {
						is_title_active = k_dalaran
						NOT = { has_landed_title = k_dalaran }
					}
					k_dalaran = {
						holder_scope = {
							government = kirin_tor_government
						}
					}
				}
				k_dalaran = {
					holder_scope = {
						ROOT = {
							war = {
								target = PREV
								infamy = 0
								casus_belli = invasion
								thirdparty = PREV
							}
						}
					}
				}
			}
			if = {
				limit = {
					ROOT = {
						NOT = { is_title_active = k_dalaran }
						is_title_active = d_dalaran
						NOT = { has_landed_title = d_dalaran }
					}
					d_dalaran = {
						holder_scope = {
							government = kirin_tor_government
						}
					}
				}
				d_dalaran = {
					holder_scope = {
						ROOT = {
							war = {
								target = PREV
								infamy = 0
								casus_belli = invasion
								thirdparty = PREV
							}
						}
					}
				}
			}
			if = {
				limit = {
					ROOT = {
						NOT = { is_title_active = k_dalaran }
						NOT = { is_title_active = d_dalaran }
						is_title_active = c_dalaran
						NOT = { has_landed_title = c_dalaran }
					}
					c_dalaran = {
						holder_scope = {
							government = kirin_tor_government
						}
					}
				}
				c_dalaran = {
					holder_scope = {
						ROOT = {
							war = {
								target = PREV
								infamy = 0
								casus_belli = invasion
								thirdparty = PREV
							}
						}
					}
				}
			}
		}
	}
}

#Kathra'nathir banished with no losses
character_event = {
	id = tirisfalen.6
	desc = EVTDESCTIRIS.6 # Lead by the spearhead, [From.GetBestName], you and your peers corner the foul dreadlord Kathra'nathir and banish him from Azeroth. If he returns, it won't be for a very long time.
	picture = GFX_evt_dreadlord
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = AKGREAT
	}
}

#Kathra'nathir banished with some losses
character_event = {
	id = tirisfalen.7
	desc = EVTDESCTIRIS.7 # Lead by the spearhead, [From.GetBestName], you and your peers corner the foul dreadlord Kathra'nathir and banish him from Azeroth. If he returns, it won't be for a very long time. Unfortunately, not all survive the event.
	picture = GFX_evt_dreadlord
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = AKDAMN
		random = {
			chance = 5
			death = { death_reason = death_murder }
		}
	}
}

#Kathra'nathir wins
character_event = {
	id = tirisfalen.8
	desc = EVTDESCTIRIS.8 # Lead by the spearhead, [From.GetBestName], you and your peers corner the foul dreadlord Kathra'nathir. Unfortunately, it seems you underestimated the demon's power, for he slaughters his way through the assembled magi with claws and magic.
	picture = GFX_evt_dreadlord
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = AKDAMN
		random = {
			chance = 25
			death = { death_reason = death_murder }
		}
	}
}

#Betrayal!
character_event = {
	id = tirisfalen.9
	desc = EVTDESCTIRIS.9 # Betrayal! The spearhead, [From.GetBestName], had been working with the dreadlord all along! As soon as your power was channeled into [From.GetHerHim], [From.GetSheHe] and the demon started slaughtering the assembled magi.
	picture = GFX_evt_dreadlord
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = AKDAMN
		random = {
			chance = 50
			death = { death_reason = death_murder }
		}
	}
}

#Guardian proposal
character_event = {
	id = tirisfalen.10
	desc = EVTDESCTIRIS.10 # While the Council's current method of fighting demons, having the the Council members empower the current spearhead, work, it has its downsides. The greatest of which is that it requires all of the magi to assemble together and be constantly near the spearhead, leaving them vunlnerable to attacks. A member of the council instead proposes a ritual that would empower a mage into a sort of guardian, who'd then range across the land rooting out demons and cultists, returning after a century of service to pass on the mantle.
	picture = GFX_evt_guardian
	border = GFX_event_normal_frame_diplomacy
	
	mean_time_to_happen = {
		years = 200
	}
	
	trigger = {
		NOT = {
			has_game_rule = {
				name = troll_wars_events
				value = off
			}
		}
		has_global_flag = tirisfalen_end
		NOT = { has_global_flag = tirisfalen_council_destroyed }
		NOT = { has_global_flag = guardian_start }
		society_member_of = council_of_tirisfal
		society_rank = 4
	}
	
	immediate = { set_global_flag = guardian_start }
	
	option = {
		ai_chance = {
			factor = 100
		}
		name = EVTOPTTIRIS.10a # It just might work...
		custom_tooltip = { text = EVTTOOLTIPTIRIS.10 } # An apprentice is selected for the role.
		create_character = {
			age = 20
			name = Alodi
			trait = guardian_of_tirisfal
			dynasty = none
			culture = dalaranian
			trait = human
			flag = race_assigned
			trait = mage
			flag = has_adv_class
			religion = arcane
			historical = yes
			female = no
		}
		new_character = {
			add_artifact = ebonchill
			add_artifact = atiesh
			save_event_target_as = guardian
		}
		any_society_member = {
			limit = {
				society_member_of = council_of_tirisfal
			}
			narrative_event = { id = tirisfalen.11 }
		}
	}
	
	option = {
		ai_chance = {
			factor = 1
			modifier = {
				factor = 50
				has_game_rule = {
					name = troll_wars_events
					value = alternate
				}
			}
		}
		name = EVTOPTTIRIS.10b # No, it'll never work.
		set_global_flag = guardian_end
	}
}

#The First Guardian
narrative_event = {
	id = tirisfalen.11
	title = EVTTITLETIRIS.11 # The First Guardian
	desc = EVTDESCTIRIS.11 # A new way to fight the corrupting influence of the Legion has been devised. Instead of the risky method of empowering the spearhead on the battlefield itself, a new ritual was devised in order to grant powers, in a long-term fashion, to a promising apprentice selected from the ranks of Dalaran's finest. This Guardian of Tirisfal will range across the world, rooting out corruption and demons wherever they hide. And after a hundred years of service, they will return to the council so that another Guardian may be chosen to replace them. The first of this line has already been selected: Alodi, an orphaned half-elf apprentice who shows great promise.
	picture = GFX_evt_guardian
	border = GFX_event_narrative_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = OK
		hidden_tooltip = {
			event_target:guardian = {
				set_government_type = guardian_government
				character_event = { id = tirisfalen.12 days = 36400 random = 100 }
			}
		}
	}
}

#Guardian is recalled.
character_event = {
	id = tirisfalen.12
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_alive = yes
	}
	
	immediate = {
		any_society_member = {
			limit = {
				society_member_of = council_of_tirisfal
				society_rank = 4
			}
			ROOT = {
				move_character = PREV
			}
		}
		random_list = {
			100 = {
				modifier = {
					factor = 0
					has_character_flag = guardian_sargeras
				}
				set_character_flag = guardian_accepted
				any_society_member = {
					limit = {
						society_member_of = council_of_tirisfal
					}
					character_event = { id = tirisfalen.14 }
				}
			}
			1 = {
				modifier = {
					factor = 0
					NOT = {
						has_game_rule = {
							name = troll_wars_events
							value = alternate
						}
					}
					NOT = { has_character_flag = guardian_aegwynn }
				}
				modifier = {
					factor = 100
					has_character_flag = guardian_aegwynn
				}
				e_zandalar = {
					holder_scope = {
						ROOT = {
							move_character = PREV
						}
					}
				}
				set_character_flag = guardian_refused
				any_society_member = {
					limit = {
						society_member_of = council_of_tirisfal
					}
					character_event = { id = tirisfalen.15 }
				}
			}
		}
	}
}

#Guardian dies.
character_event = {
	id = tirisfalen.13
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		event_target:guardian = {
			character = ROOT
			NOT = { has_character_flag = guardian_aegwynn }
		}
	}
	
	immediate = {
		set_character_flag = guardian_died
		any_society_member = {
			limit = {
				society_member_of = council_of_tirisfal
			}
			character_event = { id = tirisfalen.14 }
		}
	}
}

#New guardian selection ping
character_event = {
	id = tirisfalen.14
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		event_target:guardian = {
			save_event_target_as = old_guardian
			remove_trait = guardian_of_tirisfal
			set_government_type = kirin_tor_government
			clear_event_target = guardian
		}
		create_character = {
			age = 20
			trait = guardian_of_tirisfal
			dynasty = none
			culture = dalaranian
			trait = human
			flag = race_assigned
			trait = mage
			flag = has_adv_class
			religion = arcane
			historical = yes
		}
		new_character = {
			save_event_target_as = guardian
			set_government_type = guardian_government
			event_target:old_guardian = {
				any_artifact = {
					transfer_artifact = {
						from = PREV
						to = PREVPREV
					}
				}
			}
			character_event = { id = tirisfalen.12 days = 36400 random = 100 }
		}
	}
}

#New guardian
character_event = {
	id = tirisfalen.15
	desc = {
		trigger = {
			OR = {
				event_target:old_guardian = {
					has_character_flag = guardian_accepted
				}
				event_target:guardian = {
					has_character_flag = guardian_accepted
				}
			}
		}
		text = EVTDESCTIRIS.15a # The time has come for Magna [old_guardian.GetFirstName] to pass on the mantle of Guardian of Tirisfal to another. Dutifuly, [old_guardian.GetSheHe] returns [old_guardian.GetHerHis] powers back to the Council, who pass it on to the next Guardian, [guardian.GetFirstName].
	}
	desc = {
		trigger = {
			OR = {
				event_target:old_guardian = {
					has_character_flag = guardian_died
				}
				event_target:guardian = {
					has_character_flag = guardian_died
				}
			}
		}
		text = EVTDESCTIRIS.15b # With the death of Magna [old_guardian.GetFirstName], [old_guardian.GetFirstName] return to the Council. Another Guardian is then appointed, [guardian.GetFirstName].
	}
	desc = {
		trigger = {
			event_target:guardian = {
				has_character_flag = guardian_refused
			}
		}
		text = EVTDESCTIRIS.15c # The unthinkable has happened! The Guardian, [guardian.GetFirstName], has turned [guardian.GetHerHis] back on the Council, calling you a group of power-mongers and manipulators, and refused to return [guardian.GetHerHis] powers! [guardian.GetSheHe] has stormed off to places unknown, but who knows what [guardian.GetSheHe] might do!
	}
	picture = GFX_evt_guardian
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			NOT = {
				event_target:guardian = {
					has_character_flag = guardian_refused
				}
			}
		}
		name = OK
	}
	
	option = {
		ai_chance = {
			factor = 1
			modifier = {
				factor = 50
				has_game_rule = {
					name = troll_wars_events
					value = alternate
				}
			}
		}
		trigger = {
			event_target:guardian = {
				has_character_flag = guardian_refused
			}
		}
		name = EVTOPTTIRIS.15b # This is an outrage!
	}
	
	option = {
		ai_chance = {
			factor = 100
		}
		trigger = {
			event_target:guardian = {
				has_character_flag = guardian_refused
			}
		}
		name = EVTOPTTIRIS.15c # If the Guardian won't return by [guardian.GetHerselfHimself], we will make [guardian.GetHerHim] submit.
		custom_tooltip = { text = EVTTOOLTIPTIRIS.15 } # Create a new order to hunt down the Guardian.
		set_global_flag = tirisfalen_guard_founded
	}
}

#Guardian dies ("Aegwynn").
character_event = {
	id = tirisfalen.16
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		event_target:guardian = {
			character = ROOT
			has_character_flag = guardian_aegwynn
		}
	}
	
	immediate = {
		set_character_flag = guardian_died
		any_society_member = {
			limit = {
				OR = {
					society_member_of = council_of_tirisfal
					society_member_of = tirisgarde
				}
			}
			character_event = { id = tirisfalen.17 }
		}
	}
}

#"Aegwynn" dies
character_event = {
	id = tirisfalen.17
	desc = EVTDESCTIRIS.17 # The renegade Guardian, [guardian.GetFirstName], has finally died. With [guardian.GetHerHis] death, the line of the Guardians of Tirisfal has ended.
	picture = GFX_evt_guardian
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTTIRIS.17 # Good riddance.
	}
}

#Aluneth
character_event = {
	id = tirisfalen.18
	hide_window = yes
	
	mean_time_to_happen = {
		years = 500
	}
	
	trigger = {
		NOT = { has_global_flag = guardian_aluneth }
		event_target:guardian = {
			character = ROOT
		}
	}
	
	immediate = {
		add_artifact = aluneth
		set_global_flag = guardian_aluneth
	}
}

#Guardian roaming
character_event = {
	id = tirisfalen.19
	hide_window = yes
	
	mean_time_to_happen = {
		months = 8
	}
	
	trigger = {
		event_target:guardian = {
			character = ROOT
		}
		NOT = { has_character_flag = guardian_aegwynn }
	}
	
	immediate = {
		if = {
			limit = {
				any_province = {
					ROOT = {
						location = {
							PREVPREV = { save_event_target_as = region_compare }
							same_region_as = yes
							clear_event_target = region_compare
						}
					}
					OR = {
						AND = {
							holder_scope = {
								culture_group = human
							}
							OR = {
								has_province_modifier = mutated_animals
								has_province_modifier = strange_activity
								has_province_modifier = demonic_activity
								has_province_modifier = fel_cults
								has_province_modifier = restless_elements
								has_province_modifier = fel_portal
							}
						}
						OR = {
							holder_scope = {
								OR = {
									culture_group = demonic
									religion = burning_legion
									trait = felsworn
								}
							}
							culture_group = demonic
						}
					}
				}
			}
			random_province = {
				limit = {
					ROOT = {
						location = {
							PREVPREV = { save_event_target_as = region_compare }
							same_region_as = yes
							clear_event_target = region_compare
						}
					}
					OR = {
						AND = {
							holder_scope = {
								culture_group = human
							}
							OR = {
								has_province_modifier = mutated_animals
								has_province_modifier = strange_activity
								has_province_modifier = demonic_activity
								has_province_modifier = fel_cults
								has_province_modifier = restless_elements
								has_province_modifier = fel_portal
							}
						}
						OR = {
							holder_scope = {
								OR = {
									culture_group = demonic
									religion = burning_legion
									trait = felsworn
								}
							}
							culture_group = demonic
						}
					}
				}
				holder_scope = {
					ROOT = {
						move_character = PREV
						break = yes
					}
				}
			}
		}
		if = {
			limit = {
				any_province = {
					ROOT = {
						location = {
							PREVPREV = { save_event_target_as = region_compare }
							same_region_as = yes
							clear_event_target = region_compare
						}
					}
					OR = {
						AND = {
							holder_scope = {
								culture_group = human
							}
							OR = {
								has_province_modifier = mutated_animals
								has_province_modifier = strange_activity
								has_province_modifier = demonic_activity
								has_province_modifier = fel_cults
								has_province_modifier = restless_elements
								has_province_modifier = fel_portal
							}
						}
						OR = {
							holder_scope = {
								OR = {
									culture_group = demonic
									AND = {
										culture_group = human
										OR = {
											religion = burning_legion
											religion = old_gods
											religion = twilights_hammer
											trait = felsworn
										}
									}
								}
							}
							culture_group = demonic
						}
					}
				}
			}
			random_province = {
				limit = {
					ROOT = {
						location = {
							PREVPREV = { save_event_target_as = region_compare }
							same_region_as = no
							clear_event_target = region_compare
						}
					}
					OR = {
						AND = {
							holder_scope = {
								culture_group = human
							}
							OR = {
								has_province_modifier = mutated_animals
								has_province_modifier = strange_activity
								has_province_modifier = demonic_activity
								has_province_modifier = fel_cults
								has_province_modifier = restless_elements
								has_province_modifier = fel_portal
							}
						}
						OR = {
							holder_scope = {
								OR = {
									culture_group = demonic
									culture_group = void
									AND = {
										culture_group = human
										OR = {
											religion = burning_legion
											religion = old_gods
											religion = twilights_hammer
											trait = felsworn
										}
									}
								}
							}
							culture_group = demonic
						}
					}
				}
				holder_scope = {
					ROOT = {
						move_character = PREV
						break = yes
					}
				}
			}
		}
		random_province = {
			limit = {
				ROOT = {
					location = {
						PREVPREV = { save_event_target_as = region_compare }
						same_region_as = no
						clear_event_target = region_compare
					}
				}
				holder_scope = {
					culture_group = human
				}
			}
			holder_scope = {
				ROOT = {
					move_character = PREV
					break = yes
				}
			}
		}
	}
}

#Clean up bad modifiers
character_event = {
	id = tirisfalen.20
	hide_window = yes
	
	mean_time_to_happen = {
		months = 2
	}
	
	trigger = {
		event_target:guardian = {
			character = ROOT
		}
		NOT = { has_character_flag = guardian_aegwynn }
		location = {
			OR = {
				has_province_modifier = mutated_animals
				has_province_modifier = strange_activity
				has_province_modifier = demonic_activity
				has_province_modifier = fel_cults
				has_province_modifier = restless_elements
				has_province_modifier = fel_portal
			}
		}
	}
	
	immediate = {
		random_list = {
			1 = {
				modifier = {
					factor = 0
					location = {
						NOT = { has_province_modifier = mutated_animals }
					}
				}
				location = {
					remove_province_modifier = mutated_animals
				}
			}
			1 = {
				modifier = {
					factor = 0
					location = {
						NOT = { has_province_modifier = strange_activity }
					}
				}
				location = {
					remove_province_modifier = strange_activity
				}
			}
			1 = {
				modifier = {
					factor = 0
					location = {
						NOT = { has_province_modifier = demonic_activity }
					}
				}
				location = {
					remove_province_modifier = demonic_activity
				}
			}
			1 = {
				modifier = {
					factor = 0
					location = {
						NOT = { has_province_modifier = fel_cults }
					}
				}
				location = {
					remove_province_modifier = fel_cults
				}
			}
			1 = {
				modifier = {
					factor = 0
					location = {
						NOT = { has_province_modifier = restless_elements }
					}
				}
				location = {
					remove_province_modifier = restless_elements
				}
			}
			1 = {
				modifier = {
					factor = 0
					location = {
						NOT = { has_province_modifier = fel_portal }
					}
				}
				location = {
					remove_province_modifier = fel_portal
				}
			}
		}
	}
}

#Root out secret cultists
character_event = {
	id = tirisfalen.21
	hide_window = yes
	
	mean_time_to_happen = {
		months = 4
	}
	
	trigger = {
		event_target:guardian = {
			character = ROOT
		}
		NOT = { has_character_flag = guardian_aegwynn }
		any_host_courtier = {
			prisoner = no
			OR = {
				secret_religion = burning_legion
				secret_religion = old_gods
				secret_religion = twilights_hammer			}
			NOT = { # If you got more intrigue than the guardian, you are safe
				attribute_diff = {
					character = ROOT
					attribute = intrigue
					value = 1
				}
			}
		}
	}
	
	immediate = {
		random_list = {
			1 = { # None rooted out
				modifier = {
					factor = 5
					NOT = {
						any_host_courtier = {
							prisoner = no
							OR = {
								secret_religion = burning_legion
								secret_religion = old_gods
								secret_religion = twilights_hammer
							}
							ROOT = {
								attribute_diff = {
									character = PREV
									attribute = intrigue
									value = 5
								}
							}
						}
					}
				}
			}
			5 = { # Someone found
				random_host_courtier = {
					limit = {
						prisoner = no
						OR = {
							secret_religion = burning_legion
							secret_religion = old_gods
							secret_religion = twilights_hammer
						}
						NOT = {
							attribute_diff = {
								character = ROOT
								attribute = intrigue
								value = 1
							}
						}
					}
					convert_to_secret_religion = yes
					character_event = { id = tirisfalen.22 }
				}
			}
		}
	}
}

#Rooted out character informed
character_event = {
	id = tirisfalen.22
	desc = EVTDESCTIRIS.22 # The travelling mage [guardian.GetFirstName] has exposed your true alleigance to the rest of the court!
	picture = GFX_evt_scandal
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		add_rival = FROM
	}
	
	option = {
		name = EVTOPTTIRIS.22a # You've meddled for the last time, mage!
		any_host_courtier = {
			limit = {
				ai = no
				NOT = { character = PREV }
				NOT = { character = ROOT }
			}
			set_character_flag = tirisfalen_23_desc1
			character_event = { id = tirisfalen.23 }
		}
		custom_tooltip = { text = EVTTOOLTIP.22 } # You'll duel this mage.
		set_character_flag = duel_cannot_surrender
		set_character_flag = duel_guardian
		FROM = {
			set_character_flag = duel_cannot_surrender
			set_character_flag = duel_guardian
			#character_event = { id = duel.1 }
		}
	}
	
	option = {
		name = EVTOPTCLASSGAIN.71b # I must escape!
		any_host_courtier = {
			limit = {
				ai = no
				NOT = { character = PREV }
				NOT = { character = ROOT }
			}
			set_character_flag = tirisfalen_23_desc2
			character_event = { id = tirisfalen.23 }
		}
		random = {
			chance = 25
			remove_trait = brave
		}
		random = {
			chance = 25
			remove_trait = brave
			add_trait = craven
		}
		random_list = {
			1 = {
				modifier = {
					factor = 2
					intrigue = 10
					NOT = { intrigue = 15 }
				}
				modifier = {
					factor = 3
					intrigue = 15
					NOT = { intrigue = 20 }
				}
				modifier = {
					factor = 4
					intrigue = 20
				}
				banish = yes
			}
			1 = {
				modifier = {
					factor = 0
					independent = yes
				}
				modifier = {
					factor = 2
					intrigue = 5
					NOT = { intrigue = 10 }
				}
				modifier = {
					factor = 4
					NOT = { intrigue = 5 }
				}
				liege = {
					reverse_imprison = PREV
				}
			}
			1 = {
				set_character_flag = duel_cannot_surrender
				set_character_flag = duel_guardian
				FROM = {
					set_character_flag = duel_cannot_surrender
					set_character_flag = duel_guardian
					#character_event = { id = duel.1 }
				}
			}
		}
	}
}

#Everyone in court informed
character_event = {
	id = tirisfalen.23
	desc = {
		trigger = {
			FROM = { has_character_flag = tirisfalen_23_desc1 }
		}
		text = EVTDESCTIRIS.23a # The travelling mage [guardian.GetFirstName] has exposed [From.GetBestName] as a cultist of the [From.Religion.GetName]. Now they prepare to face each other in combat.
	}
	desc = {
		trigger = {
			FROM = { has_character_flag = tirisfalen_23_desc2 }
		}
		text = EVTDESCTIRIS.23b # The travelling mage [guardian.GetFirstName] has exposed [From.GetBestName] as a cultist of the [From.Religion.GetName]. [From.GetBestName] beat a hasty retreat, however, and is being pursued by the guards and [guardian.GetFirstName].
	}
	picture = GFX_evt_scandal
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = OK
		FROM = {
			clr_character_flag = tirisfalen_23_desc1
			clr_character_flag = tirisfalen_23_desc2
		}
	}
}

#Challenge demons/faceless/openly legion/old gods characters
character_event = {
	id = tirisfalen.24
	hide_window = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		event_target:guardian = {
			character = ROOT
		}
		NOT = { has_character_flag = guardian_aegwynn }
		any_host_courtier = {
			prisoner = no
			OR = {
				religion = burning_legion
				religion = old_gods
				religion = twilights_hammer
				culture_group = demonic
				culture_group = void
			}
		}
	}
	
	immediate = {
		random_host_courtier = {
			limit = {
				prisoner = no
				OR = {
					religion = burning_legion
					religion = old_gods
					religion = twilights_hammer
					culture_group = demonic
					culture_group = void
				}
			}
			character_event = { id = tirisfalen.25 }
		}
	}
}

#Receive the challenge
character_event = {
	id = tirisfalen.25
	desc = EVTDESCTIRIS.25 # A strange human mage managed to slip past or overpower all your guards and defences and now stands before you, silently challenging you to combat. You sense great power in [guardian.GetHerHim].
	picture = GFX_evt_guardian
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	immediate = {
		add_rival = FROM
	}
	
	option = {
		name = EVTOPTTIRIS.22a # You've meddled for the last time, mage!
		custom_tooltip = { text = EVTTOOLTIP.22 } # You'll duel this mage.
		set_character_flag = duel_cannot_surrender
		set_character_flag = duel_guardian
		FROM = {
			set_character_flag = duel_cannot_surrender
			set_character_flag = duel_guardian
			#character_event = { id = duel.1 }
		}
	}
	
	option = {
		name = EVTOPTCLASSGAIN.71b # I must escape!
		random = {
			chance = 25
			remove_trait = brave
		}
		random = {
			chance = 25
			remove_trait = brave
			add_trait = craven
		}
		random_list = {
			1 = {
				modifier = {
					factor = 2
					intrigue = 10
					NOT = { intrigue = 15 }
				}
				modifier = {
					factor = 3
					intrigue = 15
					NOT = { intrigue = 20 }
				}
				modifier = {
					factor = 4
					intrigue = 20
				}
				banish = yes
			}
			1 = {
				modifier = {
					factor = 0
					independent = yes
				}
				modifier = {
					factor = 2
					intrigue = 5
					NOT = { intrigue = 10 }
				}
				modifier = {
					factor = 4
					NOT = { intrigue = 5 }
				}
				liege = {
					reverse_imprison = PREV
				}
			}
			1 = {
				set_character_flag = duel_cannot_surrender
				set_character_flag = duel_guardian
				FROM = {
					set_character_flag = duel_cannot_surrender
					set_character_flag = duel_guardian
					#character_event = { id = duel.1 }
				}
			}
		}
	}
}

#Remove demon/faceless culture from province
character_event = {
	id = tirisfalen.26
	hide_window = yes
	
	mean_time_to_happen = {
		months = 4
	}
	
	trigger = {
		event_target:guardian = {
			character = ROOT
		}
		NOT = { has_character_flag = guardian_aegwynn }
		location = {
			OR = {
				culture_group = demonic
				culture_group = void
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				location = {
					any_neighbor_province = {
						NOR = {
							culture_group = demonic
							culture_group = void
						}
					}
				}
			}
			location = {
				random_neighbor_province = {
					limit = {
						NOR = {
							culture_group = demonic
							culture_group = void
						}
					}
					ROOT = {
						location = {
							culture = PREVPREV
						}
					}
				}
			}
			break = yes
		}
		location = {
			culture = dalaranian
		}
	}
}

#Remove evil religion from province
character_event = {
	id = tirisfalen.27
	hide_window = yes
	
	mean_time_to_happen = {
		months = 4
	}
	
	trigger = {
		event_target:guardian = {
			character = ROOT
		}
		NOT = { has_character_flag = guardian_aegwynn }
		location = {
			OR = {
				religion = burning_legion
				religion = old_gods
				religion = twilights_hammer
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				location = {
					any_neighbor_province = {
						NOR = {
							religion = burning_legion
							religion = old_gods
							religion = twilights_hammer
						}
					}
				}
			}
			location = {
				random_neighbor_province = {
					limit = {
						NOR = {
							religion = burning_legion
							religion = old_gods
							religion = twilights_hammer
						}
					}
					ROOT = {
						location = {
							religion = PREVPREV
						}
					}
				}
			}
			break = yes
		}
		location = {
			religion = arcane
		}
	}
}

#Maintenance
character_event = {
	id = tirisfalen.28
	hide_window = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		event_target:guardian = {
			character = ROOT
		}
		OR = {
			NOT = { true_religion = arcane }
			NOT = { religion = arcane }
		}
	}
	
	immediate = {
		clear_secret_religion = yes
		religion = arcane
	}
}

#Avatar of Sargeras
character_event = {
	id = tirisfalen.29
	hide_window = yes
	
	mean_time_to_happen = {
		years = 1000
		modifier = {
			factor = 0.5
			has_game_rule = {
				name = troll_wars_events
				value = alternate
			}
		}
	}
	
	trigger = {
		event_target:guardian = {
			character = ROOT
		}
		NOT = { has_character_flag = guardian_aegwynn }
	}
	
	immediate = {
		random_list = {
			100 = {
				set_character_flag = guardian_aegwynn
			}
			1 = {
				modifier = {
					factor = 50
					has_game_rule = {
						name = troll_wars_events
						value = alternate
					}
				}
				death = { death_reason = death_duel }
			}
		}
	}
}

#Ping
character_event = {
	id = tirisfalen.30
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			10 = { # Nothing to find/found nothing
				set_character_flag = investigate_nothing
				character_event = { id = tirisfalen.31 }
			}
			5 = { # Found something
				modifier = {
					factor = 0
					FROM = {
						NOT = {
							AND = {
								trait = necrolyte
								NOT = { accepts_warlock = yes }
								NOT = { accepts_necromancer = yes }
								liege = {
									NOT = { accepts_warlock = yes }
									NOT = { accepts_necromancer = yes }
								}
								NOT = { has_character_flag = necrolyte_discovered }
							}
							AND = {
								trait = warlock
								NOT = { accepts_warlock = yes }
								liege = {
									NOT = { accepts_warlock = yes }
								}
								NOT = { has_character_flag = warlock_discovered }
								NOT = { has_character_flag = necrolyte_discovered }
							}
							AND = {
								trait = necromancer
								NOT = { accepts_necromancer = yes }
								liege = {
									NOT = { accepts_necromancer = yes }
								}
								NOT = { has_character_flag = necromancer_discovered }
								NOT = { has_character_flag = necrolyte_discovered }
							}
							true_religion = burning_legion
							true_religion = old_gods
							true_religion = twilights_hammer
						}
					}
				}
				modifier = {
					factor = 0.7
					FROM = {
						attribute_diff = {
							character = ROOT
							attribute = intrigue
							value = 5
						}
					}
				}
				modifier = {
					factor = 0.5
					FROM = {
						attribute_diff = {
							character = ROOT
							attribute = intrigue
							value = 10
						}
					}
				}
				modifier = {
					factor = 0.2
					FROM = {
						attribute_diff = {
							character = ROOT
							attribute = intrigue
							value = 15
						}
					}
				}
				modifier = {
					factor = 2
					attribute_diff = {
						character = from
						attribute = intrigue
						value = 5
					}
				}
				modifier = {
					factor = 4
					attribute_diff = {
						character = from
						attribute = intrigue
						value = 10
					}
				}
				modifier = {
					factor = 6
					attribute_diff = {
						character = from
						attribute = intrigue
						value = 15
					}
				}
				set_character_flag = investigate_found
				if = {
					limit = {
						true_religion = burning_legion
					}
					set_character_flag = investigate_found_legion
					character_event = { id = tirisfalen.31 }
					break = yes
				}
				if = {
					limit = {
						OR = {
							true_religion = old_gods
							true_religion = twilights_hammer
						}
					}
					set_character_flag = investigate_found_void
					character_event = { id = tirisfalen.31 }
					break = yes
				}
				if = {
					limit = {
						trait = necrolyte
					}
					set_character_flag = investigate_found_necrolyte
					character_event = { id = tirisfalen.31 }
					break = yes
				}
				if = {
					limit = {
						trait = necromancer
					}
					set_character_flag = investigate_found_necromancer
					character_event = { id = tirisfalen.31 }
					break = yes
				}
				if = {
					limit = {
						trait = warlock
					}
					set_character_flag = investigate_found_warlock
					character_event = { id = tirisfalen.31 }
					break = yes
				}
			}
			1 = { # Caught snooping
				modifier = {
					factor = 2
					FROM = {
						attribute_diff = {
							character = ROOT
							attribute = intrigue
							value = 5
						}
					}
				}
				modifier = {
					factor = 4
					FROM = {
						attribute_diff = {
							character = ROOT
							attribute = intrigue
							value = 10
						}
					}
				}
				modifier = {
					factor = 6
					FROM = {
						attribute_diff = {
							character = ROOT
							attribute = intrigue
							value = 15
						}
					}
				}
				set_character_flag = investigate_caught
				character_event = { id = tirisfalen.31 }
			}
		}
	}
}

#Result
character_event = {
	id = tirisfalen.31
	desc = {
		trigger = {
			has_character_flag = investigate_nothing
		}
		text = EVTDESCTIRIS.31a # Suspecting [FromFrom.GetBestName] of being more than what [FromFrom.GetSheHe] appears to be, you decide to investigate [FromFrom.GetHerHis] activities.
	}
	desc = {
		trigger = {
			has_character_flag = investigate_found_warlock
		}
		text = EVTDESCTIRIS.31b # Suspecting [FromFrom.GetBestName] of being more than what [FromFrom.GetSheHe] appears to be, you decide to investigate [FromFrom.GetHerHis] activities. In fact, you've found out that [FromFrom.GetBestName] is a warlock!
	}
	desc = {
		trigger = {
			has_character_flag = investigate_found_necromancer
		}
		text = EVTDESCTIRIS.31c # Suspecting [FromFrom.GetBestName] of being more than what [FromFrom.GetSheHe] appears to be, you decide to investigate [FromFrom.GetHerHis] activities. In fact, you've found out that [FromFrom.GetBestName] is a necromancer!
	}
	desc = {
		trigger = {
			has_character_flag = investigate_found_necrolyte
		}
		text = EVTDESCTIRIS.31d # Suspecting [FromFrom.GetBestName] of being more than what [FromFrom.GetSheHe] appears to be, you decide to investigate [FromFrom.GetHerHis] activities. In fact, you've found out that [FromFrom.GetBestName] is a necrolyte!
	}
	desc = {
		trigger = {
			has_character_flag = investigate_found_legion
		}
		text = EVTDESCTIRIS.31e # Suspecting [FromFrom.GetBestName] of being more than what [FromFrom.GetSheHe] appears to be, you decide to investigate [FromFrom.GetHerHis] activities. In fact, you've found out that [FromFrom.GetBestName] serves the Burning Legion!
	}
	desc = {
		trigger = {
			has_character_flag = investigate_found_void
		}
		text = EVTDESCTIRIS.31f # Suspecting [FromFrom.GetBestName] of being more than what [FromFrom.GetSheHe] appears to be, you decide to investigate [FromFrom.GetHerHis] activities. In fact, you've found out that [FromFrom.GetBestName] serves dark, ancient powers!
	}
	desc = {
		trigger = {
			has_character_flag = investigate_caught
		}
		text = EVTDESCTIRIS.31g # Suspecting [FromFrom.GetBestName] of being more than what [FromFrom.GetSheHe] appears to be, you decide to investigate [FromFrom.GetHerHis] activities. Unfortunately, it seems that [FromFrom.GetSheHe] has caught wind of this!
	}
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = OK
		if = {
			limit = {
				has_character_flag = investigate_nothing
			}
			prestige = -10
			clr_character_flag = investigate_nothing
		}
		if = {
			limit = {
				has_character_flag = investigate_found
			}
			FROMFROM = {
				if = {
					limit = {
						independent = no
						OR = {
							AND = {
								OR = {
									has_character_flag = warlock_start
									has_character_flag = warlock_drift
									trait = warlock
								}
								liege = {
									NOT = { accepts_warlock = yes }
								}
							}
							AND = {
								OR = {
									has_character_flag = necromancer_start
									has_character_flag = necromancer_drift
									trait = necromancer
								}
								liege = {
									NOT = { accepts_necromancer = yes }
								}
							}
							AND = {
								NOT = {
									has_character_flag = warlock_start
									has_character_flag = warlock_drift
									has_character_flag = necromancer_start
									has_character_flag = necromancer_drift
								}
								OR = {
									has_character_flag = necrolyte_start
									has_character_flag = necrolyte_drift
									trait = necrolyte
								}
								liege = {
									OR = {
										NOT = { accepts_warlock = yes }
										NOT = { accepts_necromancer = yes }
									}
								}
							}
							AND = {
								has_character_modifier = blood_magic
								liege = {
									NOT = { accepts_blood_magic = yes }
								}
							}
							AND = {
								has_character_modifier = shadow_priest
								liege = {
									NOT = { accepts_shadow_priest = yes }
								}
							}
							AND = {
								has_character_modifier = dark_shaman
								liege = {
									NOT = { accepts_dark_shaman = yes }
								}
							}
						}
					}
					liege = {
						opinion = {
							modifier = opinion_witch
							years = 100000
							who = PREV
						}
					}
				}
				if = {
					limit = {
						independent = no
						OR = {
							AND = {
								OR = {
									has_character_flag = assassin_start
									trait = assassin
								}
								liege = {
									NOT = { accepts_assassin = yes }
								}
							}
							AND = {
								OR = {
									has_character_flag = rogue_start
									trait = rogue
								}
								liege = {
									NOT = { accepts_rogue = yes }
								}
							}
						}
					}
					liege = {
						opinion = {
							modifier = opinion_criminal
							years = 100000
							who = PREV
						}
					}
				}
				prestige = -50
				if = {
					limit = {
						OR = {
							has_character_flag = warlock_start
							has_character_flag = warlock_drift
							trait = warlock
						}
					}
					if = {
						limit = {
							trait = warlock
						}
						clr_character_flag = secret_warlock
						remove_trait = arcanist_fake
						remove_trait = healer_fake
						remove_trait = mage_fake
						remove_trait = priest_fake
						remove_trait = shaman_fake
						remove_trait = druid_fake
						remove_trait = witch_doctor_fake
						remove_trait = techmage_fake
						remove_character_modifier = abjuration
						remove_character_modifier = enchantment
						remove_character_modifier = illusion
						remove_character_modifier = divination
						remove_character_modifier = transmutation
						remove_character_modifier = conjuration
						remove_character_modifier = evocation
						remove_character_modifier = evocation_fake
						remove_character_modifier = blood_magic
						remove_character_modifier = hexes
						remove_character_modifier = brews
						remove_character_modifier = shadow_hunter
						remove_character_modifier = holy_priest
						remove_character_modifier = holy_priest_fake
						remove_character_modifier = sun_priest
						remove_character_modifier = sun_priest_fake
						remove_character_modifier = moon_priest
						remove_character_modifier = moon_priest_fake
						remove_character_modifier = shadow_priest
						remove_character_modifier = sea_witch
						remove_character_modifier = moon_druid
						remove_character_modifier = sun_druid
						remove_character_modifier = mender
						remove_character_modifier = feral_druid
						remove_character_modifier = elementalist
						remove_character_modifier = elementalist_fake
						remove_character_modifier = spiritualist
						remove_character_modifier = dark_shaman
					}
					set_character_flag = warlock_discovered
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = emerald_nightmare
								religion = forgotten_shadow
								religion = old_gods
								religion = twilights_hammer
								religion = azshara
								religion = burning_legion
								religion = mercantilism
								religion = demonology
								religion = loa
							}
						}
						religion = demonology
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = mercantilism
								secret_religion = demonology
							}
						}
						convert_to_secret_religion = yes
					}
				}
				if = {
					limit = {
						NOT = {
							has_character_flag = warlock_start
							has_character_flag = warlock_drift
							has_character_flag = necromancer_start
							has_character_flag = necromancer_drift
						}
						OR = {
							has_character_flag = necrolyte_start
							has_character_flag = necrolyte_drift
							trait = necrolyte
						}
					}
					if = {
						limit = {
							trait = necrolyte
						}
						clr_character_flag = secret_necrolyte
						remove_trait = healer_fake
						remove_trait = arcanist_fake
					}
					set_character_flag = necrolyte_discovered
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = emerald_nightmare
								religion = forgotten_shadow
								religion = old_gods
								religion = twilights_hammer
								religion = azshara
								religion = burning_legion
								religion = mercantilism
								religion = demonology
								religion = lich_king
								religion = hakkar
								religion = loa
							}
						}
						religion = demonology
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = mercantilism
								secret_religion = demonology
								secret_religion = lich_king
							}
						}
						convert_to_secret_religion = yes
					}
				}
				if = {
					limit = {
						OR = {
							has_character_flag = necromancer_start
							has_character_flag = necromancer_drift
							trait = necromancer
						}
					}
					if = {
						limit = {
							trait = necromancer
						}
						clr_character_flag = secret_necromancer
						remove_trait = arcanist_fake
						remove_trait = healer_fake
						remove_trait = mage_fake
						remove_trait = priest_fake
						remove_trait = shaman_fake
						remove_trait = druid_fake
						remove_trait = witch_doctor_fake
						remove_trait = techmage_fake
						remove_character_modifier = abjuration
						remove_character_modifier = enchantment
						remove_character_modifier = illusion
						remove_character_modifier = divination
						remove_character_modifier = transmutation
						remove_character_modifier = conjuration
						remove_character_modifier = evocation
						remove_character_modifier = evocation_fake
						remove_character_modifier = blood_magic
						remove_character_modifier = hexes
						remove_character_modifier = brews
						remove_character_modifier = shadow_hunter
						remove_character_modifier = holy_priest
						remove_character_modifier = holy_priest_fake
						remove_character_modifier = sun_priest
						remove_character_modifier = sun_priest_fake
						remove_character_modifier = moon_priest
						remove_character_modifier = moon_priest_fake
						remove_character_modifier = shadow_priest
						remove_character_modifier = sea_witch
						remove_character_modifier = moon_druid
						remove_character_modifier = sun_druid
						remove_character_modifier = mender
						remove_character_modifier = feral_druid
						remove_character_modifier = elementalist
						remove_character_modifier = elementalist_fake
						remove_character_modifier = spiritualist
						remove_character_modifier = dark_shaman
					}
					set_character_flag = necromancer_discovered
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = hakkar
								religion = burning_legion
								religion = forgotten_shadow
								religion = lich_king
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = old_gods
								religion = emerald_nightmare
								religion = azshara
								religion = demonology
							}
						}
						religion = forgotten_shadow
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = demonology
								secret_religion = lich_king
							}
						}
						convert_to_secret_religion = yes
					}
				}
				if = {
					limit = {
						has_character_modifier = blood_magic
					}
					clr_character_flag = secret_blood_magic
					remove_character_modifier = evocation_fake
					set_character_flag = blood_magic_discovered
				}
				if = {
					limit = {
						has_character_modifier = shadow_priest
					}
					clr_character_flag = secret_shadow_priest
					remove_character_modifier = holy_priest_fake
					remove_character_modifier = sun_priest_fake
					remove_character_modifier = moon_priest_fake
					set_character_flag = shadow_priest_discovered
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = emerald_nightmare
								religion = forgotten_shadow
								religion = old_gods
								religion = twilights_hammer
								religion = azshara
								religion = burning_legion
								religion = mercantilism
								religion = demonology
								religion = lich_king
							}
						}
						religion = forgotten_shadow
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = mercantilism
								secret_religion = demonology
								secret_religion = lich_king
							}
						}
						convert_to_secret_religion = yes
					}
				}
				if = {
					limit = {
						has_character_modifier = dark_shaman
					}
					clr_character_flag = secret_dark_shaman
					remove_character_modifier = elementalist_fake
					set_character_flag = dark_shaman_discovered
					if = {
						limit = {
							OR = {
								religion = shamanism
								religion = old_ways
							}
						}
						religion = old_gods
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = old_gods
								secret_religion = twilights_hammer
							}
						}
						convert_to_secret_religion = yes
					}
				}
				opinion = {
					modifier = opinion_hate
					years = 100000
					who = ROOT
				}
				character_event = { id = classgain.71 }
			}
			prestige = 10
			clr_character_flag = investigate_found
			clr_character_flag = investigate_found_warlock
			clr_character_flag = investigate_found_necromancer
			clr_character_flag = investigate_found_necrolyte
			clr_character_flag = investigate_found_legion
			clr_character_flag = investigate_found_void
		}
		increase_visibility_effect = yes
		FROMFROM = {
			opinion = {
				modifier = opinion_outraged
				who = ROOT
				years = 5
			}
		}
		clr_character_flag = investigate_caught
	}
}

#Slander
character_event = {
	id = tirisfalen.32
	desc = EVTDESCTIRIS.32 # After overhearing some of the conversations in your court, you become convinced that someone is spreading scandalous rumours in an attempt to slander you!
	picture = GFX_evt_scandal
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTTIRIS.32 # But who could it be?
		add_character_modifier = { modifier = scandalous_rumors years = 3 }
		prestige = -100
	}
}

#Blackmail
character_event = {
	id = tirisfalen.33
	desc = {
		trigger = {
			has_dlc = "Conclave"
		}
		text = EVTDESCTIRIS.33a # Returning to your chambers, you find a letter on your desk, addressed to you. Inside is a demand from this unknown individual that you perform for them, without question a task when asked for in the future. If you refuse, your darkest secrets, actually specified in the letter, will become public knowledge.
	}
	desc = {
		trigger = {
			NOT = { has_dlc = "Conclave" }
		}
		text = EVTDESCTIRIS.33b # Returning to your chambers, you find a letter on your desk, addressed to you. Inside is a demand from this unknown individual that you pay them a sum of money by delivering it to a dead drop. If you refuse, your darkest secrets, actually specified in the letter, will become public knowledge.
	}
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTRIRIS.33a # ... Fine.
		hidden_tooltip = {
			transfer_scaled_wealth = {
				to = FROM
				from = ROOT
				value = 0.5
				min = 10
			}
		}
	}
	
	option = {
		name = EVTOPTTIRIS.33b # I will not be blackmailed!
		add_character_modifier = { modifier = scandalous_rumors years = 3 }
		prestige = -100
	}
}