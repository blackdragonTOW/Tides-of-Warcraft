namespace = classgain

#Arcanist
character_event = {
	id = classgain.1
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 1.2
			trait = content
		}
		modifier = {
			factor = 0.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 1.5
			trait = zealous
		}
		modifier = {
			factor = 0.8
			learning = 13
			NOT = { learning = 15 }
		}
		modifier = {
			factor = 0.6
			learning = 15
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.3
			learning = 20
		}
		modifier = {
			factor = 1.5
			OR = {
				trait = troll_ice
				trait = troll_forest
				trait = troll_jungle
				trait = troll_dark
				trait = troll_sand
				trait = troll_zandalari
			}
		}
		modifier = {
			factor = 0.5
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = ogre_magi
				trait = naga
				trait = draenei
				AND = {
					trait = human
					OR = {
						religion = arcane
						secret_religion = arcane
					}
				}
			}
		}
		modifier = {
			factor = 4
			OR = {
				trait = dull
				trait = slow
			}
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				OR = {
					trait = arcanist
					trait = mage
					trait = runemaster
					trait = techmage
				}
			}
		}
	}
	
	trigger = {
		NOT = { trait = imbecile }
		NOT = { trait = distrusts_magic }
		NOT = {
			trait = arcanist
			trait = necrolyte
			trait = death_knight
			trait = demon_hunter
			trait = mage
			trait = warlock
			trait = necromancer
			trait = runemaster
		}
		NOT = {	lifestyle_traits = 2 }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_arcanist }
		learning = 10
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			AND = {
				trait = human
				OR = {
					NOT = { has_global_flag = trollwars_bookmark }
					has_global_flag = trollwar_humans_join
				}
			}
			trait = draenei
			trait = broken
			trait = eredar
			trait = high_elf
			trait = blood_elf
			trait = wretched
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			AND = {
				trait = AK_trait_dwarf
				culture = dark_iron
			}
			trait = ogre_magi
			AND = {
				is_female = yes
				trait = naga
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_arcanist_start
		character_event = { id = classgain.30 }
	}
}

#Necrolyte
character_event = {
	id = classgain.2
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 1.2
			trait = content
		}
		modifier = {
			factor = 0.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 1.5
			trait = zealous
		}
		modifier = {
			factor = 0.5
			trait = cruel
		}
		modifier = {
			factor = 0.5
			trait = proud
		}
		modifier = {
			factor = 1.5
			trait = kind
		}
		modifier = {
			factor = 1.5
			trait = humble
		}
		modifier = {
			factor = 0.8
			trait = deceitful
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 0.5
			OR = {
				religion = burning_legion
				religion = demonology
				religion = forgotten_shadow
				religion = lich_king
				secret_religion = burning_legion
				secret_religion = demonology
				secret_religion = forgotten_shadow
				secret_religion = lich_king
			}
		}
		modifier = {
			factor = 0.8
			trait = fel_tainted
		}
		modifier = {
			factor = 0.5
			OR = {
				trait = fel_corrupted
				trait = felsworn
			}
		}
		modifier = {
			factor = 0.8
			location = {
				check_variable = { which = prov_corruption value = 10 }
				NOT = { check_variable = { which = prov_corruption value = 20 } }
			}
		}
		modifier = {
			factor = 0.5
			location = {
				check_variable = { which = prov_corruption value = 20 }
			}
		}
		modifier = {
			factor = 0.8
			check_variable = { which = global_doom value = 10 }
			NOT = { check_variable = { which = global_doom value = 20 } }
		}
		modifier = {
			factor = 0.6
			check_variable = { which = global_doom value = 20 }
			NOT = { check_variable = { which = global_doom value = 30 } }
		}
		modifier = {
			factor = 0.4
			check_variable = { which = global_doom value = 30 }
			NOT = { check_variable = { which = global_doom value = 40 } }
		}
		modifier = {
			factor = 0.2
			check_variable = { which = global_doom value = 40 }
		}
		modifier = {
			factor = 4
			OR = {
				trait = dull
				trait = slow
			}
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				OR = {
					trait = necrolyte
					trait = warlock
					trait = necromancer
				}
			}
		}
		modifier = {
			factor = 0.5
			in_faction = faction_demonologist
		}
	}
	
	trigger = {
		NOT = { in_faction = faction_purity }
		NOT = { trait = imbecile }
		NOT = { trait = distrusts_magic }
		NOT = {
			trait = necrolyte
			trait = death_knight
			trait = demon_hunter
			trait = paladin
			trait = warlock
			trait = necromancer
			trait = arcanist
			trait = healer
		}
		NOT = {	lifestyle_traits = 2 }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_necrolyte }
		learning = 10
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			AND = {
				trait = human
				OR = {
					NOT = { has_global_flag = trollwars_bookmark }
					has_global_flag = trollwar_humans_join
				}
			}
			trait = dreadlord
			trait = eredar
			trait = high_elf
			trait = blood_elf
			trait = wretched
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			AND = {
				trait = AK_trait_dwarf
				culture = dark_iron
			}
			trait = ogre_magi
			trait = orc
			trait = gnoll
			trait = draenei
			trait = broken
			trait = lost_one
			trait = shivarra
			AND = {
				is_female = yes
				trait = naga
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_necrolyte_start
		character_event = { id = classgain.30 }
	}
}

#Healer
character_event = {
	id = classgain.3
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			learning = 13
			NOT = { learning = 15 }
		}
		modifier = {
			factor = 0.6
			learning = 15
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.3
			learning = 20
		}
		modifier = {
			factor = 2.5
			OR = {
				religion = cult_of_the_infinite
				religion = cult_of_the_destroyer
				religion = emerald_nightmare
				religion = forgotten_shadow
				religion = old_gods
				religion = twilights_hammer
				religion = azshara
				religion = burning_legion
				religion = demonology
				religion = lich_king
				religion = hakkar
				secret_religion = cult_of_the_infinite
				secret_religion = cult_of_the_destroyer
				secret_religion = emerald_nightmare
				secret_religion = forgotten_shadow
				secret_religion = old_gods
				secret_religion = twilights_hammer
				secret_religion = azshara
				secret_religion = burning_legion
				secret_religion = demonology
				secret_religion = lich_king
				secret_religion = hakkar
			}
		}
		modifier = {
			factor = 4
			OR = {
				trait = dull
				trait = slow
			}
		}
		modifier = {
			factor = 3
			trait = cruel
		}
		modifier = {
			factor = 3
			trait = impaler
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				OR = {
					trait = healer
					trait = priest
					trait = shaman
					trait = druid
					trait = witch_doctor
					trait = alchemist
				}
			}
		}
	}
	
	trigger = {
		NOT = { trait = imbecile }
		NOT = {
			trait = healer
			trait = death_knight
			trait = demon_hunter
			trait = necrolyte
			trait = warlock
			trait = necromancer
			trait = priest
			trait = shaman
			trait = druid
			trait = witch_doctor
			trait = alchemist
		}
		NOT = {	lifestyle_traits = 2 }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_healer }
		learning = 10
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = human
			trait = high_elf
			trait = blood_elf
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			trait = AK_trait_dwarf
			trait = ogre_magi
			trait = orc
			trait = murloc
			trait = gnoll
			trait = kobold
			trait = trogg
			trait = draenei
			trait = broken
			trait = lost_one
			trait = shivarra
			AND = {
				is_female = yes
				trait = naga
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_healer_start
		character_event = { id = classgain.30 }
	}
}

#Scout
character_event = {
	id = classgain.4
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			OR = {
				AND = {
					stewardship = 13
					NOT = { stewardship = 15 }
				}
				AND = {
					intrigue = 13
					NOT = { intrigue = 15 }
				}
			}
		}
		modifier = {
			factor = 0.6
			OR = {
				AND = {
					stewardship = 15
					NOT = { stewardship = 20 }
				}
				AND = {
					intrigue = 15
					NOT = { intrigue = 20 }
				}
			}
		}
		modifier = {
			factor = 0.3
			OR = {
				stewardship = 20
				intrigue = 20
			}
		}
		modifier = {
			factor = 3
			trait = one_legged
		}
		modifier = {
			factor = 1.5
			trait = clubfooted
		}
		modifier = {
			factor = 1.5
			trait = hunchback
		}
		modifier = {
			factor = 1.2
			trait = dwarf
		}
		modifier = {
			factor = 1.2
			OR = {
				trait = feeble
				trait = weak
			}
		}
		modifier = {
			factor = 0.7
			trait = shrewd
		}
		modifier = {
			factor = 0.5
			trait = strong
		}
		modifier = {
			factor = 0.7
			trait = robust
		}
		modifier = {
			factor = 8
			trait = craven
		}
		modifier = {
			factor = 0.8
			trait = brave
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				OR = {
					trait = scout
					trait = rogue
					trait = assassin
					trait = beastmaster
					trait = explorer
					trait = ranger
				}
			}
		}
	}
	
	trigger = {
		NOT = { trait = blinded }
		NOT = { trait = inbred }
		NOT = {
			trait = scout
			trait = death_knight
			trait = demon_hunter
			trait = assassin
			trait = rogue
			trait = beastmaster
			trait = explorer
			trait = ranger
		}
		NOT = {	lifestyle_traits = 2 }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_scout }
		learning = 10
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = human
			trait = high_elf
			trait = blood_elf
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			trait = AK_trait_dwarf
			trait = ogre
			trait = orc
			trait = murloc
			trait = gnoll
			trait = kobold
			trait = trogg
			trait = wretched
			trait = eredar
			trait = succubus
			trait = dreadlord
			trait = draenei
			trait = broken
			trait = lost_one
			trait = shivarra
			AND = {
				is_female = no
				trait = naga
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_scout_start
		character_event = { id = classgain.30 }
	}
}

#Tinker
character_event = {
	id = classgain.5
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			stewardship = 13
			NOT = { stewardship = 15 }
		}
		modifier = {
			factor = 0.6
			stewardship = 15
			NOT = { stewardship = 20 }
		}
		modifier = {
			factor = 0.3
			stewardship = 20
		}
		modifier = {
			factor = 0.6
			trait = erudite
		}
		modifier = {
			factor = 4
			OR = {
				trait = dull
				trait = slow
			}
		}
		modifier = {
			factor = 0.6
			trait = shrewd
		}
		modifier = {
			factor = 0.5
			trait = quick
		}
		modifier = {
			factor = 0.2
			trait = genius
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				OR = {
					trait = tinker
					trait = engineer
					trait = mechanist
					trait = techmage
				}
			}
		}
	}
	
	trigger = {
		NOT = {
			trait = tinker
			trait = death_knight
			trait = demon_hunter
			trait = engineer
			trait = mechanist
			trait = techmage
		}
		NOT = {	lifestyle_traits = 2 }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_tinker }
		stewardship = 10
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = gnome
			trait = goblin
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_tinker_start
		character_event = { id = classgain.30 }
	}
}

#Fighter
character_event = {
	id = classgain.6
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			martial = 13
			NOT = { martial = 15 }
		}
		modifier = {
			factor = 0.6
			martial = 15
			NOT = { martial = 20 }
		}
		modifier = {
			factor = 0.3
			martial = 20
		}
		modifier = {
			factor = 1.5
			trait = clubfooted
		}
		modifier = {
			factor = 1.5
			trait = hunchback
		}
		modifier = {
			factor = 1.2
			trait = dwarf
		}
		modifier = {
			factor = 1.5
			trait = one_eyed
		}
		modifier = {
			factor = 1.5
			trait = one_handed
		}
		modifier = {
			factor = 1.5
			trait = one_legged
		}
		modifier = {
			factor = 8
			trait = blinded
		}
		modifier = {
			factor = 0.5
			trait = strong
		}
		modifier = {
			factor = 0.7
			trait = robust
		}
		modifier = {
			factor = 0.9
			trait = wroth
		}
		modifier = {
			factor = 8
			trait = craven
		}
		modifier = {
			factor = 0.8
			trait = brave
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				OR = {
					trait = fighter
					trait = warrior
					trait = paladin
					trait = monk
				}
			}
		}
	}
	
	trigger = {
		NOT = { trait = weak }
		NOT = { trait = feeble }
		NOT = { trait = inbred }
		NOT = {
			trait = fighter
			trait = death_knight
			trait = demon_hunter
			trait = warrior
			trait = paladin
			trait = monk
		}
		NOT = {	lifestyle_traits = 2 }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_fighter }
		martial = 10
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = human
			trait = high_elf
			trait = blood_elf
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			trait = AK_trait_dwarf
			trait = ogre
			trait = orc
			trait = murloc
			trait = gnoll
			trait = kobold
			trait = trogg
			trait = wretched
			trait = eredar
			trait = draenei
			trait = broken
			trait = lost_one
			trait = pit_lord
			trait = doomlord
			trait = fel_lord
			AND = {
				is_female = no
				trait = naga
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_fighter_start
		character_event = { id = classgain.30 }
	}
}

#Mage
character_event = {
	id = classgain.7
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		
		modifier = {
			factor = 1.2
			trait = content
		}
		modifier = {
			factor = 0.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 1.5
			trait = zealous
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 1.5
			OR = {
				trait = troll_ice
				trait = troll_forest
				trait = troll_jungle
				trait = troll_dark
				trait = troll_sand
				trait = troll_zandalari
			}
		}
		modifier = {
			factor = 0.5
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = ogre_magi
				trait = naga
				trait = draenei
				AND = {
					trait = human
					OR = {
						religion = arcane
						secret_religion = arcane
					}
				}
			}
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = mage
			}
		}
	}
	
	trigger = {
		trait = arcanist
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_mage }
		learning = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			AND = {
				trait = human
				OR = {
					NOT = { has_global_flag = trollwars_bookmark }
					has_global_flag = trollwar_humans_join
				}
			}
			trait = eredar
			trait = high_elf
			trait = blood_elf
			trait = wretched
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			AND = {
				trait = AK_trait_dwarf
				culture = dark_iron
			}
			trait = ogre_magi
			trait = draenei
			trait = broken
			AND = {
				is_female = yes
				trait = naga
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_mage_start
		character_event = { id = classgain.30 }
	}
}

#Warlock
character_event = {
	id = classgain.8
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		
		modifier = {
			factor = 1.2
			trait = content
		}
		modifier = {
			factor = 0.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 1.5
			trait = zealous
		}
		modifier = {
			factor = 0.5
			trait = cruel
		}
		modifier = {
			factor = 0.5
			trait = proud
		}
		modifier = {
			factor = 1.5
			trait = kind
		}
		modifier = {
			factor = 1.5
			trait = humble
		}
		modifier = {
			factor = 0.8
			trait = deceitful
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 1.5
			OR = {
				trait = high_elf
				trait = draenei
			}
		}
		modifier = {
			factor = 0.5
			OR = {
				religion = burning_legion
				religion = demonology
				secret_religion = burning_legion
				secret_religion = demonology
			}
		}
		modifier = {
			factor = 0.5
			OR = {
				trait = blood_elf
				trait = ogre_magi
			}
		}
		modifier = {
			factor = 0.8
			trait = fel_tainted
		}
		modifier = {
			factor = 0.5
			OR = {
				trait = fel_corrupted
				trait = felsworn
			}
		}
		modifier = {
			factor = 0.8
			location = {
				check_variable = { which = prov_corruption value = 10 }
				NOT = { check_variable = { which = prov_corruption value = 20 } }
			}
		}
		modifier = {
			factor = 0.5
			location = {
				check_variable = { which = prov_corruption value = 20 }
			}
		}
		modifier = {
			factor = 0.8
			check_variable = { which = global_doom value = 10 }
			NOT = { check_variable = { which = global_doom value = 20 } }
		}
		modifier = {
			factor = 0.6
			check_variable = { which = global_doom value = 20 }
			NOT = { check_variable = { which = global_doom value = 30 } }
		}
		modifier = {
			factor = 0.4
			check_variable = { which = global_doom value = 30 }
			NOT = { check_variable = { which = global_doom value = 40 } }
		}
		modifier = {
			factor = 0.2
			check_variable = { which = global_doom value = 40 }
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = warlock
			}
		}
		modifier = {
			factor = 0.5
			in_faction = faction_demonologist
		}
	}
	
	trigger = {
		OR = {
			trait = arcanist
			trait = necrolyte
		}
		NOT = { in_faction = faction_purity }
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_warlock }
		learning = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			AND = {
				trait = necrolyte
				trait = human
			}
			AND = {
				trait = arcanist
				trait = human
				OR = {
					NOT = { has_global_flag = trollwars_bookmark }
					has_global_flag = trollwar_humans_join
				}
			}
			trait = dreadlord
			trait = eredar
			trait = high_elf
			trait = blood_elf
			trait = wretched
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			trait = AK_trait_dwarf
			trait = ogre_magi
			trait = orc
			trait = draenei
			trait = broken
			trait = lost_one
			trait = shivarra
			AND = {
				is_female = yes
				trait = naga
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_warlock_start
		character_event = { id = classgain.30 }
	}
}

#Necromancer
character_event = {
	id = classgain.9
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		
		modifier = {
			factor = 1.2
			trait = content
		}
		modifier = {
			factor = 0.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 1.5
			trait = zealous
		}
		modifier = {
			factor = 0.5
			trait = cruel
		}
		modifier = {
			factor = 0.5
			trait = proud
		}
		modifier = {
			factor = 1.5
			trait = kind
		}
		modifier = {
			factor = 1.5
			trait = humble
		}
		modifier = {
			factor = 0.8
			trait = deceitful
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 1.5
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = naga
				trait = gnome
				trait = AK_trait_dwarf
			}
		}
		modifier = {
			factor = 0.5
			OR = {
				religion = forgotten_shadow
				religion = lich_king
				secret_religion = forgotten_shadow
				secret_religion = lich_king
			}
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = necromancer
			}
		}
	}
	
	trigger = {
		OR = {
			trait = arcanist
			trait = necrolyte
		}
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_necromancer }
		learning = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			AND = {
				trait = necrolyte
				trait = human
			}
			AND = {
				trait = arcanist
				trait = human
				OR = {
					NOT = { has_global_flag = trollwars_bookmark }
					has_global_flag = trollwar_humans_join
				}
			}
			trait = eredar
			trait = high_elf
			trait = blood_elf
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			trait = gnoll
			trait = AK_trait_dwarf
			trait = ogre_magi
			trait = orc
			trait = draenei
			trait = broken
			trait = lost_one
			AND = {
				is_female = yes
				trait = naga
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_necromancer_start
		character_event = { id = classgain.30 }
	}
}

#Runemaster
character_event = {
	id = classgain.10
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		
		modifier = {
			factor = 1.2
			trait = content
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = runemaster
			}
		}
	}
	
	trigger = {
		trait = arcanist # change this later so it accepts ogre arcanists or tauren healers
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_runemaster }
		learning = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = ogre_magi
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_runemaster_start
		character_event = { id = classgain.30 }
	}
}

#Priest
character_event = {
	id = classgain.11
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 1.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = zealous
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 1.5
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = ogre_magi
				trait = naga
			}
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = priest
			}
		}
	}
	
	trigger = {
		trait = healer
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_priest }
		learning = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			religion_group = light_group
			religion_group = void_group
			religion_group = goblin_group
			religion_group = fel_group
			religion = sunwell
			religion = azshara
		}
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			AND = {
				trait = human
				OR = {
					NOT = { has_global_flag = trollwars_bookmark }
					has_global_flag = holy_light_founded
				}
			}
			trait = high_elf
			trait = blood_elf
			trait = gnome
			trait = goblin
			AND = {
				trait = AK_trait_dwarf
				culture = bronzebeard
			}
			trait = ogre_magi
			trait = draenei
			trait = shivarra
			AND = {
				is_female = yes
				trait = naga
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_priest_start
		character_event = { id = classgain.30 }
	}
}

#Shaman
character_event = {
	id = classgain.12
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 1.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = zealous
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 0.5
			religion_group = elemental_group
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = shaman
			}
		}
	}
	
	trigger = {
		trait = healer
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_shaman }
		learning = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			religion_group = elemental_group
			religion = old_gods
			religion = twilights_hammer
			religion = cult_of_the_infinite
			religion = cult_of_the_destroyer
			religion = emerald_nightmare
			religion = mercantilism
		}
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			AND = {
				trait = human
				has_global_flag = human_shamanism
			}
			trait = orc
			trait = goblin
			AND = {
				trait = AK_trait_dwarf
				culture = wildhammer
			}
			trait = murloc
			trait = kobold
			trait = gnoll
			trait = trogg
			trait = draenei
			trait = broken
			trait = lost_one
		}
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			NOR = {
				trait = undead_scourge
				trait = undead_forsaken
				trait = undead_generic
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_shaman_start
		character_event = { id = classgain.30 }
	}
}

#Druid
character_event = {
	id = classgain.13
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 1.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = zealous
		}
		modifier = {
			factor = 0.5
			trait = gardener
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = druid
			}
		}
	}
	
	trigger = {
		trait = healer
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_druid }
		learning = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			religion_group = elemental_group
			religion_group = wild_gods_group
			religion = old_gods
			religion = twilights_hammer
			religion = emerald_nightmare
			religion = cult_of_the_dreamer
			religion = druidism
		}
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = troll_forest
			trait = troll_ice
			trait = troll_dark
			trait = troll_sand
			trait = troll_jungle
			trait = troll_zandalari
			trait = lost_one
			AND = {
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				has_global_flag = sunwell_embraced_nature
				religion = druidism
			}
		}
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			NOR = {
				trait = undead_scourge
				trait = undead_forsaken
				trait = undead_generic
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_druid_start
		character_event = { id = classgain.30 }
	}
}

#Witch Doctor
character_event = {
	id = classgain.14
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 1.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = zealous
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = witch_doctor
			}
		}
	}
	
	trigger = {
		trait = healer
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_witch_doctor }
		learning = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = troll_forest
			trait = troll_ice
			trait = troll_dark
			trait = troll_sand
			trait = troll_jungle
			trait = troll_zandalari
			trait = ogre_magi
			trait = murloc
			trait = lost_one
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_witch_doctor_start
		character_event = { id = classgain.30 }
	}
}

#Alchemist
character_event = {
	id = classgain.15
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 0.5
			trait = genius
		}
		modifier = {
			factor = 0.8
			trait = quick
		}
		modifier = {
			factor = 0.7
			trait = shrewd
		}
		modifier = {
			factor = 0.7
			trait = diligent
		}
		modifier = {
			factor = 0.7
			trait = erudite
		}
		modifier = {
			factor = 0.5
			trait = physician
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = alchemist
			}
		}
	}
	
	trigger = {
		trait = healer
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_alchemist }
		learning = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = human
			trait = high_elf
			trait = blood_elf
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			trait = AK_trait_dwarf
			trait = ogre_magi
			trait = orc
			trait = wretched
			trait = draenei
			trait = broken
			AND = {
				is_female = yes
				trait = naga
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_alchemist_start
		character_event = { id = classgain.30 }
	}
}

#Assassin
character_event = {
	id = classgain.16
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			intrigue = 18
			NOT = { intrigue = 20 }
		}
		modifier = {
			factor = 0.6
			intrigue = 20
			NOT = { intrigue = 25 }
		}
		modifier = {
			factor = 0.3
			intrigue = 25
		}
		modifier = {
			factor = 3
			trait = one_legged
		}
		modifier = {
			factor = 1.5
			trait = clubfooted
		}
		modifier = {
			factor = 1.5
			trait = hunchback
		}
		modifier = {
			factor = 1.2
			trait = dwarf
		}
		modifier = {
			factor = 1.2
			OR = {
				trait = feeble
				trait = weak
			}
		}
		modifier = {
			factor = 0.7
			trait = shrewd
		}
		modifier = {
			factor = 0.5
			trait = strong
		}
		modifier = {
			factor = 0.7
			trait = robust
		}
		modifier = {
			factor = 8
			trait = craven
		}
		modifier = {
			factor = 0.8
			trait = brave
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = assassin
			}
		}
	}
	
	trigger = {
		trait = scout
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_assassin }
		intrigue = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = human
			trait = high_elf
			trait = blood_elf
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			trait = AK_trait_dwarf
			trait = orc
			trait = murloc
			trait = gnoll
			trait = kobold
			trait = wretched
			trait = succubus
			trait = dreadlord
			trait = shivarra
			trait = broken
			trait = lost_one
			AND = {
				is_female = no
				trait = naga
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_assassin_start
		character_event = { id = classgain.30 }
	}
}

#Rogue
character_event = {
	id = classgain.17
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			intrigue = 18
			NOT = { intrigue = 20 }
		}
		modifier = {
			factor = 0.6
			intrigue = 20
			NOT = { intrigue = 25 }
		}
		modifier = {
			factor = 0.3
			intrigue = 25
		}
		modifier = {
			factor = 3
			trait = one_legged
		}
		modifier = {
			factor = 1.5
			trait = clubfooted
		}
		modifier = {
			factor = 1.5
			trait = hunchback
		}
		modifier = {
			factor = 1.2
			trait = dwarf
		}
		modifier = {
			factor = 1.2
			OR = {
				trait = feeble
				trait = weak
			}
		}
		modifier = {
			factor = 0.7
			trait = shrewd
		}
		modifier = {
			factor = 0.5
			trait = strong
		}
		modifier = {
			factor = 0.7
			trait = robust
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = rogue
			}
		}
	}
	
	trigger = {
		trait = scout
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_rogue }
		intrigue = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = human
			trait = high_elf
			trait = blood_elf
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			trait = AK_trait_dwarf
			trait = orc
			trait = murloc
			trait = gnoll
			trait = kobold
			trait = wretched
			AND = {
				is_female = no
				trait = naga
			}
			trait = lost_one
			trait = broken
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_rogue_start
		character_event = { id = classgain.30 }
	}
}

#Beastmaster
character_event = {
	id = classgain.18
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			stewardship = 18
			NOT = { stewardship = 20 }
		}
		modifier = {
			factor = 0.6
			stewardship = 20
			NOT = { stewardship = 25 }
		}
		modifier = {
			factor = 0.3
			stewardship = 25
		}
		modifier = {
			factor = 3
			trait = one_legged
		}
		modifier = {
			factor = 1.5
			trait = clubfooted
		}
		modifier = {
			factor = 1.5
			trait = hunchback
		}
		modifier = {
			factor = 1.2
			trait = dwarf
		}
		modifier = {
			factor = 1.2
			OR = {
				trait = feeble
				trait = weak
			}
		}
		modifier = {
			factor = 0.7
			trait = shrewd
		}
		modifier = {
			factor = 0.5
			trait = strong
		}
		modifier = {
			factor = 0.7
			trait = robust
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = beastmaster
			}
		}
	}
	
	trigger = {
		trait = scout
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_beastmaster }
		stewardship = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = human
			trait = high_elf
			trait = blood_elf
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = goblin
			trait = AK_trait_dwarf
			trait = orc
			trait = murloc
			trait = gnoll
			trait = ogre
			AND = {
				is_female = no
				trait = naga
			}
			trait = draenei
			trait = broken
			trait = lost_one
		}
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			NOR = {
				trait = undead_scourge
				trait = undead_forsaken
				trait = undead_generic
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_beastmaster_start
		character_event = { id = classgain.30 }
	}
}

#Explorer
character_event = {
	id = classgain.19
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			stewardship = 18
			NOT = { stewardship = 20 }
		}
		modifier = {
			factor = 0.6
			stewardship = 20
			NOT = { stewardship = 25 }
		}
		modifier = {
			factor = 0.3
			stewardship = 25
		}
		modifier = {
			factor = 1.2
			trait = one_legged
		}
		modifier = {
			factor = 0.7
			trait = shrewd
		}
		modifier = {
			factor = 0.5
			trait = erudite
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = explorer
			}
		}
	}
	
	trigger = {
		trait = scout
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_explorer }
		stewardship = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = human
			trait = high_elf
			trait = blood_elf
			trait = gnome
			trait = goblin
			trait = AK_trait_dwarf
			trait = draenei
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_explorer_start
		character_event = { id = classgain.30 }
	}
}

#Ranger
character_event = {
	id = classgain.20
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			stewardship = 18
			NOT = { stewardship = 20 }
		}
		modifier = {
			factor = 0.6
			stewardship = 20
			NOT = { stewardship = 25 }
		}
		modifier = {
			factor = 0.3
			stewardship = 25
		}
		modifier = {
			factor = 1.2
			trait = one_legged
		}
		modifier = {
			factor = 0.7
			trait = shrewd
		}
		modifier = {
			factor = 0.5
			trait = erudite
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = ranger
			}
		}
	}
	
	trigger = {
		trait = scout
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_ranger }
		stewardship = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = human
			trait = high_elf
			trait = blood_elf
			trait = goblin
			trait = AK_trait_dwarf
			trait = eredar
			trait = draenei
			trait = broken
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_ranger_start
		character_event = { id = classgain.30 }
	}
}

#Engineer
character_event = {
	id = classgain.21
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			stewardship = 18
			NOT = { stewardship = 20 }
		}
		modifier = {
			factor = 0.6
			stewardship = 20
			NOT = { stewardship = 25 }
		}
		modifier = {
			factor = 0.3
			stewardship = 25
		}
		modifier = {
			factor = 0.6
			trait = erudite
		}
		modifier = {
			factor = 4
			OR = {
				trait = dull
				trait = slow
			}
		}
		modifier = {
			factor = 0.6
			trait = shrewd
		}
		modifier = {
			factor = 0.5
			trait = quick
		}
		modifier = {
			factor = 0.2
			trait = genius
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = engineer
			}
		}
	}
	
	trigger = {
		trait = tinker
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_engineer }
		stewardship = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = goblin
			trait = gnome
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_engineer_start
		character_event = { id = classgain.30 }
	}
}

#Mechanist
character_event = {
	id = classgain.22
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			stewardship = 18
			NOT = { stewardship = 20 }
		}
		modifier = {
			factor = 0.6
			stewardship = 20
			NOT = { stewardship = 25 }
		}
		modifier = {
			factor = 0.3
			stewardship = 25
		}
		modifier = {
			factor = 0.6
			trait = erudite
		}
		modifier = {
			factor = 4
			OR = {
				trait = dull
				trait = slow
			}
		}
		modifier = {
			factor = 0.6
			trait = shrewd
		}
		modifier = {
			factor = 0.5
			trait = quick
		}
		modifier = {
			factor = 0.2
			trait = genius
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = mechanist
			}
		}
	}
	
	trigger = {
		trait = scout
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_mechanist }
		stewardship = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = goblin
			trait = gnome
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_mechanist_start
		character_event = { id = classgain.30 }
	}
}

#Techmage
character_event = {
	id = classgain.23
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			OR = {
				AND = {
					stewardship = 18
					NOT = { stewardship = 20 }
				}
				AND = {
					learning = 18
				NOT = { learning = 20 }
				}
			}
		}
		modifier = {
			factor = 0.6
			OR = {
				AND = {
					stewardship = 20
					NOT = { stewardship = 25 }
				}
				AND = {
					learning = 20
					NOT = { learning = 25 }
				}
			}
		}
		modifier = {
			factor = 0.3
			OR = {
				stewardship = 25
				learning = 25
			}
		}
		modifier = {
			factor = 0.6
			trait = erudite
		}
		modifier = {
			factor = 4
			OR = {
				trait = dull
				trait = slow
			}
		}
		modifier = {
			factor = 0.6
			trait = shrewd
		}
		modifier = {
			factor = 0.5
			trait = quick
		}
		modifier = {
			factor = 0.2
			trait = genius
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = techmage
			}
		}
	}
	
	trigger = {
		OR = {
			trait = tinker
			trait = arcanist
		}
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_techmage }
		OR = {
			stewardship = 15
			learning = 15
		}
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = goblin
			trait = gnome
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_techmage_start
		character_event = { id = classgain.30 }
	}
}

#Warrior
character_event = {
	id = classgain.24
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			martial = 18
			NOT = { martial = 20 }
		}
		modifier = {
			factor = 0.6
			martial = 20
			NOT = { martial = 25 }
		}
		modifier = {
			factor = 0.3
			martial = 25
		}
		modifier = {
			factor = 1.5
			trait = clubfooted
		}
		modifier = {
			factor = 1.5
			trait = hunchback
		}
		modifier = {
			factor = 1.2
			trait = dwarf
		}
		modifier = {
			factor = 1.5
			trait = one_eyed
		}
		modifier = {
			factor = 1.5
			trait = one_handed
		}
		modifier = {
			factor = 1.5
			trait = one_legged
		}
		modifier = {
			factor = 8
			trait = blinded
		}
		modifier = {
			factor = 0.5
			trait = strong
		}
		modifier = {
			factor = 0.7
			trait = robust
		}
		modifier = {
			factor = 0.9
			trait = wroth
		}
		modifier = {
			factor = 8
			trait = craven
		}
		modifier = {
			factor = 0.8
			trait = brave
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = warrior
			}
		}
	}
	
	trigger = {
		trait = fighter
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_warrior }
		martial = 15
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			trait = human
			trait = high_elf
			trait = blood_elf
			trait = troll_ice
			trait = troll_forest
			trait = troll_jungle
			trait = troll_sand
			trait = troll_dark
			trait = troll_zandalari
			trait = gnome
			trait = goblin
			trait = AK_trait_dwarf
			trait = ogre
			trait = orc
			trait = murloc
			trait = gnoll
			trait = kobold
			trait = trogg
			trait = wretched
			trait = eredar
			AND = {
				is_female = no
				trait = naga
			}
			trait = fel_lord
			trait = pit_lord
			trait = doomlord
			trait = draenei
			trait = broken
			trait = lost_one
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_warrior_start
		character_event = { id = classgain.30 }
	}
}

#Paladin
character_event = {
	id = classgain.25
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			OR = {
				AND = {
					martial = 18
					NOT = { martial = 20 }
				}
				AND = {
					learning = 18
				NOT = { learning = 20 }
				}
			}
		}
		modifier = {
			factor = 0.6
			OR = {
				AND = {
					martial = 20
					NOT = { martial = 25 }
				}
				AND = {
					learning = 20
					NOT = { learning = 25 }
				}
			}			
		}
		modifier = {
			factor = 0.3
			OR = {
				learning = 25
			}
		}
		modifier = {
			factor = 1.5
			trait = clubfooted
		}
		modifier = {
			factor = 1.5
			trait = hunchback
		}
		modifier = {
			factor = 1.2
			trait = dwarf
		}
		modifier = {
			factor = 1.5
			trait = one_eyed
		}
		modifier = {
			factor = 1.5
			trait = one_handed
		}
		modifier = {
			factor = 1.5
			trait = one_legged
		}
		modifier = {
			factor = 8
			trait = blinded
		}
		modifier = {
			factor = 0.5
			trait = strong
		}
		modifier = {
			factor = 0.7
			trait = robust
		}
		modifier = {
			factor = 8
			trait = craven
		}
		modifier = {
			factor = 0.8
			trait = brave
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = paladin
			}
		}
	}
	
	trigger = {
		trait = fighter
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_paladin }
		OR = {
			martial = 15
			learning = 15
		}
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			AND = {
				trait = human
				OR = {
					has_global_flag = thirdwar_bookmark
					has_global_flag = wow_bookmark
					religion_group = light_group
					has_landed_title = d_tyrs_guard
					any_liege = {
						has_landed_title = d_tyrs_guard
					}
					society_member_of = tyrs_guard_society
				}
			}
			AND = {
				OR = {
					has_global_flag = thirdwar_bookmark
					has_global_flag = wow_bookmark
				}
				trait = AK_trait_dwarf
				culture = bronzebeard
				religion_group = light_group
			}
			AND = {
				OR = {
					has_global_flag = wow_bookmark
					has_global_flag = blood_knights_active
				}
				OR = {
					trait = blood_elf
					trait = high_elf
				}
				religion = sunwell
			}
			AND = {
				religion_group = light_group
				trait = draenei
			}
		}
		OR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
			NOR = {
				trait = undead_scourge
				trait = undead_forsaken
				trait = undead_generic
			}
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_paladin_start
		character_event = { id = classgain.30 }
	}
}

#Monk
character_event = {
	id = classgain.26
	hide_window = yes
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	mean_time_to_happen = {
		years = 60
		modifier = {
			factor = 0.8
			martial = 18
			NOT = { martial = 20 }
		}
		modifier = {
			factor = 0.6
			martial = 20
			NOT = { martial = 25 }
		}
		modifier = {
			factor = 0.3
			martial = 25
		}
		modifier = {
			factor = 1.5
			trait = clubfooted
		}
		modifier = {
			factor = 1.5
			trait = hunchback
		}
		modifier = {
			factor = 1.2
			trait = dwarf
		}
		modifier = {
			factor = 1.5
			trait = one_eyed
		}
		modifier = {
			factor = 1.5
			trait = one_handed
		}
		modifier = {
			factor = 1.5
			trait = one_legged
		}
		modifier = {
			factor = 8
			trait = blinded
		}
		modifier = {
			factor = 0.5
			trait = strong
		}
		modifier = {
			factor = 0.7
			trait = robust
		}
		modifier = {
			factor = 8
			trait = craven
		}
		modifier = {
			factor = 0.8
			trait = brave
		}
		modifier = {
			factor = 0.05
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = wretched
			}
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			any_close_relative = {
				is_alive = yes
				OR = {
					trait = high_elf
					trait = blood_elf
					trait = wretched
				}
				NOR = {
					trait = undead_generic
					trait = undead_scourge
					trait = undead_forsaken
				}
				trait = monk
			}
		}
	}
	
	trigger = {
		trait = fighter
		NOT = {	has_character_flag = has_adv_class }
		NOT = {	has_character_flag = ct_class_start }
		NOT = { has_character_flag = refused_monk }
		martial = 15
		has_game_rule = {
			name = class_requirements
			value = unrestricted
		}
	}
	
	immediate = {
		set_character_flag = ct_class_start
		set_character_flag = ct_monk_start
		character_event = { id = classgain.30 }
	}
}

#Warlock Drift
character_event = {
	id = classgain.27
	hide_window = yes
	
	prisoner = no
	
	mean_time_to_happen = {
		years = 700
		modifier = {
			factor = 1.2
			trait = content
		}
		modifier = {
			factor = 0.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 1.5
			trait = zealous
		}
		modifier = {
			factor = 1.5
			trait = cruel
		}
		modifier = {
			factor = 1.5
			trait = proud
		}
		modifier = {
			factor = 0.5
			trait = kind
		}
		modifier = {
			factor = 0.5
			trait = humble
		}
		modifier = {
			factor = 1.2
			trait = deceitful
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 1.5
			OR = {
				trait = high_elf
			}
		}
		modifier = {
			factor = 0.5
			OR = {
				religion = burning_legion
				religion = demonology
				secret_religion = burning_legion
				secret_religion = demonology
			}
		}
		modifier = {
			factor = 0.5
			OR = {
				trait = blood_elf
				trait = ogre_magi
			}
		}
		modifier = {
			factor = 0.8
			trait = fel_tainted
		}
		modifier = {
			factor = 0.5
			OR = {
				trait = fel_corrupted
				trait = felsworn
			}
		}
		modifier = {
			factor = 0.8
			location = {
				check_variable = { which = prov_corruption value = 10 }
				NOT = { check_variable = { which = prov_corruption value = 20 } }
			}
		}
		modifier = {
			factor = 0.5
			location = {
				check_variable = { which = prov_corruption value = 20 }
			}
		}
		modifier = {
			factor = 0.8
			check_variable = { which = global_doom value = 10 }
			NOT = { check_variable = { which = global_doom value = 20 } }
		}
		modifier = {
			factor = 0.6
			check_variable = { which = global_doom value = 20 }
			NOT = { check_variable = { which = global_doom value = 30 } }
		}
		modifier = {
			factor = 0.4
			check_variable = { which = global_doom value = 30 }
			NOT = { check_variable = { which = global_doom value = 40 } }
		}
		modifier = {
			factor = 0.2
			check_variable = { which = global_doom value = 40 }
		}
		modifier = {
			factor = 0.5
			in_faction = faction_demonologist
		}
	}
	
	trigger = {
		NOT = { in_faction = faction_purity }
		NOT = { has_character_flag = refused_warlock }
		OR = {
			trait = mage
			trait = priest
			trait = shaman
			trait = witch_doctor
			trait = druid
			trait = techmage
		}
		NOT = {	has_character_flag = ct_drift_start }
		NOT = { has_character_flag = refused_warlock }
	}
	
	immediate = {
		set_character_flag = ct_drift_start
		set_character_flag = ct_warlock_drift
		character_event = { id = classgain.30 }
	}
}

#Necromancer Drift
character_event = {
	id = classgain.28
	hide_window = yes
	
	prisoner = no
	
	mean_time_to_happen = {
		years = 700
		modifier = {
			factor = 1.2
			trait = content
		}
		modifier = {
			factor = 0.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 1.5
			trait = zealous
		}
		modifier = {
			factor = 0.5
			trait = cruel
		}
		modifier = {
			factor = 0.5
			trait = proud
		}
		modifier = {
			factor = 1.5
			trait = kind
		}
		modifier = {
			factor = 1.5
			trait = humble
		}
		modifier = {
			factor = 0.8
			trait = deceitful
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 1.5
			OR = {
				trait = high_elf
				trait = blood_elf
				trait = naga
				trait = gnome
				trait = AK_trait_dwarf
			}
		}
		modifier = {
			factor = 0.5
			OR = {
				religion = forgotten_shadow
				religion = lich_king
				secret_religion = forgotten_shadow
				secret_religion = lich_king
			}
		}
	}
	
	trigger = {
		NOT = { has_character_flag = refused_necromancer }
		OR = {
			trait = mage
			trait = priest
			trait = shaman
			trait = witch_doctor
			trait = druid
			trait = techmage
		}
		NOT = {	has_character_flag = ct_drift_start }
		NOT = { has_character_flag = refused_necromancer }
	}
	
	immediate = {
		set_character_flag = ct_drift_start
		set_character_flag = ct_necromancer_drift
		character_event = { id = classgain.30 }
	}
}

#Necrolyte Drift
character_event = {
	id = classgain.29
	hide_window = yes
	
	prisoner = no
	
	mean_time_to_happen = {
		years = 700
		modifier = {
			factor = 1.2
			trait = content
		}
		modifier = {
			factor = 0.5
			trait = cynical
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 1.5
			trait = zealous
		}
		modifier = {
			factor = 1.5
			trait = cruel
		}
		modifier = {
			factor = 1.5
			trait = proud
		}
		modifier = {
			factor = 0.5
			trait = kind
		}
		modifier = {
			factor = 0.5
			trait = humble
		}
		modifier = {
			factor = 1.2
			trait = deceitful
		}
		modifier = {
			factor = 0.8
			learning = 18
			NOT = { learning = 20 }
		}
		modifier = {
			factor = 0.6
			learning = 20
			NOT = { learning = 25 }
		}
		modifier = {
			factor = 0.3
			learning = 25
		}
		modifier = {
			factor = 1.5
			OR = {
				trait = high_elf
			}
		}
		modifier = {
			factor = 0.5
			OR = {
				religion = burning_legion
				religion = demonology
				religion = forgotten_shadow
				religion = lich_king
				secret_religion = burning_legion
				secret_religion = demonology
				secret_religion = forgotten_shadow
				secret_religion = lich_king
			}
		}
		modifier = {
			factor = 0.5
			OR = {
				trait = blood_elf
				trait = ogre_magi
			}
		}
		modifier = {
			factor = 0.5
			in_faction = faction_demonologist
		}
	}
	
	trigger = {
		NOT = { has_character_flag = refused_necrolyte }
		NOT = { in_faction = faction_purity }
		OR = {
			trait = arcanist
			trait = healer
		}
		NOT = {	has_character_flag = drift_start }
		NOT = { has_character_flag = refused_necrolyte }
	}
	
	immediate = {
		set_character_flag = drift_start
		set_character_flag = necrolyte_drift
		character_event = { id = classgain.30 }
	}
}

#Start of chain
character_event = {
	id = classgain.30
	picture = GFX_evt_magic_study
	desc = {
		trigger = {
			has_character_flag = ct_arcanist_start
		}
		text = EVTDESCCLASSGAIN.30a # Lately, you've become interested in arcane magic and its inner workings. However, to proceed further in your studies, you'll need to spend some time, and perhaps money, studying it.
		picture = GFX_evt_magic_study
	}
	desc = {
		trigger = {
			has_character_flag = ct_necrolyte_start
		}
		text = EVTDESCCLASSGAIN.30b # Lately, you've become interested in fel and death magic and their inner workings. However, to proceed further in your studies, you'll need to spend some time, and perhaps money, studying it.
		picture = GFX_evt_magic_study
	}
	desc = {
		trigger = {
			has_character_flag = ct_necrolyte_drift
		}
		text = EVTDESCCLASSGAIN.30c # Though you already hold some power, you feel the yearning for more. Fel magic could give you that power, if you only reach out and bend it to your will.
		picture = GFX_goblin_warlock
	}
	desc = {
		trigger = {
			has_character_flag = ct_healer_start
		}
		text = EVTDESCCLASSGAIN.30d	# Lately, you've become interested in the art of healing. However, to proceed further in your studies, you'll need to spend some time, and perhaps money, studying it.
		picture = GFX_evt_doctor_tending_to_sick
	}
	desc = {
		trigger = {
			has_character_flag = ct_scout_start
		}
		text = EVTDESCCLASSGAIN.30e	# Lately, you've become interested in learning the lay of the land. However, to proceed further in your studies, you'll need to spend some time, and perhaps money, studying it.
		picture = GFX_evt_hunt
	}
	desc = {
		trigger = {
			has_character_flag = ct_tinker_start
		}
		text = EVTDESCCLASSGAIN.30f	# Lately, you've become interested in learning about machines. However, to proceed further in your studies, you'll need to spend some time, and perhaps money, studying it.
		picture = GFX_evt_gathering_of_minds
	}
	desc = {
		trigger = {
			has_character_flag = ct_fighter_start
		}
		text = EVTDESCCLASSGAIN.30g	# Lately, you've become interested in improving your fighting. However, to proceed further in your studies, you'll need to spend some time, and perhaps money, studying it.
		picture = GFX_evt_melee
	}
	desc = {
		trigger = {
			has_character_flag = ct_mage_start
		}
		text = EVTDESCCLASSGAIN.30h # Though you are an arcanist already, you yearn for more. Becoming a full mage is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_magic_study
	}
	desc = {
		trigger = {
			has_character_flag = ct_warlock_start
			trait = arcanist
		}
		text = EVTDESCCLASSGAIN.30i # Though you are an arcanist already, you yearn for more. The power of a warlock is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_magic_study
	}
	desc = {
		trigger = {
			has_character_flag = ct_warlock_start
			trait = necrolyte
		}
		text = EVTDESCCLASSGAIN.30j # Though you are a necrolyte already, you yearn for more. The power of a warlock is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_magic_study
	}
	desc = {
		trigger = {
			has_character_flag = ct_warlock_drift
		}
		text = EVTDESCCLASSGAIN.30k # Though you already hold power, you feel the yearning for more. Fel magic could give you that power, if you only reach out and bend it to your will.
		picture = GFX_goblin_warlock
	}
	desc = {
		trigger = {
			has_character_flag = ct_necromancer_start
			trait = arcanist
		}
		text = EVTDESCCLASSGAIN.30l # Though you are an arcanist already, you yearn for more. The power of a necromancer is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_goblin_warlock
	}
	desc = {
		trigger = {
			has_character_flag = ct_necromancer_start
			trait = necrolyte
		}
		text = EVTDESCCLASSGAIN.30m # Though you are a necrolyte already, you yearn for more. The power of a necromancer is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_goblin_warlock
	}
	desc = {
		trigger = {
			has_character_flag = ct_necromancer_drift
		}
		text = EVTDESCCLASSGAIN.30n # Though you already hold power, you feel the yearning for more. Necromancy could give you that power, if you only dedicate yourself to it.
		picture = GFX_bloodmage
	}
	desc = {
		trigger = {
			has_character_flag = ct_runemaster_start
			trait = arcanist
		}
		text = EVTDESCCLASSGAIN.30o # Though you are an arcanist already, you yearn for more. Becoming a full runemaster is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_magic_study
	}
	desc = {
		trigger = {
			has_character_flag = ct_runemaster_start
			trait = arcanist
		}
		text = EVTDESCCLASSGAIN.30p # Though you are a healer already, you yearn for more. Becoming a full runemaster is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_magic_study
	}
	desc = {
		trigger = {
			has_character_flag = ct_priest_start
		}
		text = EVTDESCCLASSGAIN.30q # Though you are a healer already, you yearn for more. Becoming a full priest is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_monastery_monks
	}
	desc = {
		trigger = {
			has_character_flag = ct_shaman_start
		}
		text = EVTDESCCLASSGAIN.30r # Though you are a healer already, you yearn for more. Becoming a full shaman is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_orc_shaman
	}
	desc = {
		trigger = {
			has_character_flag = ct_druid_start
		}
		text = EVTDESCCLASSGAIN.30s # Though you are a healer already, you yearn for more. Becoming a full druid is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_boomkin
	}
	desc = {
		trigger = {
			has_character_flag = ct_witch_doctor_start
		}
		text = EVTDESCCLASSGAIN.30t # Though you are a healer already, you yearn for more. Becoming a full witch doctor is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_zandalari_meeting
	}
	desc = {
		trigger = {
			has_character_flag = ct_alchemist_start
		}
		text = EVTDESCCLASSGAIN.30u # Though you are a healer already, you yearn for more. Becoming a full alchemist is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_doctor_tending_to_sick
	}
	desc = {
		trigger = {
			has_character_flag = ct_assassin_start
		}
		text = EVTDESCCLASSGAIN.30v # Though you are a scout already, you yearn for more. Becoming a full assassin is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_shadow
	}
	desc = {
		trigger = {
			has_character_flag = ct_rogue_start
		}
		text = EVTDESCCLASSGAIN.30w # Though you are a scout already, you yearn for more. Becoming a full rogue is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_shadow
	}
	desc = {
		trigger = {
			has_character_flag = ct_beastmaster_start
		}
		text = EVTDESCCLASSGAIN.30x # Though you are a scout already, you yearn for more. Becoming a full beastmaster is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_hunt
	}
	desc = {
		trigger = {
			has_character_flag = ct_explorer_start
		}
		text = EVTDESCCLASSGAIN.30y # Though you are a scout already, you yearn for more. Becoming a full explorer is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_pilgrims_epic_journey
	}
	desc = {
		trigger = {
			has_character_flag = ct_ranger_start
		}
		text = EVTDESCCLASSGAIN.30z # Though you are a scout already, you yearn for more. Becoming a full ranger is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_hunt
	}
	desc = {
		trigger = {
			has_character_flag = ct_engineer_start
		}
		text = EVTDESCCLASSGAIN.30za # Though you are a tinker already, you yearn for more. Becoming a full engineer is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_experiment
	}
	desc = {
		trigger = {
			has_character_flag = ct_mechanist_start
		}
		text = EVTDESCCLASSGAIN.30zb # Though you are a tinker already, you yearn for more. Becoming a full mechanist is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_experiment
	}
	desc = {
		trigger = {
			has_character_flag = ct_techmage_start
		}
		text = EVTDESCCLASSGAIN.30zc # Though you are a tinker already, you yearn for more. Becoming a full techmage is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_experiment
	}
	desc = {
		trigger = {
			has_character_flag = ct_warrior_start
		}
		text = EVTDESCCLASSGAIN.30zd # Though you are a fighter already, you yearn for more. Becoming a full warrior is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_melee
	}
	desc = {
		trigger = {
			has_character_flag = ct_paladin_start
		}
		text = EVTDESCCLASSGAIN.30ze # Though you are a fighter already, you yearn for more. Becoming a full paladin is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_melee
	}
	desc = {
		trigger = {
			has_character_flag = ct_monk_start
		}
		text = EVTDESCCLASSGAIN.30zf # Though you are a fighter already, you yearn for more. Becoming a full monk is within your reach, and all you need to do is to dedicate some of your time to it.
		picture = GFX_evt_melee
	}
	border = GFX_event_normal_frame_religion
	
	min_age = 16
	only_capable = yes
	prisoner = no
	
	is_triggered_only = yes
	
	option = {
		ai_chance = {
			factor = 10
		}
		name = EVTOPTCLASSGAIN.30a # Let's get to work!
		prestige = 5
	}
	
	option = {
		ai_chance = {
			factor = 1
			modifier = {
				factor = 5
				trait = depressed
			}
			modifier = {
				factor = 30
				NOT = {
					has_game_rule = {
						name = class_opinions
						value = off
					}
				}
				OR = {
					AND = {
						OR = {
							has_character_flag = ct_necrolyte_start
							has_character_flag = ct_necrolyte_drift
						}
						NOR = {
							trait = lunatic
							trait = impaler
							trait = envious
							trait = proud
							trait = deceitful
							trait = ambitious
							trait = arbitrary
							trait = cynical
							trait = cruel
							accepts_warlock = yes
							accepts_necromancer = yes
						}
					}
					AND = {
						OR = {
							has_character_flag = ct_warlock_start
							has_character_flag = ct_warlock_drift
						}
						NOR = {
							trait = lunatic
							trait = impaler
							trait = envious
							trait = proud
							trait = deceitful
							trait = ambitious
							trait = arbitrary
							trait = cynical
							trait = cruel
							accepts_warlock = yes
						}
					}
					AND = {
						OR = {
							has_character_flag = ct_necromancer_start
							has_character_flag = ct_necromancer_drift
						}
						NOR = {
							trait = lunatic
							trait = impaler
							trait = envious
							trait = proud
							trait = deceitful
							trait = ambitious
							trait = arbitrary
							trait = cynical
							trait = cruel
							accepts_necromancer = yes
						}
					}
					AND = {
						has_character_flag = ct_rogue_start
						NOR = {
							trait = lunatic
							trait = impaler
							trait = envious
							trait = proud
							trait = deceitful
							trait = ambitious
							trait = arbitrary
							trait = cynical
							trait = cruel
							accepts_rogue = yes
						}
					}
					AND = {
						has_character_flag = ct_assassin_start
						NOR = {
							trait = lunatic
							trait = impaler
							trait = envious
							trait = proud
							trait = deceitful
							trait = ambitious
							trait = arbitrary
							trait = cynical
							trait = cruel
							accepts_assassin = yes
						}
					}
				}
			}
		}
		name = EVTOPTCLASSGAIN.30b # Actually, I changed my mind. I'd rather not do this.
		prestige = -10
		hidden_tooltip = {
			trigger_switch = {
				on_trigger = has_character_flag
				ct_arcanist_start = { set_character_flag = refused_arcanist }
				ct_necrolyte_start = { set_character_flag = refused_necrolyte }
				ct_necrolyte_drift = { set_character_flag = refused_necrolyte }
				ct_healer_start = { set_character_flag = refused_healer }
				ct_scout_start = { set_character_flag = refused_scout }
				ct_tinker_start = { set_character_flag = refused_tinker }
				ct_fighter_start = { set_character_flag = refused_fighter }
				ct_mage_start = { set_character_flag = refused_mage }
				ct_warlock_start = { set_character_flag = refused_warlock }
				ct_warlock_drift = { set_character_flag = refused_warlock }
				ct_necromancer_start = { set_character_flag = refused_necromancer }
				ct_necromancer_drift = { set_character_flag = refused_necromancer }
				ct_runemaster_start = { set_character_flag = refused_runemaster }
				ct_priest_start = { set_character_flag = refused_priest }
				ct_shaman_start = { set_character_flag = refused_shaman }
				ct_druid_start = { set_character_flag = refused_druid }
				ct_witch_doctor_start = { set_character_flag = refused_witch_doctor }
				ct_alchemist_start = { set_character_flag = refused_alchemist }
				ct_assassin_start = { set_character_flag = refused_assassin }
				ct_rogue_start = { set_character_flag = refused_rogue }
				ct_beastmaster_start = { set_character_flag = refused_beastmaster }
				ct_explorer_start = { set_character_flag = refused_explorer }
				ct_ranger_start = { set_character_flag = refused_ranger }
				ct_engineer_start = { set_character_flag = refused_engineer }
				ct_mechanist_start = { set_character_flag = refused_mechanist }
				ct_techmage_start = { set_character_flag = refused_techmage }
				ct_warrior_start = { set_character_flag = refused_warrior }
				ct_paladin_start = { set_character_flag = refused_paladin }
				ct_monk_start = { set_character_flag = refused_monk }
			}
			clear_flags_with_prefix = ct_
		}
	}
}

character_event = {
	id = classgain.31
	desc = EVTDESCCLASSGAIN.31 # Your studies are over... at least for now.
	picture = GFX_evt_magic_study
	border = GFX_event_normal_frame_religion
	
	prisoner = no
	
	mean_time_to_happen = {
		months = 20
		modifier = {
			factor = 0.5
			has_character_flag = ct_books
		}
		modifier = {
			factor = 0.5
			has_character_flag = ct_gethelp
		}
	}
	
	trigger = {
		OR = {
			has_character_flag = ct_arcanist_start
			has_character_flag = ct_healer_start
			has_character_flag = ct_necrolyte_start
			has_character_flag = ct_necrolyte_drift
			has_character_flag = ct_tinker_start
			has_character_flag = ct_scout_start
			has_character_flag = ct_fighter_start
			has_character_flag = ct_mage_start
			has_character_flag = ct_warlock_start
			has_character_flag = ct_warlock_drift
			has_character_flag = ct_necromancer_start
			has_character_flag = ct_necromancer_drift
			has_character_flag = ct_runemaster_start
			has_character_flag = ct_priest_start
			has_character_flag = ct_shaman_start
			has_character_flag = ct_druid_start
			has_character_flag = ct_witch_doctor_start
			has_character_flag = ct_alchemist_start
			has_character_flag = ct_assassin_start
			has_character_flag = ct_rogue_start
			has_character_flag = ct_beastmaster_start
			has_character_flag = ct_explorer_start
			has_character_flag = ct_ranger_start
			has_character_flag = ct_engineer_start
			has_character_flag = ct_mechanist_start
			has_character_flag = ct_techmage_start
			has_character_flag = ct_warrior_start
			has_character_flag = ct_paladin_start
			has_character_flag = ct_monk_start
		}
	}
	
	option = {
		name = AKSUCCESS # Success!
		hidden_tooltip = {
			trigger_switch = {
				on_trigger = has_character_flag
				ct_arcanist_start = { add_trait = arcanist }
				ct_necrolyte_start = {
					add_trait = necrolyte
					set_character_flag = necrolyte_discovered
				}
				ct_necrolyte_drift = {
					remove_trait = arcanist
					remove_trait = healer
					add_trait = necrolyte
					set_character_flag = necrolyte_discovered
				}
				ct_healer_start = { add_trait = healer }
				ct_scout_start = { add_trait = scout }
				ct_tinker_start = { add_trait = tinker }
				ct_fighter_start = { add_trait = fighter }
				ct_mage_start = {
					remove_trait = arcanist
					add_trait = mage
					set_character_flag = has_adv_class
				}
				ct_warlock_start = {
					remove_trait = arcanist
					remove_trait = necrolyte
					add_trait = warlock
					set_character_flag = has_adv_class
					set_character_flag = warlock_discovered
				}
				ct_warlock_drift = {
					remove_trait = mage
					remove_trait = priest
					remove_trait = shaman
					remove_trait = druid
					remove_trait = witch_doctor
					remove_trait = techmage
					remove_character_modifier = abjuration
					remove_character_modifier = enchantment
					remove_character_modifier = illusion
					remove_character_modifier = divination
					remove_character_modifier = transmutation
					remove_character_modifier = conjuration
					remove_character_modifier = evocation
					remove_character_modifier = evocation_fake
					remove_character_modifier = blood_magic
					remove_character_modifier = hexes
					remove_character_modifier = brews
					remove_character_modifier = shadow_hunter
					remove_character_modifier = holy_priest
					remove_character_modifier = holy_priest_fake
					remove_character_modifier = sun_priest
					remove_character_modifier = sun_priest_fake
					remove_character_modifier = moon_priest
					remove_character_modifier = moon_priest_fake
					remove_character_modifier = shadow_priest
					remove_character_modifier = sea_witch
					remove_character_modifier = moon_druid
					remove_character_modifier = sun_druid
					remove_character_modifier = mender
					remove_character_modifier = mender_fake
					remove_character_modifier = feral_druid
					remove_character_modifier = flame_druid
					remove_character_modifier = wave_druid
					remove_character_modifier = wind_druid
					remove_character_modifier = stone_druid
					remove_character_modifier = nightmare_druid
					remove_character_modifier = elementalist
					remove_character_modifier = elementalist_fake
					remove_character_modifier = spiritualist
					remove_character_modifier = dark_shaman
					add_trait = warlock
					set_character_flag = warlock_discovered
				}
				ct_necromancer_start = {
					remove_trait = arcanist
					remove_trait = necrolyte
					add_trait = necromancer
					set_character_flag = has_adv_class
					set_character_flag = necromancer_discovered
				}
				ct_necromancer_drift = {
					remove_trait = mage
					remove_trait = priest
					remove_trait = shaman
					remove_trait = druid
					remove_trait = witch_doctor
					remove_trait = techmage
					remove_character_modifier = abjuration
					remove_character_modifier = enchantment
					remove_character_modifier = illusion
					remove_character_modifier = divination
					remove_character_modifier = transmutation
					remove_character_modifier = conjuration
					remove_character_modifier = evocation
					remove_character_modifier = evocation_fake
					remove_character_modifier = blood_magic
					remove_character_modifier = hexes
					remove_character_modifier = brews
					remove_character_modifier = shadow_hunter
					remove_character_modifier = holy_priest
					remove_character_modifier = holy_priest_fake
					remove_character_modifier = sun_priest
					remove_character_modifier = sun_priest_fake
					remove_character_modifier = moon_priest
					remove_character_modifier = moon_priest_fake
					remove_character_modifier = shadow_priest
					remove_character_modifier = sea_witch
					remove_character_modifier = moon_druid
					remove_character_modifier = sun_druid
					remove_character_modifier = mender_fake
					remove_character_modifier = feral_druid
					remove_character_modifier = flame_druid
					remove_character_modifier = wave_druid
					remove_character_modifier = wind_druid
					remove_character_modifier = stone_druid
					remove_character_modifier = nightmare_druid
					remove_character_modifier = elementalist
					remove_character_modifier = elementalist_fake
					remove_character_modifier = spiritualist
					remove_character_modifier = dark_shaman
					add_trait = necromancer
					set_character_flag = necromancer_discovered
				}
				ct_runemaster_start = {
					if = {
						limit = {
							trait = ogre_magi
						}
						remove_trait = arcanist
					}
					if = {
						limit = {
							NOT = { always = yes }
						}
						remove_trait = healer
					}
					add_trait = runemaster
					set_character_flag = has_adv_class
				}
				ct_priest_start = {
					remove_trait = healer
					add_trait = priest
					set_character_flag = has_adv_class
				}
				ct_shaman_start = {
					remove_trait = healer
					add_trait = shaman
					set_character_flag = has_adv_class
				}
				ct_druid_start = {
					remove_trait = healer
					add_trait = druid
					set_character_flag = has_adv_class
				}
				ct_witch_doctor_start = {
					remove_trait = healer
					add_trait = witch_doctor
					set_character_flag = has_adv_class
				}
				ct_alchemist_start = {
					remove_trait = healer
					add_trait = alchemist
					set_character_flag = has_adv_class
				}
				ct_assassin_start = {
					remove_trait = scout
					add_trait = assassin
					set_character_flag = has_adv_class
					set_character_flag = assassin_discovered
				}
				ct_rogue_start = {
					remove_trait = scout
					add_trait = rogue
					set_character_flag = has_adv_class
					set_character_flag = rogue_discovered
				}
				ct_beastmaster_start = {
					remove_trait = scout
					add_trait = beastmaster
					set_character_flag = has_adv_class
				}
				ct_explorer_start = {
					remove_trait = scout
					add_trait = explorer
					set_character_flag = has_adv_class
				}
				ct_ranger_start = {
					remove_trait = scout
					add_trait = ranger
					set_character_flag = has_adv_class
				}
				ct_engineer_start = {
					remove_trait = tinker
					add_trait = engineer
					set_character_flag = has_adv_class
				}
				ct_mechanist_start = {
					remove_trait = tinker
					add_trait = mechanist
					set_character_flag = has_adv_class
				}
				ct_techmage_start = {
					remove_trait = tinker
					add_trait = techmage
					set_character_flag = has_adv_class
				}
				ct_warrior_start = {
					remove_trait = fighter
					add_trait = warrior
					set_character_flag = has_adv_class
				}
				ct_paladin_start = {
					remove_trait = fighter
					add_trait = paladin
					set_character_flag = has_adv_class
				}
				ct_monk_start = {
					remove_trait = fighter
					add_trait = monk
					set_character_flag = has_adv_class
				}
			}
			if = {
				limit = {
					has_game_rule = {
						name = religion_restrictions
						value = on
					}
				}
				if = {
					limit = {
						OR = {
							has_character_flag = ct_warlock_start
							has_character_flag = ct_warlock_drift
						}
					}
					if = {
						limit = {
							NOT = { accepts_warlock = yes }
						}
						if = {
							limit = {
								NOT = { has_secret_religion_trait_trigger = yes }
								NOT = {
									religion = cult_of_the_infinite
									religion = cult_of_the_destroyer
									religion = emerald_nightmare
									religion = forgotten_shadow
									religion = old_gods
									religion = twilights_hammer
									religion = azshara
									religion = burning_legion
									religion = mercantilism
									religion = demonology
									religion = loa
								}
							}
							religion = demonology
						}
						if = {
							limit = {
								OR = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = mercantilism
									secret_religion = demonology
									secret_religion = loa
								}
							}
							convert_to_secret_religion = yes
						}
					}
					if = {
						limit = {
							accepts_warlock = yes
						}
						if = {
							limit = {
								NOT = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = mercantilism
									secret_religion = demonology
									secret_religion = loa
								}
							}
							clear_secret_religion = yes
							religion = demonology
						}
						if = {
							limit = {
								OR = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = mercantilism
									secret_religion = demonology
									secret_religion = loa
								}
							}
							convert_to_secret_religion = yes
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						has_character_flag = ct_necromancer_start
						has_character_flag = ct_necromancer_drift
					}
				}
				if = {
					limit = {
						NOT = { accepts_necromancer = yes }
					}
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = hakkar
								religion = burning_legion
								religion = forgotten_shadow
								religion = lich_king
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = old_gods
								religion = emerald_nightmare
								religion = azshara
								religion = demonology
							}
						}
						religion = forgotten_shadow
					}
					if = {
						limit = {
							OR = {						
								secret_religion = hakkar
								secret_religion = burning_legion
								secret_religion = forgotten_shadow
								secret_religion = lich_king
							}
						}
						convert_to_secret_religion = yes
					}
				}
				if = {
					limit = {
						accepts_necromancer = yes
					}
					if = {
						limit = {
							NOT = {						
								secret_religion = hakkar
								secret_religion = burning_legion
								secret_religion = forgotten_shadow
								secret_religion = lich_king
							}
						}
						clear_secret_religion = yes
						religion = forgotten_shadow
					}
					if = {
						limit = {
							OR = {						
								secret_religion = hakkar
								secret_religion = burning_legion
								secret_religion = forgotten_shadow
								secret_religion = lich_king
							}
						}
						convert_to_secret_religion = yes
					}
				}
				if = {
					limit = {
						OR = {
							has_character_flag = ct_necrolyte_start
							has_character_flag = ct_necrolyte_drift
						}
					}
					if = {
						limit = {
							NOT = { accepts_warlock = yes }
							NOT = { accepts_necromancer = yes }
						}
						if = {
							limit = {
								NOT = { has_secret_religion_trait_trigger = yes }
								NOT = {
									religion = cult_of_the_infinite
									religion = cult_of_the_destroyer
									religion = emerald_nightmare
									religion = forgotten_shadow
									religion = old_gods
									religion = twilights_hammer
									religion = azshara
									religion = burning_legion
									religion = mercantilism
									religion = demonology
									religion = lich_king
									religion = hakkar
									religion = loa
								}
							}
							religion = demonology
						}
						if = {
							limit = {
								OR = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = mercantilism
									secret_religion = demonology
									secret_religion = lich_king
									secret_religion = hakkar
									secret_religion = loa
								}
							}
							convert_to_secret_religion = yes
						}
					}
					if = {
						limit = {
							OR = {
								accepts_warlock = yes
								accepts_necromancer = yes
							}
						}
						if = {
							limit = {
								NOT = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = mercantilism
									secret_religion = demonology
									secret_religion = lich_king
									secret_religion = hakkar
									secret_religion = loa
								}
							}
							clear_secret_religion = yes
							religion = demonology
						}
						if = {
							limit = {
								OR = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = mercantilism
									secret_religion = demonology
									secret_religion = lich_king
									secret_religion = hakkar
									secret_religion = loa
								}
							}
							convert_to_secret_religion = yes
						}
					}
				}
			}
		}
		clear_flags_with_prefix = ct_
	}
	
	option = {
		trigger = {
			NOT = { trait = honest }
			NOT = {
				has_game_rule = {
					name = class_opinions
					value = off
				}
			}
			OR = {
				AND = {
					OR = {
						has_character_flag = ct_warlock_start
						has_character_flag = ct_warlock_drift
					}
					NOT = { accepts_warlock = yes }
					liege = {
						NOT = { accepts_warlock = yes }
					}
					NOT = { has_character_flag = warlock_discovered }
					NOT = { has_character_flag = necrolyte_discovered }
				}
				AND = {
					OR = {
						has_character_flag = ct_necromancer_start
						has_character_flag = ct_necromancer_drift
					}
					NOT = { accepts_necromancer = yes }
					liege = {
						NOT = { accepts_necromancer = yes }
					}
					NOT = { has_character_flag = necromancer_discovered }
					NOT = { has_character_flag = necrolyte_discovered }
				}
				AND = {
					OR = {
						has_character_flag = ct_necrolyte_start
						has_character_flag = ct_necrolyte_drift
					}
					NOT = { accepts_warlock = yes }
					NOT = { accepts_necromancer = yes }
					liege = {
						NOT = { accepts_warlock = yes }
						NOT = { accepts_necromancer = yes }
					}
					NOT = { has_character_flag = necrolyte_discovered }
				}
				AND = {
					has_character_flag = ct_assassin_start
					NOT = { accepts_assassin = yes }
					liege = {
						NOT = { accepts_assassin = yes }
					}
					NOT = { has_character_flag = assassin_discovered }
				}
				AND = {
					has_character_flag = ct_rogue_start
					NOT = { accepts_rogue = yes }
					liege = {
						NOT = { accepts_rogue = yes }
					}
					NOT = { has_character_flag = rogue_discovered }
				}
			}
		}
		name = EVTOPTCLASSGAIN.31b # I should keep this to myself.
		hidden_tooltip = {
			if = { # Probably could've condensed these, but best to keep it this way
				limit = {
					OR = {
						has_character_flag = ct_warlock_start
						has_character_flag = ct_warlock_drift
					}
				}
				add_trait = warlock
				if = {
					limit = {
						trait = arcanist
					}
					remove_trait = arcanist
					add_trait = arcanist_fake
				}
				if = {
					limit = {
						trait = necrolyte
					}
					remove_trait = necrolyte
				}
				if = {
					limit = {
						trait = mage
					}
					remove_trait = mage
					add_character_modifier = { modifier = evocation_fake days = -1 }
					add_trait = mage_fake
				}
				if = {
					limit = {
						trait = healer
					}
					remove_trait = healer
					add_trait = healer_fake
				}
				if = {
					limit = {
						trait = witch_doctor
					}
					remove_trait = witch_doctor
					add_trait = witch_doctor_fake
				}
				if = {
					limit = {
						trait = druid
					}
					remove_trait = druid
					add_trait = druid_fake
				}
				if = {
					limit = {
						trait = priest
					}
					remove_trait = priest
					add_trait = priest_fake
				}
				if = {
					limit = {
						trait = techmage
					}
					remove_trait = techmage
					add_trait = techmage_fake
				}
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { accepts_warlock = yes }
							NOT = {
								OR = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = mercantilism
									secret_religion = demonology
									secret_religion = loa
								}
							}
						}
						set_secret_religion = demonology
					}
				}
			}
			if = {
				limit = {
					OR = {
						has_character_flag = ct_necromancer_start
						has_character_flag = ct_necromancer_drift
					}
				}
				add_trait = necromancer
				if = {
					limit = {
						trait = arcanist
					}
					remove_trait = arcanist
					add_trait = arcanist_fake
				}
				if = {
					limit = {
						trait = necrolyte
					}
					remove_trait = necrolyte
				}
				if = {
					limit = {
						trait = mage
					}
					remove_trait = mage
					add_character_modifier = { modifier = evocation_fake days = -1 }
					add_trait = mage_fake
				}
				if = {
					limit = {
						trait = healer
					}
					remove_trait = healer
					add_trait = healer_fake
				}
				if = {
					limit = {
						trait = witch_doctor
					}
					remove_trait = witch_doctor
					add_trait = witch_doctor_fake
				}
				if = {
					limit = {
						trait = druid
					}
					remove_trait = druid
					add_trait = druid_fake
				}
				if = {
					limit = {
						trait = priest
					}
					remove_trait = priest
					add_trait = priest_fake
				}
				if = {
					limit = {
						trait = techmage
					}
					remove_trait = techmage
					add_trait = techmage_fake
				}
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { accepts_necromancer = yes }
							NOT = {
								OR = {						
									secret_religion = hakkar
									secret_religion = burning_legion
									secret_religion = forgotten_shadow
									secret_religion = lich_king
								}
							}
						}
						set_secret_religion = forgotten_shadow
					}
				}
			}
			if = {
				limit = {
					OR = {
						has_character_flag = ct_necrolyte_start
						has_character_flag = ct_necrolyte_drift
					}
				}
				add_trait = necrolyte
				if = {
					limit = {
						trait = arcanist
					}
					remove_trait = arcanist
					add_trait = arcanist_fake
				}
				if = {
					limit = {
						trait = healer
					}
					remove_trait = healer
					add_trait = healer_fake
				}
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { accepts_warlock = yes }
							NOT = { accepts_necromancer = yes }
							NOT = {
								OR = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = mercantilism
									secret_religion = demonology
									secret_religion = lich_king
									secret_religion = hakkar
									secret_religion = loa
								}
							}
						}
						set_secret_religion = demonology
					}
				}
			}
			if = {
				limit = {
					has_character_flag = ct_assassin_start
				}
				remove_trait = scout
				add_trait = scout_fake
				add_trait = assassin
			}
			if = {
				limit = {
					has_character_flag = ct_rogue_start
				}
				remove_trait = scout
				add_trait = scout_fake
				add_trait = rogue
			}
		}
		clear_flags_with_prefix = ct_
	}
}

character_event = {
	id = classgain.32
	desc = EVTDESCCLASSGAIN.32 # You have hit a snag in your studies. Namely, you are out of reading material, and it will be hard to proceed without buying more.
	picture = GFX_evt_magic_study
	border = GFX_event_normal_frame_religion
	
	prisoner = no
	
	mean_time_to_happen = {
		months = 5
	}
	
	trigger = {
		OR = {
			has_character_flag = ct_arcanist_start
			has_character_flag = ct_healer_start
			has_character_flag = ct_necrolyte_start
			has_character_flag = ct_necrolyte_drift
			has_character_flag = ct_tinker_start
			has_character_flag = ct_scout_start
			has_character_flag = ct_fighter_start
			has_character_flag = ct_mage_start
			has_character_flag = ct_warlock_start
			has_character_flag = ct_warlock_drift
			has_character_flag = ct_necromancer_start
			has_character_flag = ct_necromancer_drift
			has_character_flag = ct_runemaster_start
			has_character_flag = ct_priest_start
			has_character_flag = ct_shaman_start
			has_character_flag = ct_druid_start
			has_character_flag = ct_witch_doctor_start
			has_character_flag = ct_alchemist_start
			has_character_flag = ct_assassin_start
			has_character_flag = ct_rogue_start
			has_character_flag = ct_beastmaster_start
			has_character_flag = ct_explorer_start
			has_character_flag = ct_ranger_start
			has_character_flag = ct_engineer_start
			has_character_flag = ct_mechanist_start
			has_character_flag = ct_techmage_start
			has_character_flag = ct_warrior_start
			has_character_flag = ct_paladin_start
			has_character_flag = ct_monk_start
		}
		NOT = { has_character_flag = ct_books }
		NOT = { has_character_flag = ct_refused_books }
	}
	
	option = {
		name = EVTOPTCLASSGAIN.32a # I have no choice, I must buy them.
		scaled_wealth = { value = -0.05 min = 15 }
		set_character_flag = ct_books
		hidden_tooltip = {
			if = {
				limit = {
					OR = {
						AND = {
							OR = {
								has_character_flag = ct_warlock_start
								has_character_flag = ct_warlock_drift
							}
							NOT = { accepts_warlock = yes }
						}
						AND = {
							OR = {
								has_character_flag = ct_necromancer_start
								has_character_flag = ct_necromancer_drift
							}
							NOT = { accepts_necromancer = yes }
						}
						AND = {
							OR = {
								has_character_flag = ct_necrolyte_start
								has_character_flag = ct_necrolyte_drift
							}
							OR = {
								NOT = { accepts_warlock = yes }
								NOT = { accepts_necromancer = yes }
							}
						}
						AND = {
							has_character_flag = ct_assassin_start
							NOT = { accepts_assassin = yes }
						}
						AND = {
							has_character_flag = ct_rogue_start
							NOT = { accepts_rogue = yes }
						}
					}
				}
				if = {
					limit = {
						OR = {
							has_character_flag = ct_necrolyte_start
							has_character_flag = ct_necrolyte_drift
							has_character_flag = ct_warlock_start
							has_character_flag = ct_warlock_drift
							has_character_flag = ct_necromancer_start
							has_character_flag = ct_necromancer_drift
							has_character_flag = ct_assassin_start
							has_character_flag = ct_rogue_start
						}
					}
					random = {
						chance = 40
						modifier = {
							factor = 0.5
							intrigue = 10
							NOT = { intrigue = 15 }
						}
						modifier = {
							factor = 0.3
							intrigue = 15
							NOT =  { intrigue = 20 }
						}
						modifier = {
							factor = 0.1
							intrigue = 20
						}
						custom_tooltip = { text = EVTTOOLTIP.32 } # You may be discovered.
						hidden_tooltip = {
							any_courtier_or_vassal = {
								limit = {
									prisoner = no
								}
								character_event = { id = classgain.68 }
							}
						}
					}
				}
			}
		}
	}
	
	option = {
		name = EVTOPTCLASSGAIN.32b # I'll have to do without.
		set_character_flag = ct_refused_books
	}
}

#Ping
character_event = {
	id = classgain.33
	hide_window = yes
	
	prisoner = no
	
	mean_time_to_happen = {
		months = 5
	}
	
	trigger = {
		OR = {
			has_character_flag = ct_arcanist_start
			has_character_flag = ct_healer_start
			has_character_flag = ct_necrolyte_start
			has_character_flag = ct_necrolyte_drift
			has_character_flag = ct_tinker_start
			has_character_flag = ct_scout_start
			has_character_flag = ct_fighter_start
			has_character_flag = ct_mage_start
			has_character_flag = ct_warlock_start
			has_character_flag = ct_warlock_drift
			has_character_flag = ct_necromancer_start
			has_character_flag = ct_necromancer_drift
			has_character_flag = ct_runemaster_start
			has_character_flag = ct_priest_start
			has_character_flag = ct_shaman_start
			has_character_flag = ct_druid_start
			has_character_flag = ct_witch_doctor_start
			has_character_flag = ct_alchemist_start
			has_character_flag = ct_assassin_start
			has_character_flag = ct_rogue_start
			has_character_flag = ct_beastmaster_start
			has_character_flag = ct_explorer_start
			has_character_flag = ct_ranger_start
			has_character_flag = ct_engineer_start
			has_character_flag = ct_mechanist_start
			has_character_flag = ct_techmage_start
			has_character_flag = ct_warrior_start
			has_character_flag = ct_paladin_start
			has_character_flag = ct_monk_start
		}
		NOT = { has_character_flag = ct_gethelp }
		NOT = { has_character_flag = ct_refused_gethelp }
		any_courtier = {
			prisoner = no
			OR = {
				AND = {
					PREV = {
						has_character_flag = ct_arcanist_start
					}
					OR = {
						trait = arcanist
						trait = mage
						trait = runemaster
						trait = techmage
					}
				}
				AND = {
					PREV = {
						OR = {
							has_character_flag = ct_necrolyte_start
							has_character_flag = ct_necrolyte_drift
						}
					}
					OR = {
						AND = {
							trait = necrolyte
							NOT = { has_character_flag = secret_necrolyte }
						}
						AND = {
							trait = warlock
							NOT = { has_character_flag = secret_warlock }
						}
						AND = {
							trait = necromancer
							NOT = { has_character_flag = secret_necromancer }
						}
					}
				}
				AND = {
					PREV = {
						has_character_flag = ct_healer_start
					}
					OR = {
						trait = healer
						trait = priest
						trait = shaman
						trait = druid
						trait = witch_doctor
						trait = alchemist
					}
				}
				AND = {
					PREV = {
						has_character_flag = ct_scout_start
					}
					OR = {
						trait = scout
						AND = {
							trait = assassin
							NOT = { has_character_flag = secret_assassin }
						}
						AND = {
							trait = rogue
							NOT = { has_character_flag = secret_rogue }
						}
						trait = beastmaster
						trait = explorer
						trait = ranger
					}
				}
				AND = {
					PREV = {
						has_character_flag = ct_tinker_start
					}
					OR = {
						trait = tinker
						trait = engineer
						trait = mechanist
						trait = techmage
					}
				}
				AND = {
					PREV = {
						has_character_flag = ct_fighter_start
					}
					OR = {
						trait = fighter
						trait = warrior
						trait = paladin
						trait = monk
					}
				}
				AND = {
					PREV = {
						has_character_flag = ct_mage_start
					}
					trait = mage
				}
				AND = {
					PREV = {
						OR = {
							has_character_flag = ct_warlock_start
							has_character_flag = ct_warlock_drift
						}
					}
					trait = warlock
					NOT = { has_character_flag = secret_warlock }
				}
				AND = {
					PREV = {
						OR = {
							has_character_flag = ct_necromancer_start
							has_character_flag = ct_necromancer_drift
						}
					}
					trait = necromancer
					NOT = { has_character_flag = secret_warlock }
				}
				AND = {
					PREV = {
						has_character_flag = ct_runemaster_start
					}
					trait = runemaster
				}
				AND = {
					PREV = {
						has_character_flag = ct_priest_start
					}
					trait = priest
				}
				AND = {
					PREV = {
						has_character_flag = ct_shaman_start
					}
					trait = shaman
				}
				AND = {
					PREV = {
						has_character_flag = ct_druid_start
					}
					trait = druid
				}
				AND = {
					PREV = {
						has_character_flag = ct_witch_doctor_start
					}
					trait = witch_doctor
				}
				AND = {
					PREV = {
						has_character_flag = ct_alchemist_start
					}
					trait = alchemist
				}
				AND = {
					PREV = {
						has_character_flag = ct_assassin_start
					}
					trait = assassin
					NOT = { has_character_flag = secret_assassin }
				}
				AND = {
					PREV = {
						has_character_flag = ct_rogue_start
					}
					trait = rogue
					NOT = { has_character_flag = secret_rogue }
				}
				AND = {
					PREV = {
						has_character_flag = ct_beastmaster_start
					}
					trait = beastmaster
				}
				AND = {
					PREV = {
						has_character_flag = ct_explorer_start
					}
					trait = explorer
				}
				AND = {
					PREV = {
						has_character_flag = ct_ranger_start
					}
					trait = ranger
				}
				AND = {
					PREV = {
						has_character_flag = ct_engineer_start
					}
					trait = engineer
				}
				AND = {
					PREV = {
						has_character_flag = ct_mechanist_start
					}
					trait = mechanist
				}
				AND = {
					PREV = {
						has_character_flag = ct_techmage_start
					}
					trait = techmage
				}
				AND = {
					PREV = {
						has_character_flag = ct_warrior_start
					}
					trait = warrior
				}
				AND = {
					PREV = {
						has_character_flag = ct_paladin_start
					}
					trait = paladin
				}
				AND = {
					PREV = {
						has_character_flag = ct_monk_start
					}
					trait = monk
				}
			}
			NOT = { has_opinion_modifier = { who = ROOT modifier = refused_to_help } }
		}
	}
	
	immediate = {
		random_courtier = {
			limit = {
				prisoner = no
				OR = {
					AND = {
						PREV = {
							has_character_flag = ct_arcanist_start
						}
						OR = {
							trait = arcanist
							trait = mage
							trait = runemaster
							trait = techmage
						}
					}
					AND = {
						PREV = {
							OR = {
								has_character_flag = ct_necrolyte_start
								has_character_flag = ct_necrolyte_drift
							}
						}
						OR = {
							AND = {
								trait = necrolyte
								NOT = { has_character_flag = secret_necrolyte }
							}
							AND = {
								trait = warlock
								NOT = { has_character_flag = secret_warlock }
							}
							AND = {
								trait = necromancer
								NOT = { has_character_flag = secret_necromancer }
							}
						}
					}
					AND = {
						PREV = {
							has_character_flag = ct_healer_start
						}
						OR = {
							trait = healer
							trait = priest
							trait = shaman
							trait = druid
							trait = witch_doctor
							trait = alchemist
						}
					}
					AND = {
						PREV = {
							has_character_flag = ct_scout_start
						}
						OR = {
							trait = scout
							AND = {
								trait = assassin
								NOT = { has_character_flag = secret_assassin }
							}
							AND = {
								trait = rogue
								NOT = { has_character_flag = secret_rogue }
							}
							trait = beastmaster
							trait = explorer
							trait = ranger
						}
					}
					AND = {
						PREV = {
							has_character_flag = ct_tinker_start
						}
						OR = {
							trait = tinker
							trait = engineer
							trait = mechanist
							trait = techmage
						}
					}
					AND = {
						PREV = {
							has_character_flag = ct_fighter_start
						}
						OR = {
							trait = fighter
							trait = warrior
							trait = paladin
							trait = monk
						}
					}
					AND = {
						PREV = {
							has_character_flag = ct_mage_start
						}
						trait = mage
					}
					AND = {
						PREV = {
							OR = {
								has_character_flag = ct_warlock_start
								has_character_flag = ct_warlock_drift
							}
						}
						trait = warlock
						NOT = { has_character_flag = secret_warlock }
					}
					AND = {
						PREV = {
							OR = {
								has_character_flag = ct_necromancer_start
								has_character_flag = ct_necromancer_drift
							}
						}
						trait = necromancer
						NOT = { has_character_flag = secret_warlock }
					}
					AND = {
						PREV = {
							has_character_flag = ct_runemaster_start
						}
						trait = runemaster
					}
					AND = {
						PREV = {
							has_character_flag = ct_priest_start
						}
						trait = priest
					}
					AND = {
						PREV = {
							has_character_flag = ct_shaman_start
						}
						trait = shaman
					}
					AND = {
						PREV = {
							has_character_flag = ct_druid_start
						}
						trait = druid
					}
					AND = {
						PREV = {
							has_character_flag = ct_witch_doctor_start
						}
						trait = witch_doctor
					}
					AND = {
						PREV = {
							has_character_flag = ct_alchemist_start
						}
						trait = alchemist
					}
					AND = {
						PREV = {
							has_character_flag = ct_assassin_start
						}
						trait = assassin
						NOT = { has_character_flag = secret_assassin }
					}
					AND = {
						PREV = {
							has_character_flag = ct_rogue_start
						}
						trait = rogue
						NOT = { has_character_flag = secret_rogue }
					}
					AND = {
						PREV = {
							has_character_flag = ct_beastmaster_start
						}
						trait = beastmaster
					}
					AND = {
						PREV = {
							has_character_flag = ct_explorer_start
						}
						trait = explorer
					}
					AND = {
						PREV = {
							has_character_flag = ct_ranger_start
						}
						trait = ranger
					}
					AND = {
						PREV = {
							has_character_flag = ct_engineer_start
						}
						trait = engineer
					}
					AND = {
						PREV = {
							has_character_flag = ct_mechanist_start
						}
						trait = mechanist
					}
					AND = {
						PREV = {
							has_character_flag = ct_techmage_start
						}
						trait = techmage
					}
					AND = {
						PREV = {
							has_character_flag = ct_warrior_start
						}
						trait = warrior
					}
					AND = {
						PREV = {
							has_character_flag = ct_paladin_start
						}
						trait = paladin
					}
					AND = {
						PREV = {
							has_character_flag = ct_monk_start
						}
						trait = monk
					}
				}
				NOT = { has_opinion_modifier = { who = ROOT modifier = refused_to_help } }
			}
			save_event_target_as = class_gethelp
		}
		character_event = { id = classgain.34}
	}
}

character_event = {
	id = classgain.34
	desc = EVTDESCCLASSGAIN.34 # You've been having trouble with your studies lately. Perhaps you should get someone to help you? [class_gethelp.GetBestName] could teach you if you asked.
	picture = GFX_evt_magic_study
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.34a # Yes, I'll ask.
		event_target:class_gethelp = {
			custom_tooltip = { text = EVTTOOLTIPCLASSGAIN.34 } # You send a message to [class_gethelp.GetBestName].
			hidden_tooltip = {
				letter_event = { id = classgain.35 days = 1 }
			}
		}
	}
	
	option = {
		name = EVTOPTCLASSGAIN.34b # No, I'd rather do this myself.
		event_target:class_gethelp = {
			clear_event_target = class_gethelp
		}
		set_character_flag = ct_refused_gethelp
	}
}

letter_event = {
	id = classgain.35
	desc = EVTDESCCLASSGAIN.35 # To the [GetFromRootCompliment] [Root.GetBestName],\n\nI am studying to become like yourself and would be honoured if you were to teach me some of what you know.\n\nSigned, [From.GetBestName]
	border = GFX_event_letter_frame_religion
	
	is_triggered_only = yes
	
	option = {
		ai_chance = {
			factor = 1
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 0.5
				NOT = { opinion = { who = FROM value = -10 } }
			}
		}
		name = EVTOPTCLASSGAIN.35a # Very well, I shall teach you.
		FROM = {
			custom_tooltip = { text = EVTTOOLTIPCLASSGAIN.35 } # [From.GetBestName] receives your answer.
			hidden_tooltip = {
				letter_event = { id = classgain.36 days = 1 }
			}
		}
		clear_event_target = class_gethelp
	}
	
	option = {
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0.5
				opinion = { who = FROM value = 25 }
			}
			modifier = {
				factor = 1.5
				NOT = { opinion = { who = FROM value = -20 } }
			}
		}
		name = EVTOPTCLASSGAIN.35b # No, go bother someone else.
		FROM = {
			custom_tooltip = { text = EVTTOOLTIPCLASSGAIN.35 } # [From.GetBestName] receives your answer.
			hidden_tooltip = {
				letter_event = { id = classgain.37 days = 1 }
			}
		}
		clear_event_target = class_gethelp
	}
}

letter_event = {
	id = classgain.36
	desc = EVTDESCCLASSGAIN.36 # To the [GetFromRootCompliment] [Root.GetBestName],\n\nI accept your request, and shall help you in your goal.\n\nSigned, [From.GetBestName]
	border = GFX_event_letter_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = AKGREAT # Great!
		set_character_flag = ct_gethelp
	}
}

letter_event = {
	id = classgain.37
	desc = EVTDESCCLASSGAIN.37 # To the [GetFromRootInsult] [Root.GetBestName],\n\nI will not waste my time helping you.\n\nSigned, [From.GetBestName]
	border = GFX_event_letter_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = AKDAMN # Damn!
		opinion = { modifier = refused_to_help who = FROM years = 5 }
	}
}

#Mage mods
character_event = {
	id = classgain.38
	desc = EVTDESCCLASSGAIN.38 # As a mage, you must choose a school of magic in which to specialise in.
	picture = GFX_evt_magic_study
	border = GFX_event_normal_frame_religion
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		trait = mage
		NOT = { has_character_flag = has_class_mod }
	}
	
	option = {
		name = EVTOPTCLASSGAIN.38a # The School of Abjuration
		character_event = { id = classgain.41 }
	}
	
	option = {
		name = EVTOPTCLASSGAIN.38b # The School of Enchantment
		character_event = { id = classgain.42 }
	}
	
	option = {
		name = EVTOPTCLASSGAIN.38c # The School of Illusion
		character_event = { id = classgain.43 }
	}
	
	option = {
		name = OPTIONS_MORE # More
		character_event = { id = classgain.39 }
	}
}

character_event = {
	id = classgain.39
	desc = EVTDESCCLASSGAIN.38 # As a mage, you must choose a school of magic in which to specialise in.
	picture = GFX_evt_magic_study
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.39a # The School of Divination
		character_event = { id = classgain.44 }
	}
	
	option = {
		name = EVTOPTCLASSGAIN.39b # The School of Transmutation
		character_event = { id = classgain.45 }
	}
	
	option = {
		name = EVTOPTCLASSGAIN.39c # The School of Conjuration
		character_event = { id = classgain.46 }
	}
	
	option = {
		name = OPTIONS_MORE # More
		character_event = { id = classgain.40 }
	}
}

character_event = {
	id = classgain.40
	desc = EVTDESCCLASSGAIN.38 # As a mage, you must choose a school of magic in which to specialise in.
	picture = GFX_evt_magic_study
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.40a # The School of Evocation
		character_event = { id = classgain.47 }
	}
	
	option = {
		ai_chance = {
			factor = 0.1
			modifier = {
				factor = 10
				OR = {
					has_game_rule = {
						name = class_opinions
						value = off
					}
					trait = lunatic
					trait = impaler
					trait = envious
					trait = proud
					trait = deceitful
					trait = ambitious
					trait = arbitrary
					trait = cynical
					trait = cruel
					accepts_blood_magic = yes
				}
			}
		}
		name = EVTOPTCLASSGAIN.40b # The School of Blood Magic
		character_event = { id = classgain.48 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.38 }
	}
}

character_event = {
	id = classgain.41
	desc = EVTDESCCLASSGAIN.41 # The school of abjuration focuses on defensive spells, be it on the mage or on others. While lacking in offensive power, those who follow the path of abjuration can survive what few others can.
	picture = GFX_evt_abjuration
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = abjuration duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.38 }
	}
}

character_event = {
	id = classgain.42
	desc = EVTDESCCLASSGAIN.42 # The school of enchantment focuses on imbuing various items with magical power instead of casting spells. Enchanters are capable of creating both marvellous magical items and constructs to do their bidding.
	picture = GFX_evt_enchantment
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = enchantment duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.38 }
	}
}

character_event = {
	id = classgain.43
	desc = EVTDESCCLASSGAIN.43 # The school of illusion works indirectly, by creating various phantasmal images and sounds to confuse, frighten or amaze any who gaze upon them. Alternatively, illusionists can also use their magic to conceal a person or object from hostile eyes.
	picture = GFX_evt_illusion
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = illusion duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.38 }
	}
}

character_event = {
	id = classgain.44
	desc = EVTDESCCLASSGAIN.44 # The school of divination deals with scrying information about past, future and present through magical means. Diviners can see what is happening a continent away, or even get premonitions of things yet to come.
	picture = GFX_evt_divination
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = divination duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.38 }
	}
}

character_event = {
	id = classgain.45
	desc = EVTDESCCLASSGAIN.45 # The school of transmutation is versatile, concerning itself with altering a being or object's properties. Those adept at transmutation can also control time to an extent, or teleport themselves and others.
	picture = GFX_evt_transmutation
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = transmutation duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.38 }
	}
}

character_event = {
	id = classgain.46
	desc = EVTDESCCLASSGAIN.46 # The school of conjuration allows a mage to summon forth beings, and sometimes objects, from other planes and worlds. These mages must be careful though, for that which they brought forth may not necessarily obey them.
	picture = GFX_evt_conjuration
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = conjuration duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.38 }
	}
}

character_event = {
	id = classgain.47
	desc = EVTDESCCLASSGAIN.47 # The school of evocation encompasses all kinds of offensive magics, allowing a mage to wreak havoc amongst their opponents and bring down fortifications.
	picture = GFX_evt_belf_mage
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = evocation duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.38 }
	}
}

character_event = {
	id = classgain.48
	desc = EVTDESCCLASSGAIN.48 # The sinister and forbidden school of blood magic is frowned upon by most mages and societies, for it involves using blood, either the mage's or another's, as a catalyst for devastating magical spells can wither away life and enslave minds.
	picture = GFX_evt_bloodmage
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = blood_magic duration = -1 }
		set_character_flag = blood_magic_discovered
	}
	
	option = {
		trigger = {
			NOT = {
				has_game_rule = {
					name = class_opinions
					value = off
				}
			}
			NOT = { trait = honest }
			NOT = { accepts_blood_magic = yes }
			liege = {
				NOT = { accepts_blood_magic = yes }
			}
		}
		name = EVTOPTCLASSGAIN.48b # I shall practice this in secret.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = blood_magic duration = -1 }
		add_character_modifier = { modifier = evocation_fake duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.38 }
	}
}

#Priest mods
character_event = {
	id = classgain.49
	desc = EVTDESCCLASSGAIN.49 # As a priest, you must choose which type of divine magic you shall use.
	picture = GFX_evt_monastery_monks
	border = GFX_event_normal_frame_religion
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		trait = priest
		NOT = { has_character_flag = has_class_mod }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				AND = {
					NOT = { trait = undead_generic }
					NOT = { trait = undead_scourge }
					NOT = { trait = undead_forsaken }
					NOT = { trait = naga }
					NOT = {
						AND = {
							OR = {
								trait = high_elf
								trait = blood_elf
							}
							religion = sunwell
							NOT = { has_global_flag = sunwell_restored_naaru }
							NOT = { has_global_flag = sunwell_naaru_blessed }
						}
					}
				}
			}
		}
		name = EVTOPTCLASSGAIN.49a # Holy Priest
		character_event = { id = classgain.50 }
	}
	
	option = {
		ai_chance = {
			factor = 0.1
			modifier = {
				factor = 10
				OR = {
					has_game_rule = {
						name = class_opinions
						value = off
					}
					trait = lunatic
					trait = impaler
					trait = envious
					trait = proud
					trait = deceitful
					trait = ambitious
					trait = arbitrary
					trait = cynical
					trait = cruel
					accepts_shadow_priest = yes
				}
			}
		}
		name = EVTOPTCLASSGAIN.49b # Shadow Priest
		character_event = { id = classgain.51 }
	}
	
	option = {
		trigger = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
		}
		name = EVTOPTCLASSGAIN.49c # Lunar Priest
		character_event = { id = classgain.52 }
	}
	option = {
		trigger = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
		}
		name = OPTIONS_MORE
		character_event = { id = classgain.74 }
	}
	
	option = {
		trigger = {
			NOT = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
			}
			OR = {
				trait = high_elf
				trait = blood_elf
			}
			religion = sunwell
		}
		name = EVTOPTCLASSGAIN.49d # Solar Priest
		character_event = { id = classgain.53 }
	}
	
	option = {
		trigger = {
			NOT = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
			}
			trait = naga
			religion = azshara
		}
		name = EVTOPTCLASSGAIN.49e # Sea Witch
		character_event = { id = classgain.54 }
	}
}


character_event = {
	id = classgain.50
	desc = EVTDESCCLASSGAIN.50 # Holy magic originates from the Light, and those who wield it can use it to heal, or to destroy both demons and undead.
	picture = GFX_evt_holy_priest
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = holy_priest duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.49 }
	}
}

character_event = {
	id = classgain.51
	desc = EVTDESCCLASSGAIN.51 # Shadow magic originates from the Void, and damages, corrupts, and taints.
	picture = GFX_evt_shadow_priest
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = shadow_priest duration = -1 }
		set_character_flag = shadow_priest_discovered
		if = {
			limit = {
				has_game_rule = {
					name = religion_restrictions
					value = on
				}
			}
			if = {
				limit = {
					NOT = { accepts_shadow_priest = yes }
				}
				if = {
					limit = {
						NOT = { has_secret_religion_trait_trigger = yes }
						NOT = {
							religion = cult_of_the_infinite
							religion = cult_of_the_destroyer
							religion = emerald_nightmare
							religion = forgotten_shadow
							religion = old_gods
							religion = twilights_hammer
							religion = azshara
							religion = burning_legion
							religion = mercantilism
							religion = demonology
							religion = lich_king
						}
					}
					religion = forgotten_shadow
				}
				if = {
					limit = {
						OR = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = forgotten_shadow
							secret_religion = old_gods
							secret_religion = twilights_hammer
							secret_religion = azshara
							secret_religion = burning_legion
							secret_religion = mercantilism
							secret_religion = demonology
							secret_religion = lich_king
						}
					}
					convert_to_secret_religion = yes
				}
				break = yes
			}
			if = {
				limit = {
					accepts_shadow_priest = yes
				}
				if = {
					limit = {
						NOT = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = forgotten_shadow
							secret_religion = old_gods
							secret_religion = twilights_hammer
							secret_religion = azshara
							secret_religion = burning_legion
							secret_religion = mercantilism
							secret_religion = demonology
							secret_religion = lich_king
						}
					}
					clear_secret_religion = yes
					religion = forgotten_shadow
				}
				if = {
					limit = {
						OR = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = forgotten_shadow
							secret_religion = old_gods
							secret_religion = twilights_hammer
							secret_religion = azshara
							secret_religion = burning_legion
							secret_religion = mercantilism
							secret_religion = demonology
							secret_religion = lich_king
						}
					}
					convert_to_secret_religion = yes
				}
				break = yes
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				has_game_rule = {
					name = class_opinions
					value = off
				}
			}
			NOT = { trait = honest }
			NOT = { accepts_shadow_priest = yes }
			liege = {
				NOT = { accepts_shadow_priest = yes }
			}
		}
		name = EVTOPTCLASSGAIN.48b # I shall practice this in secret.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = shadow_priest duration = -1 }
		if = {
			limit = {
				NOT = { religion = sunwell }
				#not elune
			}
			add_character_modifier = { modifier = holy_priest_fake duration = -1 }
		}
		if = {
			limit = {
				religion = sunwell
			}
			add_character_modifier = { modifier = sun_priest_fake duration = -1 }
		}
		if = {
			limit = {
				always = no #elune
			}
			add_character_modifier = { modifier = moon_priest_fake duration = -1 }
		}
		if = {
			limit = {
				has_game_rule = {
					name = religion_restrictions
					value = on
				}
			}
			if = {
				limit = {
					NOT = { accepts_shadow_priest = yes }
					NOT = {
						OR = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = forgotten_shadow
							secret_religion = old_gods
							secret_religion = twilights_hammer
							secret_religion = azshara
							secret_religion = burning_legion
							secret_religion = mercantilism
							secret_religion = demonology
							secret_religion = lich_king
						}
					}
				}
				set_secret_religion = forgotten_shadow
			}
		}
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.49 }
	}
}

character_event = {
	id = classgain.52
	desc = EVTDESCCLASSGAIN.52 # Lunar magic originates from Elune, and those who wield it can draw upon a versatile array of powers.
	picture = GFX_evt_moon_priest
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = moon_priest duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.49 }
	}
}

character_event = {
	id = classgain.53
	desc = EVTDESCCLASSGAIN.53 # Solar magic originates from the Sun, and those who wield it can draw upon various offensive powers.
	picture = GFX_evt_sun_priest
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = sun_priest duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.49 }
	}
}

character_event = {
	id = classgain.54
	desc = EVTDESCCLASSGAIN.54 # Sea witches bend the power of the elements, particularly those of water and air, to aid them in carrying out the will of their queen.
	picture = GFX_evt_naga_priest
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = sea_witch duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.49 }
	}
}

#Shaman Mods
character_event = {
	id = classgain.55
	desc = EVTDESCCLASSGAIN.55 # As a shaman, you must choose whether to focus on mastering the four normal elements, the element of spirit, or the element of decay.
	picture = GFX_evt_monastery_monks
	border = GFX_event_normal_frame_religion
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		trait = shaman
		NOT = { has_character_flag = has_class_mod }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				NOT = {
					religion = old_gods
					religion = twilights_hammer
					religion = cult_of_the_infinite
					religion = cult_of_the_destroyer
					religion = emerald_nightmare
				}
			}
		}
		name = EVTOPTCLASSGAIN.55a # Air, Fire, Earth, and Water
		character_event = { id = classgain.56 }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				religion = shamanism
				religion = old_ways
				religion = cult_of_the_dreamer
			}
		}
		name = EVTOPTCLASSGAIN.55b # Spirit
		character_event = { id = classgain.57 }
	}
	
	option = {
		ai_chance = {
			factor = 0.1
			modifier = {
				factor = 10
				OR = {
					has_game_rule = {
						name = class_opinions
						value = off
					}
					trait = lunatic
					trait = impaler
					trait = envious
					trait = proud
					trait = deceitful
					trait = ambitious
					trait = arbitrary
					trait = cynical
					trait = cruel
					accepts_dark_shaman = yes
				}
			}
		}
		name = EVTOPTCLASSGAIN.55c # Decay
		character_event = { id = classgain.58 }
	}
}

character_event = {
	id = classgain.56
	desc = EVTDESCCLASSGAIN.56 # Elementalists bind or make deals with the elemental being of Air, Fire, Earth, and Water for power, service, or other things.
	picture = GFX_evt_elemental_shaman
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = elementalist duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.55 }
	}
}

character_event = {
	id = classgain.57
	desc = EVTDESCCLASSGAIN.57 # Spiritualists tap into the world's fifth element: Spirit. It is an inner energy present within all living beings, and brings balance to the other elements.
	picture = GFX_evt_spirit_shaman
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = spiritualist duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.55 }
	}
}

character_event = {
	id = classgain.58
	desc = EVTDESCCLASSGAIN.58 # Dark shamans harness the so-called "sixth element", Decay, to enslave elementals into servitude, or to weaponize them.
	picture = GFX_evt_dark_shaman
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = dark_shaman duration = -1 }
		set_character_flag = dark_shaman_discovered
		if = {
			limit = {
				has_game_rule = {
					name = religion_restrictions
					value = on
				}
			}
			if = {
				limit = {
					NOT = { accepts_dark_shaman = yes }
				}
				if = {
					limit = {
						NOT = { has_secret_religion_trait_trigger = yes }
						NOT = {
							religion = cult_of_the_infinite
							religion = cult_of_the_destroyer
							religion = emerald_nightmare
							religion = old_gods
							religion = twilights_hammer
						}
					}
					religion = old_gods
				}
				if = {
					limit = {
						OR = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = old_gods
							secret_religion = twilights_hammer
						}
					}
					convert_to_secret_religion = yes
				}
				break = yes
			}
			if = {
				limit = {
					accepts_shadow_priest = yes
				}
				if = {
					limit = {
						NOT = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = old_gods
							secret_religion = twilights_hammer
						}
					}
					clear_secret_religion = yes
					religion = old_gods
				}
				if = {
					limit = {
						OR = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = old_gods
							secret_religion = twilights_hammer
						}
					}
					convert_to_secret_religion = yes
				}
				break = yes
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				has_game_rule = {
					name = class_opinions
					value = off
				}
			}
			NOT = { trait = honest }
			NOT = { accepts_dark_shaman = yes }
			liege = {
				NOT = { accepts_dark_shaman = yes }
			}
		}
		name = EVTOPTCLASSGAIN.48b # I shall practice this in secret.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = dark_shaman duration = -1 }
		add_character_modifier = { modifier = elementalist_fake duration = -1 }
		if = {
			limit = {
				NOT = { accepts_dark_shaman = yes }
				NOT = {
					OR = {						
						secret_religion = cult_of_the_infinite
						secret_religion = cult_of_the_destroyer
						secret_religion = emerald_nightmare
						secret_religion = old_gods
						secret_religion = twilights_hammer
					}
				}
			}
			set_secret_religion = old_gods
		}
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.55 }
	}
}

#Druid mods
character_event = {
	id = classgain.59
	desc = EVTDESCCLASSGAIN.59 # As a druid, you must choose an aspect of nature in which to focus.
	picture = GFX_evt_boomkin
	border = GFX_event_normal_frame_religion
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		trait = druid
		NOT = { has_character_flag = has_class_mod }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				#religion = earthmother
				#religion = elune
				NOT = {
					religion = old_gods
					religion = twilights_hammer
					religion = emerald_nightmare
					religion = druidism
				}
			}
		}
		name = EVTOPTCLASSGAIN.59a # Moon
		character_event = { id = classgain.60 }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				#religion = earthmother
				NOT = {
					religion = old_gods
					religion = twilights_hammer
					religion = emerald_nightmare
					religion = druidism
				}
			}
		}
		name = EVTOPTCLASSGAIN.59b # Sun
		character_event = { id = classgain.61 }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				NOT = {
					religion = old_gods
					religion = twilights_hammer
					religion = emerald_nightmare
				}
			}
		}
		name = EVTOPTCLASSGAIN.59c # Growth
		character_event = { id = classgain.62 }
	}
	
	option = {
		name = OPTIONS_MORE
		character_event = { id = classgain.75 }
	}
}

character_event = {
	id = classgain.60
	desc = {
		trigger = {
			#OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				#trait = night_elf
			#}
			#NOT = { trait = tauren }
		}
		text = EVTDESCCLASSGAIN.60a # Druids who focus on the moon draw upon the power of the goddess Elune to defend nature.
	}
	desc = {
		trigger = {
			always = no
			#has_game_rule = {
			#	name = class_requirements
			#	value = unrestricted
			#}
			#trait = tauren
		}
		text = EVTDESCCLASSGAIN.60b # Druids who focus on the moon draw upon the power of the Earthmother's left eye, Mu'sha, to guide their kin.
	}
	picture = GFX_evt_moon_druid
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = moon_druid duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.59 }
	}
}

character_event = {
	id = classgain.61
	desc = EVTDESCCLASSGAIN.61 # Druids who focus on the sun draw upon the power of the Earthmother's right eye, An'she, to guide their kin.
	picture = GFX_evt_sun_druid
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = sun_druid duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.59 }
	}
}

character_event = {
	id = classgain.62
	desc = EVTDESCCLASSGAIN.62 # Menders are druids who use the power of nature to heal and encourage growth.
	picture = GFX_evt_troll_druid
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = mender duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.59 }
	}
}

character_event = {
	id = classgain.63
	desc = EVTDESCCLASSGAIN.63 # Those called feral druids are druids who opt to take the forms of animals in order to better commune with nature.
	picture = GFX_evt_feral_druid
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = feral_druid duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.59 }
	}
}

#Witch Doctor mods
character_event = {
	id = classgain.64
	desc = EVTDESCCLASSGAIN.64 # As a witch doctor, you must choose an aspect of your craft in which to focus.
	picture = GFX_evt_zandalari_meeting
	border = GFX_event_normal_frame_religion
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		trait = witch_doctor
		NOT = { has_character_flag = has_class_mod }
	}
	
	option = {
		name = EVTOPTCLASSGAIN.64a # Hexes
		character_event = { id = classgain.65 }
	}
	
	option = {
		name = EVTOPTCLASSGAIN.64b # Brews
		character_event = { id = classgain.66 }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				trait = troll_forest
				trait = troll_ice
				trait = troll_dark
				trait = troll_sand
				trait = troll_jungle
				trait = troll_zandalari
			}
		}
		name = EVTOPTCLASSGAIN.64c # Shadow Hunter
		character_event = { id = classgain.67 }
	}
}

character_event = {
	id = classgain.65
	desc = EVTDESCCLASSGAIN.65 # Hexers are witch doctors who specialize in casting curses onto others, as well as draining their life-force.
	picture = GFX_evt_hexer
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = hexes duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.64 }
	}
}

character_event = {
	id = classgain.66
	desc = EVTDESCCLASSGAIN.66 # Witch doctors focusing on brews can mix various concoctions that cause a variety of effects.
	picture = GFX_evt_witch_doctor
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = brews duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.64 }
	}
}

character_event = {
	id = classgain.67
	desc = EVTDESCCLASSGAIN.67 # Shadow hunters are a special cadre of trolls who use their loa-granted powers to strike from the shadows as skirmishers and assassins.
	picture = GFX_evt_shadow_hunter
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = shadow_hunter duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.64 }
	}
}

#Chance to be discovered.
#Ping
character_event = {
	id = classgain.68
	hide_window = yes
	
	prisoner = no
	
	mean_time_to_happen = {
		months = 120
		modifier = {
			factor = 0.7
			intrigue = 5
			NOT = { intrigue = 10 }
		}
		modifier = {
			factor = 0.3
			NOT = { intrigue = 5 }
		}
	}
	
	trigger = {
		NOT = {
			has_game_rule = {
				name = class_opinions
				value = off
			}
		}
		OR = {
			AND = {
				NOT = { accepts_warlock = yes }
				OR = {
					has_character_flag = warlock_start
					has_character_flag = warlock_drift
					trait = warlock
				}
				NOT = { has_character_flag = warlock_discovered }
			}
			AND = {
				NOT = { accepts_warlock = yes }
				NOT = { accepts_necromancer = yes }
				OR = {
					has_character_flag = necrolyte_start
					has_character_flag = necrolyte_drift
					trait = necrolyte
				}
				NOT = { has_character_flag = necrolyte_discovered }
			}
			AND = {
				NOT = { accepts_necromancer = yes }
				OR = {
					has_character_flag = necromancer_start
					has_character_flag = necromancer_drift
					trait = necromancer
				}
				NOT = { has_character_flag = necromancer_discovered }
			}
			AND = {
				OR = {
					NOT = { accepts_assassin = yes }
					has_character_flag = assassin_start
					trait = assassin
				}
				NOT = { has_character_flag = assassin_discovered }
			}
			AND = {
				OR = {
					NOT = { accepts_rogue = yes }
					has_character_flag = rogue_start
					trait = rogue
				}
				NOT = { has_character_flag = rogue_discovered }
			}
			AND = {
				OR = {
					NOT = { accepts_blood_magic = yes }
					has_character_modifier = blood_magic
				}
				NOT = { has_character_flag = blood_magic_discovered }
			}
			AND = {
				OR = {
					NOT = { accepts_shadow_priest = yes }
					has_character_modifier = shadow_priest
				}
				NOT = { has_character_flag = shadow_priest_discovered }
			}
			AND = {
				OR = {
					NOT = { accepts_dark_shaman = yes }
					has_character_modifier = dark_shaman
				}
				NOT = { has_character_flag = dark_shaman_discovered }
			}
			AND = {
				OR = {
					NOT = { accepts_nightmare_druid = yes }
					has_character_modifier = nightmare_druid
				}
				NOT = { has_character_flag = nightmare_druid_discovered }
			}
		}
	}
	
	immediate = {
		any_courtier_or_vassal = {
			limit = {
				prisoner = no
			}
			character_event = { id = classgain.69 }
		}
	}
}

#Actual event
character_event = {
	id = classgain.69
	desc = {
		trigger = {
			OR = {
				FROM = { has_character_flag = warlock_start }
				FROM = { has_character_flag = warlock_drift }
				FROM = { trait = warlock }
			}
		}
		text = EVTDESCCLASSGAIN.69a # You have found evidence that [From.GetBestName] is a warlock. What should you do with this information?
	}
	desc = {
		trigger = {
			OR = {
				FROM = { has_character_flag = necromancer_start }
				FROM = { has_character_flag = necromancer_drift }
				FROM = { trait = necromancer }
			}
		}
		text = EVTDESCCLASSGAIN.69b # You have found evidence that [From.GetBestName] is a necromancer. What should you do with this information?
	}
	desc = {
		trigger = {
			NOR = {
				FROM = { has_character_flag = warlock_start }
				FROM = { has_character_flag = warlock_drift }
				FROM = { has_character_flag = necromancer_start }
				FROM = { has_character_flag = necromancer_drift }
			}
			OR = {
				FROM = { has_character_flag = necrolyte_start }
				FROM = { has_character_flag = necrolyte_drift }
				FROM = { trait = necrolyte }
			}
		}
		text = EVTDESCCLASSGAIN.69c # You have found evidence that [From.GetBestName] is a necrolyte. What should you do with this information?
	}
	desc = {
		trigger = {
			OR = {
				FROM = { has_character_flag = assassin_start }
				FROM = { trait = assassin }
			}
		}
		text = EVTDESCCLASSGAIN.69d # You have found evidence that [From.GetBestName] is an assassin. What should you do with this information?
	}
	desc = {
		trigger = {
			OR = {
				FROM = { has_character_flag = rogue_start }
				FROM = { trait = rogue }
			}
		}
		text = EVTDESCCLASSGAIN.69e # You have found evidence that [From.GetBestName] is a rogue. What should you do with this information?
	}
	desc = {
		trigger = {
			OR = {
				FROM = { has_character_modifier = blood_magic }
			}
		}
		text = EVTDESCCLASSGAIN.69f # You have found evidence that [From.GetBestName] is a blood mage. What should you do with this information?
	}
	desc = {
		trigger = {
			OR = {
				FROM = { has_character_modifier = shadow_priest }
			}
		}
		text = EVTDESCCLASSGAIN.69g # You have found evidence that [From.GetBestName] is a shadow priest. What should you do with this information?
	}
	desc = {
		trigger = {
			OR = {
				FROM = { has_character_modifier = dark_shaman }
			}
		}
		text = EVTDESCCLASSGAIN.69h # You have found evidence that [From.GetBestName] is a dark shaman. What should you do with this information?
	}
	desc = {
		trigger = {
			OR = {
				FROM = { has_character_modifier = nightmare_druid }
			}
		}
		text = EVTDESCCLASSGAIN.69i # You have found evidence that [From.GetBestName] is a druid of the nightmare. What should you do with this information?
	}
	picture = GFX_evt_scandal
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				opinion = { who = FROM value = 50 }
				NOT = { opinion = { who = FROM value = 75 } }
			}
			modifier = {
				factor = 4
				opinion = { who = FROM value = 75 }
			}
			modifier = {
				factor = 1.5
				trait = arbitrary
			}
			modifier = {
				factor = 1.5
				trait = depressed
			}
			modifier = {
				factor = 1.5
				trait = slothful
			}
			modifier = {
				factor = 1.5
				trait = shy
			}
			modifier = {
				factor = 1.5
				trait = craven
			}
			modifier = {
				factor = 1.5
				trait = trusting
			}
		}
		name = EVTOPTCLASSGAIN.69a # I'll just keep it to myself.
		FROM = {
			opinion = {
				modifier = opinion_very_grateful
				years = 10
				who = ROOT
			}
			character_event = { id = classgain.70 }
		}
	}
	
	option = {
		trigger = {
			OR = {
				OR = {
					FROM = { trait = warlock }
					OR = {
						NOT = { trait = warlock }
						AND = {
							NOT = { trait = necrolyte }
							NOT = { accepts_warlock = yes }
						}
					}
				}
				OR = {
					FROM = { trait = necrolyte }
					OR = {
						NOT = { trait = necrolyte }
						NOT = { trait = warlock }
						NOT = { trait = necromancer }
					}
				}
				OR = {
					FROM = { trait = necromancer }
					OR = {
						NOT = { trait = necromancer }
						AND = {
							NOT = { trait = necrolyte }
							NOT = { accepts_necromancer = yes }
						}
					}
				}
				OR = {
					FROM = { trait = assassin }
					NOT = { trait = assassin }
				}
				OR = {
					FROM = { trait = rogue }
					NOT = { trait = rogue }
				}
				OR = {
					FROM = { has_character_modifier = blood_magic }
					NOT = { has_character_modifier = blood_magic }
				}
				OR = {
					FROM = { has_character_modifier = shadow_priest }
					NOT = { has_character_modifier = shadow_priest }
				}
				OR = {
					FROM = { has_character_modifier = dark_shaman }
					NOT = { has_character_modifier = dark_shaman }
				}
				OR = {
					FROM = { has_character_modifier = nightmare_druid }
					NOT = { has_character_modifier = nightmare_druid }
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				NOT = { opinion = { who = FROM value = -50 } }
				opinion = { who = FROM value = -75 }
			}
			modifier = {
				factor = 4
				NOT = { opinion = { who = FROM value = -75 } }
			}
			modifier = {
				factor = 1.5
				trait = just
			}
			modifier = {
				factor = 1.5
				trait = honest
			}
			modifier = {
				factor = 1.5
				trait = brave
			}
			modifier = {
				factor = 1.5
				trait = zealous
			}
			modifier = {
				factor = 1.5
				trait = paranoid
			}
		}
		name = EVTOPTCLASSGAIN.69b # I must bring this to light!
		hidden_tooltip = {
			FROM = {
				if = {
					limit = {
						independent = no
						OR = {
							AND = {
								OR = {
									has_character_flag = warlock_start
									has_character_flag = warlock_drift
									trait = warlock
								}
								liege = {
									NOT = { accepts_warlock = yes }
								}
							}
							AND = {
								OR = {
									has_character_flag = necromancer_start
									has_character_flag = necromancer_drift
									trait = necromancer
								}
								liege = {
									NOT = { accepts_necromancer = yes }
								}
							}
							AND = {
								NOT = {
									has_character_flag = warlock_start
									has_character_flag = warlock_drift
									has_character_flag = necromancer_start
									has_character_flag = necromancer_drift
								}
								OR = {
									has_character_flag = necrolyte_start
									has_character_flag = necrolyte_drift
									trait = necrolyte
								}
								liege = {
									OR = {
										NOT = { accepts_warlock = yes }
										NOT = { accepts_necromancer = yes }
									}
								}
							}
							AND = {
								has_character_modifier = blood_magic
								liege = {
									NOT = { accepts_blood_magic = yes }
								}
							}
							AND = {
								has_character_modifier = shadow_priest
								liege = {
									NOT = { accepts_shadow_priest = yes }
								}
							}
							AND = {
								has_character_modifier = dark_shaman
								liege = {
									NOT = { accepts_dark_shaman = yes }
								}
							}
							AND = {
								has_character_modifier = nightmare_druid
								liege = {
									NOT = { accepts_nightmare_druid = yes }
								}
							}
						}
					}
					liege = {
						opinion = {
							modifier = opinion_witch
							years = 100000
							who = PREV
						}
					}
				}
				if = {
					limit = {
						independent = no
						OR = {
							AND = {
								OR = {
									has_character_flag = assassin_start
									trait = assassin
								}
								liege = {
									NOT = { accepts_assassin = yes }
								}
							}
							AND = {
								OR = {
									has_character_flag = rogue_start
									trait = rogue
								}
								liege = {
									NOT = { accepts_rogue = yes }
								}
							}
						}
					}
					liege = {
						opinion = {
							modifier = opinion_criminal
							years = 100000
							who = PREV
						}
					}
				}
				prestige = -50
				if = {
					limit = {
						OR = {
							has_character_flag = warlock_start
							has_character_flag = warlock_drift
							trait = warlock
						}
					}
					if = {
						limit = {
							trait = warlock
						}
						remove_trait = arcanist_fake
						remove_trait = healer_fake
						remove_trait = mage_fake
						remove_trait = priest_fake
						remove_trait = shaman_fake
						remove_trait = druid_fake
						remove_trait = witch_doctor_fake
						remove_trait = techmage_fake
						remove_character_modifier = abjuration
						remove_character_modifier = enchantment
						remove_character_modifier = illusion
						remove_character_modifier = divination
						remove_character_modifier = transmutation
						remove_character_modifier = conjuration
						remove_character_modifier = evocation
						remove_character_modifier = evocation_fake
						remove_character_modifier = blood_magic
						remove_character_modifier = hexes
						remove_character_modifier = brews
						remove_character_modifier = shadow_hunter
						remove_character_modifier = holy_priest
						remove_character_modifier = holy_priest_fake
						remove_character_modifier = sun_priest
						remove_character_modifier = sun_priest_fake
						remove_character_modifier = moon_priest
						remove_character_modifier = moon_priest_fake
						remove_character_modifier = shadow_priest
						remove_character_modifier = sea_witch
						remove_character_modifier = moon_druid
						remove_character_modifier = sun_druid
						remove_character_modifier = mender
						remove_character_modifier = mender_fake
						remove_character_modifier = feral_druid
						remove_character_modifier = flame_druid
						remove_character_modifier = wave_druid
						remove_character_modifier = wind_druid
						remove_character_modifier = stone_druid
						remove_character_modifier = nightmare_druid
						remove_character_modifier = elementalist
						remove_character_modifier = elementalist_fake
						remove_character_modifier = spiritualist
						remove_character_modifier = dark_shaman
					}
					set_character_flag = warlock_discovered
					if = {
						limit = {
							has_game_rule = {
								name = religion_restrictions
								value = on
							}
						}
						if = {
							limit = {
								NOT = { has_secret_religion_trait_trigger = yes }
								NOT = {
									religion = cult_of_the_infinite
									religion = cult_of_the_destroyer
									religion = emerald_nightmare
									religion = forgotten_shadow
									religion = old_gods
									religion = twilights_hammer
									religion = azshara
									religion = burning_legion
									religion = mercantilism
									religion = demonology
									religion = loa
								}
							}
							religion = demonology
						}
						if = {
							limit = {
								OR = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = mercantilism
									secret_religion = demonology
								}
							}
							convert_to_secret_religion = yes
						}
					}
				}
				if = {
					limit = {
						NOT = {
							has_character_flag = warlock_start
							has_character_flag = warlock_drift
							has_character_flag = necromancer_start
							has_character_flag = necromancer_drift
						}
						OR = {
							has_character_flag = necrolyte_start
							has_character_flag = necrolyte_drift
							trait = necrolyte
						}
					}
					if = {
						limit = {
							trait = necrolyte
						}
						remove_trait = healer_fake
						remove_trait = arcanist_fake
					}
					set_character_flag = necrolyte_discovered
					if = {
						limit = {
							has_game_rule = {
								name = religion_restrictions
								value = on
							}
						}
						if = {
							limit = {
								NOT = { has_secret_religion_trait_trigger = yes }
								NOT = {
									religion = cult_of_the_infinite
									religion = cult_of_the_destroyer
									religion = emerald_nightmare
									religion = forgotten_shadow
									religion = old_gods
									religion = twilights_hammer
									religion = azshara
									religion = burning_legion
									religion = mercantilism
									religion = demonology
									religion = lich_king
									religion = hakkar
									religion = loa
								}
							}
							religion = demonology
						}
						if = {
							limit = {
								OR = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = mercantilism
									secret_religion = demonology
									secret_religion = lich_king
								}
							}
							convert_to_secret_religion = yes
						}
					}
				}
				if = {
					limit = {
						OR = {
							has_character_flag = necromancer_start
							has_character_flag = necromancer_drift
							trait = necromancer
						}
					}
					if = {
						limit = {
							trait = necromancer
						}
						remove_trait = arcanist_fake
						remove_trait = healer_fake
						remove_trait = mage_fake
						remove_trait = priest_fake
						remove_trait = shaman_fake
						remove_trait = druid_fake
						remove_trait = witch_doctor_fake
						remove_trait = techmage_fake
						remove_character_modifier = abjuration
						remove_character_modifier = enchantment
						remove_character_modifier = illusion
						remove_character_modifier = divination
						remove_character_modifier = transmutation
						remove_character_modifier = conjuration
						remove_character_modifier = evocation
						remove_character_modifier = evocation_fake
						remove_character_modifier = blood_magic
						remove_character_modifier = hexes
						remove_character_modifier = brews
						remove_character_modifier = shadow_hunter
						remove_character_modifier = holy_priest
						remove_character_modifier = holy_priest_fake
						remove_character_modifier = sun_priest
						remove_character_modifier = sun_priest_fake
						remove_character_modifier = moon_priest
						remove_character_modifier = moon_priest_fake
						remove_character_modifier = shadow_priest
						remove_character_modifier = sea_witch
						remove_character_modifier = moon_druid
						remove_character_modifier = sun_druid
						remove_character_modifier = mender_fake
						remove_character_modifier = feral_druid
						remove_character_modifier = flame_druid
						remove_character_modifier = wave_druid
						remove_character_modifier = wind_druid
						remove_character_modifier = stone_druid
						remove_character_modifier = nightmare_druid
						remove_character_modifier = elementalist
						remove_character_modifier = elementalist_fake
						remove_character_modifier = spiritualist
						remove_character_modifier = dark_shaman
					}
					set_character_flag = necromancer_discovered
					if = {
						limit = {
							has_game_rule = {
								name = religion_restrictions
								value = on
							}
						}
						if = {
							limit = {
								NOT = { has_secret_religion_trait_trigger = yes }
								NOT = {
									religion = hakkar
									religion = burning_legion
									religion = forgotten_shadow
									religion = lich_king
									religion = cult_of_the_infinite
									religion = cult_of_the_destroyer
									religion = old_gods
									religion = emerald_nightmare
									religion = azshara
									religion = demonology
								}
							}
							religion = forgotten_shadow
						}
						if = {
							limit = {
								OR = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = demonology
									secret_religion = lich_king
								}
							}
							convert_to_secret_religion = yes
						}
					}
				}
				if = {
					limit = {
						has_character_modifier = blood_magic
					}
					remove_character_modifier = evocation_fake
					set_character_flag = blood_magic_discovered
				}
				if = {
					limit = {
						has_character_modifier = shadow_priest
					}
					remove_character_modifier = holy_priest_fake
					remove_character_modifier = sun_priest_fake
					remove_character_modifier = moon_priest_fake
					set_character_flag = shadow_priest_discovered
					if = {
						limit = {
							has_game_rule = {
								name = religion_restrictions
								value = on
							}
						}
						if = {
							limit = {
								NOT = { has_secret_religion_trait_trigger = yes }
								NOT = {
									religion = cult_of_the_infinite
									religion = cult_of_the_destroyer
									religion = emerald_nightmare
									religion = forgotten_shadow
									religion = old_gods
									religion = twilights_hammer
									religion = azshara
									religion = burning_legion
									religion = mercantilism
									religion = demonology
									religion = lich_king
								}
							}
							religion = forgotten_shadow
						}
						if = {
							limit = {
								OR = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = forgotten_shadow
									secret_religion = old_gods
									secret_religion = twilights_hammer
									secret_religion = azshara
									secret_religion = burning_legion
									secret_religion = mercantilism
									secret_religion = demonology
									secret_religion = lich_king
								}
							}
							convert_to_secret_religion = yes
						}
					}
				}
				if = {
					limit = {
						has_character_modifier = dark_shaman
					}
					remove_character_modifier = elementalist_fake
					set_character_flag = dark_shaman_discovered
					if = {
						limit = {
							has_game_rule = {
								name = religion_restrictions
								value = on
							}
						}
						if = {
							limit = {
								OR = {
									religion = shamanism
									religion = old_ways
								}
							}
							religion = old_gods
						}
						if = {
							limit = {
								OR = {						
									secret_religion = cult_of_the_infinite
									secret_religion = cult_of_the_destroyer
									secret_religion = emerald_nightmare
									secret_religion = old_gods
									secret_religion = twilights_hammer
								}
							}
							convert_to_secret_religion = yes
						}
					}
				}
				if = {
					limit = {
						has_character_modifier = nightmare_druid
					}
					remove_character_modifier = mender_fake
					set_character_flag = nightmare_druid_discovered
					if = {
						limit = {
							has_game_rule = {
								name = religion_restrictions
								value = on
							}
						}
						if = {
							limit = {
								NOR = {
									religion = emerald_nightmare
									religion = old_gods
									religion = twilights_hammer
								}
							}
							religion = emerald_nightmare
						}
						if = {
							limit = {
								OR = {
									secret_religion = emerald_nightmare
									secret_religion = old_gods
									secret_religion = twilights_hammer
								}
							}
							convert_to_secret_religion = yes
						}
					}
				}
				opinion = {
					modifier = opinion_hate
					years = 100000
					who = ROOT
				}
				character_event = { id = classgain.71 }
			}
		}
	}
}

#Character informed secret kept
character_event = {
	id = classgain.70
	desc = EVTDESCCLASSGAIN.70 # Though [From.GetBestName] has discovered your illicit training, [From.GetSheHe] decided to keep that information to [From.GetHerselfHimself].
	picture = GFX_evt_scandal
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.70 # I am glad.
	}
}

#character informed secret spilled
character_event = {
	id = classgain.71
	desc = EVTDESCCLASSGAIN.71 # Disaster! Not only [From.GetBestName] has discovered your illicit training, [From.GetSheHe] decided to tell everyone about it!
	picture = GFX_evt_scandal
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			NOT = { trait = craven }
		}
		name = EVTOPTCLASSGAIN.71a # Damn [From.GetHerHim]!
		random = {
			chance = 50
			add_rival = FROM
		}
	}
	
	option = {
		trigger = {
			independent = no
			OR = {
				AND = {
					OR = {
						has_character_flag = warlock_start
						has_character_flag = warlock_drift
						trait = warlock
					}
					liege = {
						NOT = { accepts_warlock = yes }
					}
				}
				AND = {
					OR = {
						has_character_flag = necromancer_start
						has_character_flag = necromancer_drift
						trait = necromancer
					}
					liege = {
						NOT = { accepts_necromancer = yes }
					}
				}
				AND = {
					NOT = {
						has_character_flag = warlock_start
						has_character_flag = warlock_drift
						has_character_flag = necromancer_start
						has_character_flag = necromancer_drift
					}
					OR = {
						has_character_flag = necrolyte_start
						has_character_flag = necrolyte_drift
						trait = necrolyte
					}
					liege = {
						NOT = { accepts_warlock = yes }
						NOT = { accepts_necromancer = yes }
					}
				}
				AND = {
					has_character_modifier = blood_magic
					liege = {
						NOT = { accepts_blood_magic = yes }
					}
				}
				AND = {
					has_character_modifier = shadow_priest
					liege = {
						NOT = { accepts_shadow_priest = yes }
					}
				}
				AND = {
					has_character_modifier = dark_shaman
					liege = {
						NOT = { accepts_dark_shaman = yes }
					}
				}
				AND = {
					has_character_modifier = nightmare_druid
					liege = {
						NOT = { accepts_nightmare_druid = yes }
					}
				}
			}
		}
		name = EVTOPTCLASSGAIN.71b # I must escape!
		random = {
			chance = 50
			add_rival = FROM
		}
		random = {
			chance = 25
			remove_trait = brave
		}
		random = {
			chance = 25
			remove_trait = brave
			add_trait = craven
		}
		hidden_tooltip = {
			random_list = {
				1 = {
					modifier = {
						factor = 2
						intrigue = 10
						NOT = { intrigue = 15 }
					}
					modifier = {
						factor = 3
						intrigue = 15
						NOT = { intrigue = 20 }
					}
					modifier = {
						factor = 4
						intrigue = 20
					}
					banish = yes
				}
				1 = {
					modifier = {
						factor = 2
						intrigue = 5
						NOT = { intrigue = 10 }
					}
					modifier = {
						factor = 4
						NOT = { intrigue = 5 }
					}
					liege = {
						reverse_imprison = PREV
					}
				}
			}
		}
	}
}

#Secret class arrives in court that tolerates that class.
character_event = {
	id = classgain.72
	hide_window = yes
	
	prisoner = no
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		ai = no
	}
	
	trigger = {
		OR = {
			AND = {
				trait = warlock
				OR = {
					AND = {
						independent = yes
						accepts_warlock = yes
					}
					liege = {
						accepts_warlock = yes
					}
				}
			}
			AND = {
				trait = necromancer
				OR = {
					AND = {
						independent = yes
						accepts_necromancer = yes
					}
					liege = {
						accepts_necromancer = yes
					}
				}
			}
			AND = {
				trait = necrolyte
				OR = {
					AND = {
						independent = yes
						OR = {
							accepts_warlock = yes
							accepts_necromancer = yes
						}
					}
					liege = {
						OR = {
							accepts_necromancer = yes
						}
					}
				}
			}
			AND = {
				trait = assassin
				OR = {
					AND = {
						independent = yes
						accepts_assassin = yes
					}
					liege = {
						accepts_assassin = yes
					}
				}
			}
			AND = {
				trait = rogue
				OR = {
					AND = {
						independent = yes
						accepts_rogue = yes
					}
					liege = {
						accepts_rogue = yes
					}
				}
			}
			AND = {
				has_character_modifier = blood_magic
				OR = {
					AND = {
						independent = yes
						accepts_blood_magic = yes
					}
					liege = {
						accepts_blood_magic = yes
					}
				}
			}
			AND = {
				has_character_modifier = shadow_priest
				OR = {
					AND = {
						independent = yes
						accepts_shadow_priest = yes
					}
					liege = {
						accepts_shadow_priest = yes
					}
				}
			}
			AND = {
				has_character_modifier = dark_shaman
				OR = {
					AND = {
						independent = yes
						accepts_dark_shaman = yes
					}
					liege = {
						accepts_dark_shaman = yes
					}
				}
			}
			AND = {
				has_character_modifier = nightmare_druid
				OR = {
					AND = {
						independent = yes
						accepts_nightmare_druid = yes
					}
					liege = {
						accepts_nightmare_druid = yes
					}
				}
			}
		}
	}
	
	immediate = {
		trigger_switch = {
			on_trigger = trait
			warlock = {
				remove_trait = arcanist_fake
				remove_trait = healer_fake
				remove_trait = mage_fake
				remove_trait = priest_fake
				remove_trait = shaman_fake
				remove_trait = druid_fake
				remove_trait = witch_doctor_fake
				remove_trait = techmage_fake
				remove_character_modifier = abjuration
				remove_character_modifier = enchantment
				remove_character_modifier = illusion
				remove_character_modifier = divination
				remove_character_modifier = transmutation
				remove_character_modifier = conjuration
				remove_character_modifier = evocation
				remove_character_modifier = evocation_fake
				remove_character_modifier = blood_magic
				remove_character_modifier = hexes
				remove_character_modifier = brews
				remove_character_modifier = shadow_hunter
				remove_character_modifier = holy_priest
				remove_character_modifier = holy_priest_fake
				remove_character_modifier = sun_priest
				remove_character_modifier = sun_priest_fake
				remove_character_modifier = moon_priest
				remove_character_modifier = moon_priest_fake
				remove_character_modifier = shadow_priest
				remove_character_modifier = sea_witch
				remove_character_modifier = moon_druid
				remove_character_modifier = sun_druid
				remove_character_modifier = mender
				remove_character_modifier = feral_druid
				remove_character_modifier = elementalist
				remove_character_modifier = elementalist_fake
				remove_character_modifier = spiritualist
				remove_character_modifier = dark_shaman
				set_character_flag = warlock_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = emerald_nightmare
								religion = forgotten_shadow
								religion = old_gods
								religion = twilights_hammer
								religion = azshara
								religion = burning_legion
								religion = mercantilism
								religion = demonology
								religion = loa
							}
						}
						religion = demonology
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = mercantilism
								secret_religion = demonology
							}
						}
						convert_to_secret_religion = yes
					}
				}
			}
			necromancer = {
				remove_trait = arcanist_fake
				remove_trait = healer_fake
				remove_trait = mage_fake
				remove_trait = priest_fake
				remove_trait = shaman_fake
				remove_trait = druid_fake
				remove_trait = witch_doctor_fake
				remove_trait = techmage_fake
				remove_character_modifier = abjuration
				remove_character_modifier = enchantment
				remove_character_modifier = illusion
				remove_character_modifier = divination
				remove_character_modifier = transmutation
				remove_character_modifier = conjuration
				remove_character_modifier = evocation
				remove_character_modifier = evocation_fake
				remove_character_modifier = blood_magic
				remove_character_modifier = hexes
				remove_character_modifier = brews
				remove_character_modifier = shadow_hunter
				remove_character_modifier = holy_priest
				remove_character_modifier = holy_priest_fake
				remove_character_modifier = sun_priest
				remove_character_modifier = sun_priest_fake
				remove_character_modifier = moon_priest
				remove_character_modifier = moon_priest_fake
				remove_character_modifier = shadow_priest
				remove_character_modifier = sea_witch
				remove_character_modifier = moon_druid
				remove_character_modifier = sun_druid
				remove_character_modifier = mender
				remove_character_modifier = feral_druid
				remove_character_modifier = elementalist
				remove_character_modifier = elementalist_fake
				remove_character_modifier = spiritualist
				remove_character_modifier = dark_shaman
				set_character_flag = necromancer_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = hakkar
								religion = burning_legion
								religion = forgotten_shadow
								religion = lich_king
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = old_gods
								religion = emerald_nightmare
								religion = azshara
								religion = demonology
							}
						}
						religion = forgotten_shadow
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = demonology
								secret_religion = lich_king
							}
						}
						convert_to_secret_religion = yes
					}
				}
			}
			necrolyte = {
				remove_trait = healer_fake
				remove_trait = arcanist_fake
				set_character_flag = necrolyte_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = emerald_nightmare
								religion = forgotten_shadow
								religion = old_gods
								religion = twilights_hammer
								religion = azshara
								religion = burning_legion
								religion = mercantilism
								religion = demonology
								religion = lich_king
								religion = hakkar
								religion = loa
							}
						}
						religion = demonology
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = mercantilism
								secret_religion = demonology
								secret_religion = lich_king
							}
						}
						convert_to_secret_religion = yes
					}
				}
			}
			assassin = {
				remove_trait = scout_fake
				set_character_flag = assassin_discovered
			}
			rogue = {
				remove_trait = scout_fake
				set_character_flag = rogue_discovered
			}
		}
		trigger_switch = {
			on_trigger = has_character_modifier
			blood_magic = {
				remove_character_modifier = evocation_fake
				set_character_flag = blood_magic_discovered
			}
			shadow_priest = {
				remove_character_modifier = holy_priest_fake
				remove_character_modifier = sun_priest_fake
				remove_character_modifier = moon_priest_fake
				set_character_Flag = shadow_priest_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = emerald_nightmare
								religion = forgotten_shadow
								religion = old_gods
								religion = twilights_hammer
								religion = azshara
								religion = burning_legion
								religion = mercantilism
								religion = demonology
								religion = lich_king
							}
						}
						religion = forgotten_shadow
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = mercantilism
								secret_religion = demonology
								secret_religion = lich_king
							}
						}
						convert_to_secret_religion = yes
					}
				}
			}
			dark_shaman = {
				remove_character_modifier = elementalist_fake
				set_character_flag = dark_shaman_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							OR = {
								religion = shamanism
								religion = old_ways
							}
						}
						religion = old_gods
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = old_gods
								secret_religion = twilights_hammer
							}
						}
						convert_to_secret_religion = yes
					}
				}
			}
			nightmare_druid = {
				remove_character_modifier = mender_fake
				set_character_flag = nightmare_druid_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOR = {
								religion = emerald_nightmare
								religion = old_gods
								religion = twilights_hammer
							}
						}
						religion = emerald_nightmare
					}
					if = {
						limit = {
							OR = {
								secret_religion = emerald_nightmare
								secret_religion = old_gods
								secret_religion = twilights_hammer
							}
						}
						convert_to_secret_religion = yes
					}
				}
			}
		}
	}	
}

#Swap specific classes when not meeting the reqs.
character_event = {
	id = classgain.73
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOR = {
			has_game_rule = {
				name = class_requirements
				value = unrestricted
			}
		}
		OR = {
			AND = {
				trait = priest
				NOR = {
					religion_group = light_group
					religion_group = void_group
					religion_group = goblin_group
					religion_group = fel_group
					religion = sunwell
					religion = azshara
				}
			}
			AND = {
				trait = shaman
				OR = {
					NOR = {
						religion_group = elemental_group
						religion = old_gods
						religion = twilights_hammer
						religion = cult_of_the_infinite
						religion = cult_of_the_destroyer
						religion = emerald_nightmare
						religion = mercantilism
					}
					AND = {
						NOT = {
							has_game_rule = {
								name = class_requirements
								value = unrestricted
							}
						}
						OR = {
							trait = undead_scourge
							trait = undead_forsaken
							trait = undead_generic
						}
					}
				}
			}
			AND = {
				trait = druid
				OR = {
					NOR = {
						religion_group = wild_gods_group
						religion_group = elemental_group
						religion = old_gods
						religion = twilights_hammer
						religion = emerald_nightmare
						religion = cult_of_the_dreamer
					}
					AND = {
						NOT = {
							has_game_rule = {
								name = class_requirements
								value = unrestricted
							}
						}
						OR = {
							trait = undead_scourge
							trait = undead_forsaken
							trait = undead_generic
						}
					}
				}
			}
			AND = {
				trait = paladin
				OR = {
					NOR = {
						AND = {
							trait = human
							OR = {
								religion_group = light_group
								has_landed_title = d_tyrs_guard
								any_liege = {
									has_landed_title = d_tyrs_guard
								}
								society_member_of = tyrs_guard_society
							}
						}
						AND = {
							trait = AK_trait_dwarf
							culture = bronzebeard
							religion_group = light_group
						}
					}
					AND = {
						NOT = {
							has_game_rule = {
								name = class_requirements
								value = unrestricted
							}
						}
						OR = {
							trait = undead_scourge
							trait = undead_forsaken
							trait = undead_generic
						}
					}
				}
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				trait = priest
				NOR = {
					religion_group = light_group
					religion_group = void_group
					religion_group = goblin_group
					religion_group = fel_group
					religion = sunwell
					religion = azshara
				}
			}
			remove_trait = priest
			clr_character_flag = has_class_mod
			clr_character_flag = shadow_priest_discovered
			remove_character_modifier = holy_priest
			remove_character_modifier = holy_priest_fake
			remove_character_modifier = sun_priest
			remove_character_modifier = sun_priest_fake
			remove_character_modifier = moon_priest
			remove_character_modifier = moon_priest_fake
			remove_character_modifier = sea_witch
			remove_character_modifier = shadow_priest
			if = {
				limit = {
					religion_group = elemental_group
					OR = {
						has_game_rule = {
							name = class_requirements
							value = unrestricted
						}
						AND = {
							trait = human
							has_global_flag = human_shamanism
						}
						trait = orc
						trait = goblin
						AND = {
							trait = AK_trait_dwarf
							culture = wildhammer
						}
						trait = murloc
						trait = kobold
						trait = gnoll
						trait = trogg
						trait = draenei
						trait = broken
						trait = lost_one
					}
					OR = {
						has_game_rule = {
							name = class_requirements
							value = unrestricted
						}
						NOR = {
							trait = undead_scourge
							trait = undead_forsaken
							trait = undead_generic
						}
					}
				}
				add_trait = shaman
				break = yes
			}
			if = {
				limit = {
					OR = {
						religion = cult_of_the_dreamer
						religion = emerald_nightmare
						has_game_rule = {
							name = class_requirements
							value = unrestricted
						}
						trait = troll_forest
						trait = troll_ice
						trait = troll_dark
						trait = troll_sand
						trait = troll_jungle
						trait = troll_zandalari
						trait = lost_one
					}
					OR = {
						has_game_rule = {
							name = class_requirements
							value = unrestricted
						}
						NOR = {
							trait = undead_scourge
							trait = undead_forsaken
							trait = undead_generic
						}
					}
				}
				add_trait = druid
				break = yes
			}
			if = {
				limit = {
					OR = {
						religion = burning_legion
						religion = demonology
					}
				}
				add_trait = warlock
				set_character_flag = warlock_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = emerald_nightmare
								religion = forgotten_shadow
								religion = old_gods
								religion = twilights_hammer
								religion = azshara
								religion = burning_legion
								religion = mercantilism
								religion = demonology
								religion = loa
							}
						}
						religion = demonology
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = mercantilism
								secret_religion = demonology
							}
						}
						convert_to_secret_religion = yes
					}
				}
				break = yes
			}
			if = {
				limit = {
					religion = lich_king
				}
				add_trait = necromancer
				set_character_flag = necromancer_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = hakkar
								religion = burning_legion
								religion = forgotten_shadow
								religion = lich_king
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = old_gods
								religion = emerald_nightmare
								religion = azshara
								religion = demonology
							}
						}
						religion = forgotten_shadow
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = demonology
								secret_religion = lich_king
							}
						}
						convert_to_secret_religion = yes
					}
				}
				break = yes
			}
			add_trait = alchemist
			break = yes
		}
		if = {
			limit = {
				trait = shaman
				OR = {
					NOR = {
						religion_group = elemental_group
						religion = old_gods
						religion = twilights_hammer
						religion = cult_of_the_infinite
						religion = cult_of_the_destroyer
						religion = emerald_nightmare
						religion = mercantilism
					}
					AND = {
						NOT = {
							has_game_rule = {
								name = class_requirements
								value = unrestricted
							}
						}
						OR = {
							trait = undead_scourge
							trait = undead_forsaken
							trait = undead_generic
						}
					}
				}
			}
			remove_trait = shaman
			clr_character_flag = has_adv_class
			clr_character_flag = has_class_mod
			clr_character_flag = dark_shaman_discovered
			remove_character_modifier = elementalist
			remove_character_modifier = elementalist_fake
			remove_character_modifier = spiritualist
			remove_character_modifier = dark_shaman
			if = {
				limit = {
					OR = {
						religion_group = light_group
						religion = forgotten_shadow
						religion = azshara
						religion_group = arcane_group
					}
				}
				add_trait = priest
				break = yes
			}
			if = {
				limit = {
					OR = {
						religion = burning_legion
						religion = demonology
					}
				}
				add_trait = warlock
				set_character_flag = warlock_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = emerald_nightmare
								religion = forgotten_shadow
								religion = old_gods
								religion = twilights_hammer
								religion = azshara
								religion = burning_legion
								religion = mercantilism
								religion = demonology
								religion = loa
							}
						}
						religion = demonology
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = mercantilism
								secret_religion = demonology
							}
						}
						convert_to_secret_religion = yes
					}
				}
				break = yes
			}
			if = {
				limit = {
					religion = lich_king
				}
				add_trait = necromancer
				set_character_flag = necromancer_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = hakkar
								religion = burning_legion
								religion = forgotten_shadow
								religion = lich_king
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = old_gods
								religion = emerald_nightmare
								religion = azshara
								religion = demonology
							}
						}
						religion = forgotten_shadow
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = demonology
								secret_religion = lich_king
							}
						}
						convert_to_secret_religion = yes
					}
				}
				break = yes
			}
			if = {
				limit = {
					religion = cult_of_the_dreamer
					OR = {
						has_game_rule = {
							name = class_requirements
							value = unrestricted
						}
						NOR = {
							trait = undead_scourge
							trait = undead_forsaken
							trait = undead_generic
						}
					}
				}
				add_trait = druid
				break = yes
			}
			add_trait = alchemist
			break = yes
		}
		if = {
			limit = {
				trait = druid
				OR = {
					NOR = {
						religion_group = wild_gods_group
						religion_group = elemental_group
						religion = old_gods
						religion = twilights_hammer
						religion = emerald_nightmare
						religion = cult_of_the_dreamer
					}
					AND = {
						NOT = {
							has_game_rule = {
								name = class_requirements
								value = unrestricted
							}
						}
						OR = {
							trait = undead_scourge
							trait = undead_forsaken
							trait = undead_generic
						}
					}
				}
			}
			remove_trait = druid
			clr_character_flag = has_class_mod
			remove_character_modifier = sun_druid
			remove_character_modifier = moon_druid
			remove_character_modifier = mender
			remove_character_modifier = mender_fake
			remove_character_modifier = feral_druid
			remove_character_modifier = flame_druid
			remove_character_modifier = wave_druid
			remove_character_modifier = wind_druid
			remove_character_modifier = stone_druid
			remove_character_modifier = nightmare_druid
			if = {
				limit = {
					OR = {
						religion_group = light_group
						religion = forgotten_shadow
						religion = azshara
					}
				}
				add_trait = priest
				break = yes
			}
			if = {
				limit = {
					OR = {
						religion = burning_legion
						religion = demonology
					}
				}
				add_trait = warlock
				set_character_flag = warlock_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = emerald_nightmare
								religion = forgotten_shadow
								religion = old_gods
								religion = twilights_hammer
								religion = azshara
								religion = burning_legion
								religion = mercantilism
								religion = demonology
								religion = loa
							}
						}
						religion = demonology
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = mercantilism
								secret_religion = demonology
							}
						}
						convert_to_secret_religion = yes
					}
				}
				break = yes
			}
			if = {
				limit = {
					religion = lich_king
				}
				add_trait = necromancer
				set_character_flag = necromancer_discovered
				if = {
					limit = {
						has_game_rule = {
							name = religion_restrictions
							value = on
						}
					}
					if = {
						limit = {
							NOT = { has_secret_religion_trait_trigger = yes }
							NOT = {
								religion = hakkar
								religion = burning_legion
								religion = forgotten_shadow
								religion = lich_king
								religion = cult_of_the_infinite
								religion = cult_of_the_destroyer
								religion = old_gods
								religion = emerald_nightmare
								religion = azshara
								religion = demonology
							}
						}
						religion = forgotten_shadow
					}
					if = {
						limit = {
							OR = {						
								secret_religion = cult_of_the_infinite
								secret_religion = cult_of_the_destroyer
								secret_religion = emerald_nightmare
								secret_religion = forgotten_shadow
								secret_religion = old_gods
								secret_religion = twilights_hammer
								secret_religion = azshara
								secret_religion = burning_legion
								secret_religion = demonology
								secret_religion = lich_king
							}
						}
						convert_to_secret_religion = yes
					}
				}
				break = yes
			}
			add_trait = alchemist
			break = yes
		}
		if = {
			limit = {
				trait = paladin
				OR = {
					NOR = {
						AND = {
							trait = human
							OR = {
								has_global_flag = thirdwar_bookmark
								has_global_flag = wow_bookmark
								religion_group = light_group
								has_landed_title = d_tyrs_guard
								any_liege = {
									has_landed_title = d_tyrs_guard
								}
								society_member_of = tyrs_guard_society
							}
						}
						AND = {
							OR = {
								has_global_flag = thirdwar_bookmark
								has_global_flag = wow_bookmark
							}
							trait = AK_trait_dwarf
							culture = bronzebeard
							religion_group = light_group
						}
						AND = {
							OR = {
								has_global_flag = wow_bookmark
								has_global_flag = blood_knights_active
							}
							OR = {
								trait = blood_elf
								trait = high_elf
							}
							religion = sunwell
						}
					}
					AND = {
						NOT = {
							has_game_rule = {
								name = class_requirements
								value = unrestricted
							}
						}
						OR = {
							trait = undead_scourge
							trait = undead_forsaken
							trait = undead_generic
						}
					}
				}
			}
			remove_trait = paladin
			add_trait = warrior
		}
	}
}

#Mods continued for when unrestricted classes are on.
character_event = {
	id = classgain.74
	desc = EVTDESCCLASSGAIN.49 # As a priest, you must choose which type of divine magic you shall use.
	picture = GFX_evt_monastery_monks
	border = GFX_event_normal_frame_religion
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		trait = priest
		NOT = { has_character_flag = has_class_mod }
	}
	
	option = {
		name = EVTOPTCLASSGAIN.49d # Solar Priest
		character_event = { id = classgain.53 }
	}
	
	option = {
		name = EVTOPTCLASSGAIN.49e # Sea Witch
		character_event = { id = classgain.54 }
	}
	
	option = {
		trigger = {
			ai = no
		}
		name = OPTIONS_BACK
		character_event = { id = classgain.49 }
	}
}

#Expanded druid mods
character_event = {
	id = classgain.75
	desc = EVTDESCCLASSGAIN.59 # As a druid, you must choose an aspect of nature in which to focus.
	picture = GFX_evt_boomkin
	border = GFX_event_normal_frame_religion
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		trait = druid
		NOT = { has_character_flag = has_class_mod }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				trait = troll_jungle
			}
		}
		name = EVTOPTCLASSGAIN.59d # Beasts
		character_event = { id = classgain.63 }
	}
	
	option = {
		ai_chance = {
			factor = 0.1
			modifier = {
				factor = 10
				OR = {
					has_game_rule = {
						name = class_opinions
						value = off
					}
					trait = lunatic
					trait = impaler
					trait = envious
					trait = proud
					trait = deceitful
					trait = ambitious
					trait = arbitrary
					trait = cynical
					trait = cruel
					accepts_nightmare_druid = yes
				}
			}
		}
		name = EVTOPTCLASSGAIN.59i # The Nightmare
		character_event = { id = classgain.81 }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				religion = old_ways
				religion = pyromancy
			}
		}
		name = EVTOPTCLASSGAIN.59e # Flame
		character_event = { id = classgain.77 }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				OR = {
					religion = old_ways
					religion = hydromancy
					religion = aeromancy
					religion = geomancy
				}
			}
		}
		name = OPTIONS_MORE
		character_event = { id = classgain.76 }
	}
	
	option = {
		trigger = {
			ai = no
			NOT = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				religion = old_ways
				religion = hydromancy
				religion = aeromancy
				religion = geomancy
			}
		}
		name = OPTIONS_BACK
		character_event = { id = classgain.59 }
	}
}

character_event = {
	id = classgain.76
	desc = EVTDESCCLASSGAIN.59 # As a druid, you must choose an aspect of nature in which to focus.
	picture = GFX_evt_boomkin
	border = GFX_event_normal_frame_religion
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		trait = druid
		NOT = { has_character_flag = has_class_mod }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				religion = old_ways
				religion = hydromancy
			}
		}
		name = EVTOPTCLASSGAIN.59f # Waves
		character_event = { id = classgain.78 }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				religion = old_ways
				religion = aeromancy
			}
		}
		name = EVTOPTCLASSGAIN.59g # Winds
		character_event = { id = classgain.79 }
	}
	
	option = {
		trigger = {
			OR = {
				has_game_rule = {
					name = class_requirements
					value = unrestricted
				}
				religion = old_ways
				religion = geomancy
			}
		}
		name = EVTOPTCLASSGAIN.59h # Stone
		character_event = { id = classgain.80 }
	}
	
	option = {
		trigger = {
			ai = no
		}
		name = OPTIONS_BACK
		character_event = { id = classgain.59 }
	}
}

character_event = {
	id = classgain.77
	desc = EVTDESCCLASSGAIN.77 # Druids of the Flame eschew the usual connection with nature in favour of forging a pact with rulers of the Firelands.
	picture = GFX_evt_firelands
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = flame_druid duration = -1 }
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.59 }
	}
}

character_event = {
	id = classgain.78
	desc = EVTDESCCLASSGAIN.78 # Druids of the Waves eschew the usual connection with nature in favour of forging a pact with rulers of the Abyssal Maw.
	picture = GFX_evt_abyssal_maw
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		add_character_modifier = { modifier = wave_druid duration = -1 }
		set_character_flag = has_class_mod
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.59 }
	}
}

character_event = {
	id = classgain.79
	desc = EVTDESCCLASSGAIN.79 # Druids of the Winds eschew the usual connection with nature in favour of forging a pact with rulers of the Skywall.
	picture = GFX_evt_skywall
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		add_character_modifier = { modifier = wind_druid duration = -1 }
		set_character_flag = has_class_mod
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.59 }
	}
}

character_event = {
	id = classgain.80
	desc = EVTDESCCLASSGAIN.80 # Druids of the Stone eschew the usual connection with nature in favour of forging a pact with rulers of Deepholm.
	picture = GFX_evt_deepholm
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		add_character_modifier = { modifier = stone_druid duration = -1 }
		set_character_flag = has_class_mod
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.59 }
	}
}

character_event = {
	id = classgain.81
	desc = EVTDESCCLASSGAIN.81 # Druids of the Nightmare have been corrupted, or willingly joined, the dark and twisting force known as the Emerald Nightmare. They seek to extend the Nightmare's reach both in the Emerald Dream and in the material world.
	picture = GFX_evt_xavius
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTCLASSGAIN.41a # I shall choose this one.
		set_character_flag = has_class_mod
		set_character_flag = nightmare_druid_discovered
		add_character_modifier = { modifier = nightmare_druid duration = -1 }
		if = {
			limit = {
				has_game_rule = {
					name = religion_restrictions
					value = on
				}
			}
			if = {
				limit = {
					NOT = { accepts_nightmare_druid = yes }
				}
				if = {
					limit = {
						NOT = { has_secret_religion_trait_trigger = yes }
						NOT = {
							religion = emerald_nightmare
							religion = old_gods
							religion = twilights_hammer
						}
					}
					religion = emerald_nightmare
				}
				if = {
					limit = {
						OR = {
							secret_religion = emerald_nightmare
							secret_religion = old_gods
							secret_religion = twilights_hammer
						}
					}
					convert_to_secret_religion = yes
				}
				break = yes
			}
			if = {
				limit = {
					accepts_nightmare_druid = yes
				}
				if = {
					limit = {
						NOT = {
							secret_religion = emerald_nightmare
							secret_religion = old_gods
							secret_religion = twilights_hammer
						}
					}
					clear_secret_religion = yes
					religion = emerald_nightmare
				}
				if = {
					limit = {
						OR = {
							secret_religion = emerald_nightmare
							secret_religion = old_gods
							secret_religion = twilights_hammer
						}
					}
					convert_to_secret_religion = yes
				}
				break = yes
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				has_game_rule = {
					name = class_opinions
					value = off
				}
			}
			NOT = { trait = honest }
			NOT = { accepts_nightmare_druid = yes }
			liege = {
				NOT = { accepts_nightmare_druid = yes }
			}
		}
		name = EVTOPTCLASSGAIN.48b # I shall practice this in secret.
		set_character_flag = has_class_mod
		add_character_modifier = { modifier = nightmare_druid duration = -1 }
		add_character_modifier = { modifier = mender_fake duration = -1 }
		if = {
			limit = {
				NOT = { accepts_nightmare_druid = yes }
				NOT = {
					OR = {						
						secret_religion = emerald_nightmare
						secret_religion = old_gods
						secret_religion = twilights_hammer
					}
				}
			}
			set_secret_religion = emerald_nightmare
		}
	}
	
	option = {
		ai_chance = {
			factor = 0
		}
		name = OPTIONS_BACK # Back
		character_event = { id = classgain.59 }
	}
}