###################################
#
# THE OLD GODS 
# - Various Events
#
###################################

# Written by Henrik Eklund

namespace = TOG
namespace = TGF

### Berserker Events

# Character becomes a Berserker in battle
character_event = {
	id = TOG.3000
	desc = EVTDESC_TOG_3000
	picture = GFX_evt_viking_battle_oldgods
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		TOW_background_has_berserker = yes
		is_alive = yes
		NOT = { trait = berserker }
		OR = {
			NOT = { age = 50 }
			immortal = yes
		}
		OR = {
			trait = wroth
			trait = aggressive_leader
		}
	}

	immediate = {
		disallow_new_battle_events_effect = yes #to keep the tombola from spamming you...
	}
	
	option = {
		name = EVTOPTA_TOG_3000
		if = {
			limit = { trait = craven }
			remove_trait = craven
		}
		add_trait = berserker
		add_blood_splatter_effect = yes
		allow_new_battle_events_effect = yes
	}
}

# Berserker is Maimed in battle
character_event = {
	id = TOG.3001
	desc = EVTDESC_TOG_3001
	picture = GFX_evt_viking_battle_oldgods
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		trait = berserker
		NOT = { trait = maimed }
		NOT = { trait = one_legged }
		is_alive = yes
	}

	immediate = {
		disallow_new_battle_events_effect = yes #to keep the tombola from spamming you...
	}
				
	option = {
		name = EVTOPTA_TOG_3001
		add_blood_splatter_effect = yes
		if = {
			limit = {
				NOT = {
					has_dlc = "Reapers"
				}
			}
			add_trait = maimed
			hidden_tooltip = {
				character_event = { id = 38281 }
			}
		}
		if = {
			limit = {
				has_dlc = "Reapers"
			}
			add_trait = one_legged
			add_trait = severely_injured
			hidden_tooltip = {
				character_event = { id = RIP.11503 } #Notify one-legged
				resolve_severely_injured_effect = yes
			}
		}
		allow_new_battle_events_effect = yes
	}
}

# Berserker is Wounded in battle
character_event = {
	id = TOG.3002
	desc = EVTDESC_TOG_3002
	picture = GFX_evt_viking_battle_oldgods
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		trait = berserker
		NOT = { trait = wounded }
		NOT = { is_maimed_trigger = yes }
		is_alive = yes
	}

	immediate = {
		disallow_new_battle_events_effect = yes #to keep the tombola from spamming you...
	}
	
	option = {
		name = EVTOPTA_TOG_3001
		add_trait = wounded
		add_blood_splatter_effect = yes
		allow_new_battle_events_effect = yes
	}
}

# Berserker is Killed in battle
character_event = {
	id = TOG.3003
	desc = EVTDESC_TOG_3003
	picture = GFX_evt_viking_battle_oldgods
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		trait = berserker
	}
	
	immediate = {
		disallow_new_battle_events_effect = yes #to keep the tombola from spamming you...
		liege = {
			if = {
				limit = { NOT = { character = ROOT } }
				character_event = { id = HFP.11002 } # (Opponent (liege) is informed that their commander has been killed)
			}
		}
		FROMFROM = {
			if = {
				limit = { NOT = { is_vassal_or_below = ROOT } }
				set_character_flag = temp_battle_kill_242
				character_event = { id = HFP.11003 }
			}
		}
#		FROM = { Outcommented because arcane magic script??
#			if = {
#				limit = { 
#					NOR = { 
#						has_character_flag = temp_battle_kill_242
#						is_vassal_or_below = ROOT
#					}
#				}
#				character_event = { id = HFP.11003 }
#			}
#		}
		FROMFROM = {
			clr_character_flag = temp_battle_kill_242
		}
		if = {
			limit = {
				OR = {
					is_liege_or_above = FROM
					FROM = { character = ROOT }
					NOT = { FROM = { always = yes } }
				}
			}
			death = {
				death_reason = death_battle
			}
			break = yes
		}
		death = {
			death_reason = death_battle
			killer = FROM
		}
	}
	
	option = {
		name = EVTOPTA_TOG_3003
	}
}

# Berserker kills scores of enemies in battle
character_event = {
	id = TOG.3004
	desc = EVTDESC_TOG_3004
	picture = GFX_evt_viking_battle_oldgods
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		trait = berserker
	}

	immediate = {
		disallow_new_battle_events_effect = yes #to keep the tombola from spamming you...
	}
	
	option = {
		name = EVTOPTA_TOG_3004
		add_blood_splatter_effect = yes
		prestige = 200
		change_martial = 1
		allow_new_battle_events_effect = yes
	}
}

# Too old to be Berserker
character_event = {
	id = TOG.3005
	desc = EVTDESC_TOG_3005
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	min_age = 50
	
	trigger = {
		has_dlc = "The Old Gods"
		trait = berserker
		immortal = no
		OR = { #Either you must have been a *regular* berserker (no flag), or a special one (gained via a Warrior Lodge) for more than ten years...
			NOT = { has_character_flag = special_berserker }
			had_character_flag = { flag = special_berserker days = 3650 }
		}
	}
	
	option = {
		name = EVTOPTA_TOG_3005
		remove_trait = berserker
		clr_character_flag = special_berserker
	}
}

# Berserker goes berserk against Courtier
character_event = {
	id = TOG.3006
	desc = EVTDESC_TOG_3006
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_3006
		add_blood_splatter_effect = yes
		random_list = {
			50 = {
				character_event = { id = TOG.3007 days = 1 tooltip = EVTTOOLTIP_TOG_3007 }
			}
			50 = {
				character_event = { id = TOG.3008 days = 1 tooltip = EVTTOOLTIP_TOG_3008 }
			}
		}
	}
}

# Courtier beaten
character_event = {
	id = TOG.3007
	desc = EVTDESC_TOG_3007
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	hide_from = yes
	
	option = {
		name = EVTOPTA_TOG_3007
		FROMFROM = {
			add_trait = wounded
			opinion = {
				modifier = opinion_went_berserk
				who = ROOT
			}
		}
	}
}

# Courtier spared
character_event = {
	id = TOG.3008
	desc = EVTDESC_TOG_3008
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	hide_from = yes
	
	option = {
		name = EVTOPTA_TOG_3008
		piety = 20
	}
}

# Berserker goes berserk against Courtier (Hidden AI)
character_event = {
	id = TOG.3009
	hide_window = yes
	
	is_triggered_only = yes
	
	ai = yes
	min_age = 16
	only_men = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		has_dlc = "The Old Gods"
		host = { 
			character = liege
			prisoner = no
			trait = berserker
			NOT = { 
				trait = incapable
				opinion = { who = ROOT value = 10 }
			}
			NOT = { is_inaccessible_trigger = yes }
		}
		NOT = { trait = berserker }
		is_primary_heir = no
		is_pretender = no
	}
	
	immediate = {
		add_blood_splatter_effect = yes
		liege = {
			character_event = { id = TOG.3006 }
		}
	}
}


### Looting Events

# +2 Axe
character_event = {
	id = TOG.3300
	desc = EVTDESC_TOG_3300
	picture = GFX_evt_vikings_arriving_oldgods
	border = GFX_event_normal_frame_war
	
	ai = no
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		NOT = { has_artifact = loot_axe }
		FROM = { always = yes }
	}
	
	option = {
		name = EVTOPTA_TOG_3300
		add_artifact = loot_axe
		new_artifact = {
			set_creation_date = 1.1.1
		}
	}
	option = {
		name = EVTOPTB_TOG_3300
		prestige = 10
	}
}

# Strange Chest
character_event = {
	id = TOG.3301
	desc = EVTDESC_TOG_3301
	picture = GFX_evt_vikings_arriving_oldgods
	border = GFX_event_normal_frame_economy
	
	ai = no
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		NOT = { 
			has_artifact = strange_chest 
			has_character_flag = found_chest
		}
		FROM = { always = yes }
	}
	
	option = {
		name = EVTOPTA_TOG_3301
		custom_tooltip = { text = found_chest }
		add_artifact = strange_chest
		set_character_flag = found_chest
	}
}

# Key Found
character_event = {
	id = TOG.3302
	desc = EVTDESC_TOG_3302
	picture = GFX_evt_vikings_arriving_oldgods
	border = GFX_event_normal_frame_economy
	
	ai = no
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		has_artifact = strange_chest
		has_character_flag = found_chest
		FROM = { always = yes }
	}
	
	option = {
		name = EVTOPTA_TOG_3302
		custom_tooltip = {
			text = opens_chest
			hidden_tooltip = {
				random_list = {
					40 = { character_event = { id = TOG.3306 } }
					40 = { character_event = { id = TOG.3307 } }
					40 = { character_event = { id = TOG.3308 } }
					5 = { character_event = { id = TOG.3309 } }
				}
			}
		}
	}
}

# Key Found by Child or relative
character_event = {
	id = TOG.3303
	desc = EVTDESC_TOG_3303
	picture = GFX_evt_vikings_arriving_oldgods
	border = GFX_event_normal_frame_economy
	
	ai = no
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Old Gods"
		has_artifact = strange_chest
		NOT = { 
			has_character_flag = found_chest
			any_dynasty_member = {
				has_character_flag = found_chest
			}
		}
		FROM = { always = yes }
	}
	
	option = {
		name = EVTOPTA_TOG_3303
		custom_tooltip = {
			text = opens_chest
			hidden_tooltip = {
				random_list = {
					40 = { character_event = { id = TOG.3306 } }
					40 = { character_event = { id = TOG.3307 } }
					40 = { character_event = { id = TOG.3308 } }
					5 = { 
						modifier = {
							factor = 0
							has_game_rule = {
								name = supernatural_events
								value = off
							}
						}
						character_event = { id = TOG.3309 } 
					}
				}
			}
		}
	}
}

# Chest Opened, Contains Gold
character_event = {
	id = TOG.3306
	desc = EVTDESC_TOG_3306
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_economy
	
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_3306
		wealth = 200
		destroy_artifact = strange_chest
	}
}

# Chest Opened, Contains Parchments
character_event = {
	id = TOG.3307
	desc = EVTDESC_TOG_3307
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_economy
	
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_3307
		custom_tooltip = { text = chest_empty }
		destroy_artifact = strange_chest
	}
}

# Chest Opened, Contains Junk
character_event = {
	id = TOG.3308
	desc = EVTDESC_TOG_3308
	picture = GFX_evt_viking_throneroom_oldgods
	border = GFX_event_normal_frame_economy
	
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_TOG_3308
		wealth = 10
		destroy_artifact = strange_chest
	}
}

# Chest Opened, Contains Seraphim
character_event = {
	id = TOG.3309
	desc = EVTDESC_TOG_3309
	picture = GFX_evt_shadowy_cabal
	border = GFX_event_normal_frame_economy
	
	hide_from = yes
	
	is_triggered_only = yes
		
	option = {
		name = EVTOPTA_TOG_3309
		custom_tooltip = { text = seraphims }
		destroy_artifact = strange_chest
	}
}

#Viking Trait Gained
#character_event = {
#	id = TGF.3320
#	desc = { 
#		trigger = { 
#			OR = {
#				religion = norse_pagan
#				religion = norse_pagan_reformed
#				any_owned_bloodline = {
#					has_bloodline_flag = bloodline_viking
#				}
#			}
#		} 
#		text = EVTDESC_TOG_3320
#	}
#	desc = { 
#		trigger = { 
#			NOR = {
#				religion = norse_pagan
#				religion = norse_pagan_reformed
#				any_owned_bloodline = {
#					has_bloodline_flag = bloodline_viking
#				}
#			}
#		} 
#		text = EVTDESC_TOG_3320_HF
#	}
#	picture = { 
#		trigger = { is_female = no } 
#		picture = GFX_evt_vikings_arriving_oldgods
#	}
#	picture = { 
#		trigger = { is_female = yes } 
#		picture = GFX_evt_norse_tempest
#	}
#	border = GFX_event_normal_frame_war
#	
#	hide_from = yes
#	
#	is_triggered_only = yes
#	
#	min_age = 16
#	capable_only = yes
#	prisoner = no
#	
#	trigger = {
#		OR = {
#			has_dlc = "The Old Gods"
#			any_owned_bloodline = {
#				has_bloodline_flag = bloodline_viking
#			}
#			AND = {
#				TOW_religion_is_adventuring = yes
#				TOW_religion_is_seafaring = yes
#			}
#			TOW_religion_is_feature_norse = yes
#		}
#		NOR = { 
#			trait = viking
#			trait = pirate
#			trait = ravager
#			trait = seaking
#			trait = sea_queen
#		}
#		OR = {
#			religion = norse_pagan
#			religion = norse_pagan_reformed
#			any_owned_bloodline = {
#				has_bloodline_flag = bloodline_viking
#			}
#			AND = {
#				TOW_religion_is_adventuring = yes
#				TOW_religion_is_seafaring = yes
#			}
#		}
#		FROM = { always = yes }
#	}
#	
#	option = {
#		name = EVTOPTA_TOG_3320
#		if = {
#			limit = { 
#				OR = {  
#					religion = norse_pagan
#					religion = norse_pagan_reformed
#				} 
#			}
#			add_trait = viking
#		}
#		if = {
#			limit = { 
#				NOR = {  
#					religion = norse_pagan
#					religion = norse_pagan_reformed
#				} 
#			}
#			if = {
#				limit = {
#					any_owned_bloodline = {
#						has_bloodline_flag = bloodline_viking
#					}
#				}
#				set_character_flag = acquired_pirate_trait_by_bloodline
#			}
#			add_trait = pirate
#		}
#		hidden_tooltip = {
#			set_variable = { which = viking_raids value = 0 }
#		}
#	}
#}

#Ravager 
#character_event = {
#	id = TGF.3321
#	desc = { 
#		trigger = { 
#			OR = {
#				religion = norse_pagan
#				religion = norse_pagan_reformed
#				any_owned_bloodline = {
#					has_bloodline_flag = bloodline_viking
#				}
#			}
#		} 
#		text = TOG.3321.d
#	}
#	desc = { 
#		trigger = { 
#			NOR = {
#				religion = norse_pagan
#				religion = norse_pagan_reformed
#				any_owned_bloodline = {
#					has_bloodline_flag = bloodline_viking
#				}
#			}
#		} 
#		text = EVTDESC_TOG_3321_HF
#	}
#	picture = { 
#		trigger = { is_female = no } 
#		picture = GFX_evt_vikings_arriving_oldgods
#	}
#	picture = { 
#		trigger = { is_female = yes } 
#		picture = GFX_evt_norse_tempest
#	}
#	border = GFX_event_normal_frame_war
#	
#	hide_from = yes
#	
#	is_triggered_only = yes
#	
#	min_age = 16
#	capable_only = yes
#	prisoner = no
#	
#	trigger = {
#		OR = {
#			has_dlc = "The Old Gods"
#			any_owned_bloodline = {
#				has_bloodline_flag = bloodline_viking
#			}
#			AND = {
#				TOW_religion_is_adventuring = yes
#				TOW_religion_is_seafaring = yes
#			}
#			TOW_religion_is_feature_norse = yes
#		}
#		OR = {
#			trait = viking
#			trait = pirate
#		}
#		NOR = { 
#			trait = ravager
#			trait = seaking
#			trait = sea_queen
#		}
#		OR = {
#			religion = norse_pagan
#			religion = norse_pagan_reformed
#			any_owned_bloodline = {
#				has_bloodline_flag = bloodline_viking
#			}
#			AND = {
#				TOW_religion_is_adventuring = yes
#				TOW_religion_is_seafaring = yes
#			}
#		}
#		check_variable = { which = viking_raids value = 50 }
#		FROM = { always = yes }
#	}
#	
#	option = {
#		name = TOG.3321.a
#		if = {
#			limit = { 
#				trait = pirate
#			}
#			remove_trait = pirate
#		}
#		if = {
#			limit = { 
#				trait = viking
#			}
#			remove_trait = viking
#		}
#		add_trait = ravager
#	}
#}
#
##Sea King
#character_event = {
#	id = TGF.3322
#	desc = TOG.3322.d
#	picture = { 
#		trigger = { is_female = no } 
#		picture = GFX_evt_vikings_arriving_oldgods
#	}
#	picture = { 
#		trigger = { is_female = yes } 
#		picture = GFX_evt_norse_tempest
#	}
#	border = GFX_event_normal_frame_war
#	
#	hide_from = yes
#	
#	is_triggered_only = yes
#	
#	min_age = 16
#	capable_only = yes
#	prisoner = no
#	
#	trigger = {
#		OR = {
#			has_dlc = "The Old Gods"
#			any_owned_bloodline = {
#				has_bloodline_flag = bloodline_viking
#			}
#			AND = {
#				TOW_religion_is_adventuring = yes
#				TOW_religion_is_seafaring = yes
#			}
#			TOW_religion_is_feature_norse = yes
#		}
#		trait = ravager
#		NOR = { 
#			trait = seaking
#			trait = sea_queen
#		}
#		OR = {
#			religion = norse_pagan
#			religion = norse_pagan_reformed
#			any_owned_bloodline = {
#				has_bloodline_flag = bloodline_viking
#			}
#			AND = {
#				TOW_religion_is_adventuring = yes
#				TOW_religion_is_seafaring = yes
#			}
#		}
#		check_variable = { which = viking_raids value = 100 }
#		FROM = { always = yes }
#	}
#	
#	option = {
#		name = TOG.3322.a
#		remove_trait = ravager
#		if = {
#			limit = {
#				is_female = no
#			}
#			add_trait = seaking
#		}
#		if = {
#			limit = {
#				is_female = yes
#			}
#			add_trait = sea_queen
#		}
#	}
#}

#character_event = {
#	id = TGF.3323
#	
#	hide_window = yes
#	
#	is_triggered_only = yes
#	
#	min_age = 16
#	capable_only = yes
#	prisoner = no
#	
#	trigger = {
#		OR = {
#			has_dlc = "The Old Gods"
#			any_owned_bloodline = {
#				has_bloodline_flag = bloodline_viking
#			}
#			AND = {
#				TOW_religion_is_adventuring = yes
#				TOW_religion_is_seafaring = yes
#			}
#			TOW_religion_is_feature_norse = yes
#		}
#		OR = {
#			trait = pirate
#			trait = viking
#			trait = ravager
#			trait = seaking #Top trait, but there's still chance of gaining a Bloodline if variable goes high enough.
#			trait = sea_queen
#		}
#		OR = {
#			religion = norse_pagan
#			religion = norse_pagan_reformed
#			any_owned_bloodline = {
#				has_bloodline_flag = bloodline_viking
#			}
#			AND = {
#				TOW_religion_is_adventuring = yes
#				TOW_religion_is_seafaring = yes
#			}
#		}
#		FROM = { always = yes }
#	}
#	
#	immediate = {
#		change_variable = { which = viking_raids value = 1 }
#	}
#}

character_event = {
	id = TOG.3404
	desc = TOG.3404.d
	picture = GFX_evt_vikings_arriving_oldgods
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			capital_scope = {
				has_province_modifier = loot_prosperity_boost
			}
		}
	}
	
	option = {
		name = EXCELLENT
		capital_scope = {
			add_province_modifier = {
				name = loot_prosperity_boost
				duration = 1825
			}
			hidden_tooltip = {
				change_variable = { which = prosperity_value value = 12 }
			}
		}
	}
}
