### Characters Scripted Effects

### New character assignement based on Culture

TOW_initialize_character_race_from_culture = {
	if = {
		limit = {
			has_character_flag = race_assigned
		}
		log = "Tides Of Warcraft -- Warning : Trying to assign a race on a character ([This.GetTitledName]) who already has the race_assigned flag !"
	}

	set_character_flag = race_assigned
	trigger_switch = {
		on_trigger = culture_group
		
		human = { add_trait = race_human }
		orcish = {
			if = {
				limit = {
					OR = {
						NOT = { culture = twilights_hammer }
						has_global_flag = thirdwar_bookmark
						has_global_flag = wow_bookmark
						#Twilight's hammer was destroyed during second war, or at any point before
					}
				}
				add_trait = race_orc
				if = {
					limit = {
						culture = twilights_hammer
					}
					set_graphical_culture = bleeding_hollow # doesn't matter
				}
			}
			else = {
				add_trait = race_pale_orc
			}
		}
		dwarf = { add_trait = race_dwarf }
		gnome = { add_trait = race_gnome }
		goblin = { add_trait = race_goblin }
		ogre = { add_trait = race_ogre }
		murloc = { add_trait = race_murloc }
		gnoll = { add_trait = race_gnoll }
		naga = { add_trait = race_naga }
		kobold = { add_trait = race_kobold }
		trogg = { add_trait = race_trogg }
	}
	trigger_switch = {
		on_trigger = culture
		
		high_elven = { add_trait = race_high_elf }
		blood_elven = { add_trait = race_blood_elf }
		night_elven = { add_trait = race_night_elf }
		felblood = {
			add_trait = race_blood_elf
			set_graphical_culture = felblood
			culture = blood_elven
			add_trait = fel_corrupted
		}
		wretched = {
			add_trait = race_wretched
			set_graphical_culture = race_wretched
			culture = blood_elven
		}
		red_dragonflight = { add_trait = race_dragon }
		blue_dragonflight = { add_trait = race_dragon }
		bronze_dragonflight = { add_trait = race_dragon }
		green_dragonflight = { add_trait = race_dragon }
		black_dragonflight = { add_trait = race_dragon }
		chromatic_dragonflight = { add_trait = race_dragon }
		twilight_dragonflight = { add_trait = race_dragon }
		infinite_dragonflight = { add_trait = race_dragon }
		nightmare_dragonflight = { add_trait = race_dragon }
		scourge = {
			add_trait = race_human
			add_trait = race_undead_scourge
		}
		forsaken = {
			add_trait = race_human
			add_trait = race_undead_forsaken
		}
		amani = { add_trait = race_troll_forest }
		atalai = { add_trait = race_troll_jungle }
		razorbranch = { add_trait = race_troll_jungle }
		firetree = { add_trait = race_troll_forest }
		mossflayer = { add_trait = race_troll_forest }
		revantusk = { add_trait = race_troll_forest }
		vilebranch = { add_trait = race_troll_forest }
		shadowpine = { add_trait = race_troll_forest }
		witherbark = { add_trait = race_troll_forest }
		bloodscalp = { add_trait = race_troll_jungle }
		darkspear = { add_trait = race_troll_jungle }
		gurubashi = { add_trait = race_troll_jungle }
		shatterspear = { add_trait = race_troll_jungle }
		skullsplitter = { add_trait = race_troll_jungle }
		drakkari = { add_trait = race_troll_ice }
		frostmane = { add_trait = race_troll_ice }
		sandfury = { add_trait = race_troll_sand }
		hakkari = { add_trait = race_troll_jungle }
		smolderthorn = { add_trait = race_troll_forest }
		shadowglen = { add_trait = race_troll_forest }
		winterax = { add_trait = race_troll_ice }
		winterfang = { add_trait = race_troll_ice }
		shadowtooth = { add_trait = race_troll_dark }
		zandalari = { add_trait = race_troll_zandalari }
		eredar = { add_trait = race_eredar }
		nathrezim = { add_trait = race_dreadlord }
		sayaad = { add_trait = race_succubus }
		ered_ruin = { add_trait = race_doomlord }
		annihilan = { add_trait = race_pit_lord } 
		mo_arg = {
			if = {
				limit = {
					NOT = { stewardship = 9 } # Will need tweaking
				}
				add_trait = race_fel_lord
			}
			else = {
				add_trait = race_mo_arg
			}
		}
		shivarra = { add_trait = race_shivarra }
		antaen = { add_trait = race_antaen }
		aranasi = { add_trait = race_aranasi }
		inquisitor = { add_trait = race_inquisitor }
		observer = { add_trait = race_observer }
		draenei = { add_trait = race_draenei }
		broken = { add_trait = race_broken }
		lost_one = { add_trait = race_lost_one }
		nraqi = { add_trait = race_faceless }
		voidwalker = { add_trait = race_voidwalker }
		air_elemental = { add_trait = race_air_elemental }
		earth_elemental = { add_trait = race_earth_elemental }
		fire_elemental = { add_trait = race_fire_elemental }
		water_elemental = { add_trait = race_water_elemental }
	}
}

TOW_update_character_race_from_liege = {
	if = {
		limit = { trait = orc }
	
		if = {
			limit = {
				liege = {
					graphical_culture = borcgfx
				}
			}
			random_list = {
				1 = {
					set_graphical_culture = mag_har
				}
				10 = { # Set a modifier to make this 0 if in Draenor/Outland
					set_graphical_culture = bleeding_hollow # doesn't matter
				}
			}
		}
		else_if = {
			limit = {
				liege = {
					graphical_culture = rorcgfx
				}
				OR = {
					religion = burning_legion
					religion = demonology
				}
			}
			random_list = {
				1 = {
					set_graphical_culture = fel_orc
					random_list = {
						1 = {
							add_trait = fel_corrupted
						}
						4 = {
							add_trait = fel_tainted
						}
					}
				}
				1 = { # Set a modifier to make this 0 if in Outland
					set_graphical_culture = bleeding_hollow # shouldn't matter
					random_list = {
						1 = {
							add_trait = fel_tainted
						}
						4 = {
							add_trait = fel_touched
						}
					}
				}
			}
		}
	}


	if = {
		limit = { 
			OR = {
				trait = race_high_elf
				trait = race_blood_elf
			}
			liege = {
				graphical_culture = welvengfx
				trait = race_wretched
			}
		}
		set_graphical_culture = wretched
		remove_trait = race_high_elf
		remove_trait = race_blood_elf
		add_trait = race_wretched
	}
}

TOW_new_character_employed_traits_effect = {
	Keitaro_remove_bad_traits = yes
	Keitaro_remove_lifestyle_traits = yes
	TOW_remove_class_traits = yes
	TOW_initialize_character_race_from_culture = yes
	TOW_update_character_race_from_liege = yes
	TOW_employed_remove_unwanted_traits_with_ET_employer = yes
}

TOW_remove_class_traits = {
	remove_trait = mage
	remove_trait = warlock
	remove_trait = necromancer
	remove_trait = priest
	remove_trait = shaman
	remove_trait = druid
	remove_trait = rogue
	remove_trait = ranger
	remove_trait = engineer
	remove_trait = warrior
	remove_trait = paladin
	remove_trait = monk
	remove_trait = death_knight
	remove_trait = demon_hunter
}

TOW_employed_remove_unwanted_traits_with_ET_employer = {
	if = {
		limit = { event_target:employer = { accepts_warlock = no } }
		remove_trait = warlock
		remove_trait = necrolyte
	}
	if = {
		limit = { event_target:employer = { accepts_necromancer = no } }
		remove_trait = necromancer
		remove_trait = necrolyte
	}
	if = {
		limit = { event_target:employer = { accepts_assassin = no } }
		remove_trait = assassin
	}
	if = {
		limit = { event_target:employer = { accepts_rogue = no } }
		remove_trait = rogue
	}
	remove_trait = demon_hunter
	remove_trait = death_knight
}