decisions = {
	
	hakkar_summoning = {
		potential = {
			OR = {
				true_religion = hakkar
				has_character_modifier = loa_hakkar
			}
			OR = {
				AND = {
					has_global_flag = gurubashiwar_emp_win
					OR = {
						has_landed_title = c_zulgurub_west
						has_landed_title = c_zulgurub_east
						any_realm_character = {
							has_landed_title = c_zulgurub_west
						}
						any_realm_character = {
							has_landed_title = c_zulgurub_east
						}
					}
				}
				AND = {
					has_global_flag = gurubashiwar_atalai_win
					OR = {
						has_landed_title = c_atal_hakkar
						any_realm_character = {
							has_landed_title = c_atal_hakkar
						}
					}
				}
			}
			NOT = { has_global_flag = hakkar_summoned }
		}
		allow = {
			OR = {
				AND = {
					has_global_flag = gurubashiwar_emp_win
					has_landed_title = e_gurubashi
					OR = {
						has_landed_title = c_zulgurub_west
						has_landed_title = c_zulgurub_east
						any_realm_character = {
							has_landed_title = c_zulgurub_west
						}
						any_realm_character = {
							has_landed_title = c_zulgurub_east
						}
					}
				}
				AND = {
					has_global_flag = gurubashiwar_atalai_win
					has_landed_title = d_sunken_swamps
					any_realm_character = {
						has_landed_title = c_atal_hakkar
					}
				}
			}
			NOT = { trait = cynical }
			piety = 2000 # Need to balance
		}
		effect = {
			narrative_event = { id = gurubashiwar.21 }
			piety = -1000
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.01
				has_game_rule = {
					name = troll_wars_events
					value = alternate
				}
			}
		}
	}
	
	reform_arathor = {
		potential = {
			trait = human
			NOT = { is_title_active = e_arathor }
			real_tier = KING
			independent = yes
			#NOT = { in the alliance }
		}
		allow = {
			has_artifact = crown_of_lordaeron
			has_artifact = crown_of_stromgarde
			has_artifact = crown_of_alterac
			has_artifact = crown_of_stormwind
			has_artifact = crown_of_gilneas
			OR = {
				has_landed_title = k_kul_tiras
				any_realm_character = {
					has_landed_title = k_kul_tiras
				}
			}
			OR = {
				has_landed_title = k_dalaran
				any_realm_character = {
					has_landed_title = k_dalaran
				}
			}
		}
		effect = {
			any_playable_ruler = {
				limit = {
					ai = no
					NOT = { character = ROOT }
				}
				narrative_event = { id = humanevents.1 }
			}
			e_arathor = {
				grant_title = ROOT
			}
			prestige = 500
		}
		ai_will_do = {
			factor = 0.2
			modifier = {
				factor = 0.01
				trait = content
			}
			modifier = {
				factor = 5
				trait = ambitious
			}
		}
	}
	
	join_tyrs_guard = {
		potential = {
			trait = human
			is_ruler = no
			religion = old_ways
			NOT = { trait = cynical }
			piety = 0
			is_title_active = d_tyrs_guard
			NOT = { has_minor_title = title_regent }
			any_liege = {
				NOT = { has_landed_title = d_tyrs_guard }
			}
		}
		allow = { # This is AI only stuff
			NOT = { has_character_flag = denied_tyrs_guard }
			trait = human
			is_ruler = no
			religion = old_ways
			NOT = { trait = cynical }
			piety = 0
			is_title_active = d_tyrs_guard
			NOT = { has_minor_title = title_regent }
			any_liege = {
				NOT = { has_landed_title = d_tyrs_guard }
			}
		}
		effect = {
			if = {
				limit = {
					liege = {
						dynasty = PREV
						at_location = PREV
					}
				}
				liege = {
					letter_event = { id = tyr.21 }
					break = yes
				}
			}
			if = {
				limit = {
					has_job_title = yes
				}
				employer = {
					letter_event = { id = tyr.22 }
				}
			}
			d_tyrs_guard = {
				holder_scope = {
					ROOT = {
						move_character = PREV
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.02
			modifier = {
				factor = 10
				trait = zealous
			}
		}
	}
	
	stop_training = {
		potential = {
			has_character_flag = ct_class_start
		}
		allow = {
			has_character_flag = ct_class_start
		}
		effect = {
			trigger_switch = {
				on_trigger = has_character_flag
				ct_arcanist_start = { set_character_flag = refused_arcanist }
				ct_necrolyte_start = { set_character_flag = refused_necrolyte }
				ct_necrolyte_drift = { set_character_flag = refused_necrolyte }
				ct_healer_start = { set_character_flag = refused_healer }
				ct_scout_start = { set_character_flag = refused_scout }
				ct_tinker_start = { set_character_flag = refused_tinker }
				ct_fighter_start = { set_character_flag = refused_fighter }
				ct_mage_start = { set_character_flag = refused_mage }
				ct_warlock_start = { set_character_flag = refused_warlock }
				ct_warlock_drift = { set_character_flag = refused_warlock }
				ct_necromancer_start = { set_character_flag = refused_necromancer }
				ct_necromancer_drift = { set_character_flag = refused_necromancer }
				ct_runemaster_start = { set_character_flag = refused_runemaster }
				ct_priest_start = { set_character_flag = refused_priest }
				ct_shaman_start = { set_character_flag = refused_shaman }
				ct_druid_start = { set_character_flag = refused_druid }
				ct_witch_doctor_start = { set_character_flag = refused_witch_doctor }
				ct_alchemist_start = { set_character_flag = refused_alchemist }
				ct_assassin_start = { set_character_flag = refused_assassin }
				ct_rogue_start = { set_character_flag = refused_rogue }
				ct_beastmaster_start = { set_character_flag = refused_beastmaster }
				ct_explorer_start = { set_character_flag = refused_explorer }
				ct_ranger_start = { set_character_flag = refused_ranger }
				ct_engineer_start = { set_character_flag = refused_engineer }
				ct_mechanist_start = { set_character_flag = refused_mechanist }
				ct_techmage_start = { set_character_flag = refused_techmage }
				ct_warrior_start = { set_character_flag = refused_warrior }
				ct_paladin_start = { set_character_flag = refused_paladin }
				ct_monk_start = { set_character_flag = refused_monk }
			}
			if = {
				limit = {
					OR = {
						has_character_flag = warlock_discovered
						has_character_flag = necromancer_discovered
					}
					trait = necrolyte
				}
				clr_character_flag = warlock_discovered
				clr_character_flag = necromancer_discovered
				set_character_flag = necrolyte_discovered
				remove_trait = arcanist_fake
				remove_trait = healer_fake
			}
			if = {
				limit = {
					OR = {
						has_character_flag = assassin_discovered
						has_character_flag = rogue_discovered
					}
				}
				clr_character_flag = assassin_discovered
				clr_character_flag = rogue_discovered
			}
			clear_flags_with_prefix = ct_
		}
		ai_will_do = {
			factor = 0.02
			modifier = {
				factor = 10
				trait = depressed
			}
			modifier = {
				factor = 4
				trait = content
			}
		}
	}
	
	reveal_yourself = {
		potential = {
			NOR = {
				has_character_flag = necrolyte_discovered
				has_character_flag = warlock_discovered
				has_character_flag = necromancer_discovered
				has_character_flag = assassin_discovered
				has_character_flag = rogue_discovered
				has_character_flag = blood_magic_discovered
				has_character_flag = shadow_priest_discovered
				has_character_flag = dark_shaman_discovered
				has_character_flag = nightmare_druid_discovered
			}
		}
		allow = {
			has_character_flag = ct_class_start
		}
		effect = {
			if = {
				limit = {
					OR = {
						has_character_flag = warlock_start
						has_character_flag = warlock_drift
						trait = warlock
					}
				}
				if = {
					limit = {
						trait = warlock
					}
					remove_trait = arcanist_fake
					remove_trait = healer_fake
					remove_trait = mage_fake
					remove_trait = priest_fake
					remove_trait = shaman_fake
					remove_trait = druid_fake
					remove_trait = witch_doctor_fake
					remove_trait = techmage_fake
					remove_character_modifier = abjuration
					remove_character_modifier = enchantment
					remove_character_modifier = illusion
					remove_character_modifier = divination
					remove_character_modifier = transmutation
					remove_character_modifier = conjuration
					remove_character_modifier = evocation
					remove_character_modifier = evocation_fake
					remove_character_modifier = blood_magic
					remove_character_modifier = hexes
					remove_character_modifier = brews
					remove_character_modifier = shadow_hunter
					remove_character_modifier = holy_priest
					remove_character_modifier = holy_priest_fake
					remove_character_modifier = sun_priest
					remove_character_modifier = sun_priest_fake
					remove_character_modifier = moon_priest
					remove_character_modifier = moon_priest_fake
					remove_character_modifier = shadow_priest
					remove_character_modifier = sea_witch
					remove_character_modifier = moon_druid
					remove_character_modifier = sun_druid
					remove_character_modifier = mender
					remove_character_modifier = feral_druid
					remove_character_modifier = elementalist
					remove_character_modifier = elementalist_fake
					remove_character_modifier = spiritualist
					remove_character_modifier = dark_shaman
				}
				set_character_flag = warlock_discovered
				if = {
					limit = {
						NOT = { has_secret_religion_trait_trigger = yes }
						NOT = {
							religion = cult_of_the_infinite
							religion = cult_of_the_destroyer
							religion = emerald_nightmare
							religion = forgotten_shadow
							religion = old_gods
							religion = twilights_hammer
							religion = azshara
							religion = burning_legion
							religion = mercantilism
							religion = demonology
							religion = loa
						}
					}
					religion = demonology
				}
				if = {
					limit = {
						OR = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = forgotten_shadow
							secret_religion = old_gods
							secret_religion = twilights_hammer
							secret_religion = azshara
							secret_religion = burning_legion
							secret_religion = mercantilism
							secret_religion = demonology
						}
					}
					flip_to_secret_religion_effect = yes
				}
			}
			if = {
				limit = {
					NOT = {
						has_character_flag = warlock_start
						has_character_flag = warlock_drift
						has_character_flag = necromancer_start
						has_character_flag = necromancer_drift
					}
					OR = {
						has_character_flag = necrolyte_start
						has_character_flag = necrolyte_drift
						trait = necrolyte
					}
				}
				if = {
					limit = {
						trait = necrolyte
					}
					remove_trait = healer_fake
					remove_trait = arcanist_fake
				}
				set_character_flag = necrolyte_discovered
				if = {
					limit = {
						NOT = { has_secret_religion_trait_trigger = yes }
						NOT = {
							religion = cult_of_the_infinite
							religion = cult_of_the_destroyer
							religion = emerald_nightmare
							religion = forgotten_shadow
							religion = old_gods
							religion = twilights_hammer
							religion = azshara
							religion = burning_legion
							religion = mercantilism
							religion = demonology
							religion = lich_king
							religion = hakkar
							religion = loa
						}
					}
					religion = demonology
				}
				if = {
					limit = {
						OR = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = forgotten_shadow
							secret_religion = old_gods
							secret_religion = twilights_hammer
							secret_religion = azshara
							secret_religion = burning_legion
							secret_religion = mercantilism
							secret_religion = demonology
							secret_religion = lich_king
						}
					}
					flip_to_secret_religion_effect = yes
				}
			}
			if = {
				limit = {
					OR = {
						has_character_flag = necromancer_start
						has_character_flag = necromancer_drift
						trait = necromancer
					}
				}
				if = {
					limit = {
						trait = necromancer
					}
					remove_trait = arcanist_fake
					remove_trait = healer_fake
					remove_trait = mage_fake
					remove_trait = priest_fake
					remove_trait = shaman_fake
					remove_trait = druid_fake
					remove_trait = witch_doctor_fake
					remove_trait = techmage_fake
					remove_character_modifier = abjuration
					remove_character_modifier = enchantment
					remove_character_modifier = illusion
					remove_character_modifier = divination
					remove_character_modifier = transmutation
					remove_character_modifier = conjuration
					remove_character_modifier = evocation
					remove_character_modifier = evocation_fake
					remove_character_modifier = blood_magic
					remove_character_modifier = hexes
					remove_character_modifier = brews
					remove_character_modifier = shadow_hunter
					remove_character_modifier = holy_priest
					remove_character_modifier = holy_priest_fake
					remove_character_modifier = sun_priest
					remove_character_modifier = sun_priest_fake
					remove_character_modifier = moon_priest
					remove_character_modifier = moon_priest_fake
					remove_character_modifier = shadow_priest
					remove_character_modifier = sea_witch
					remove_character_modifier = moon_druid
					remove_character_modifier = sun_druid
					remove_character_modifier = mender
					remove_character_modifier = feral_druid
					remove_character_modifier = elementalist
					remove_character_modifier = elementalist_fake
					remove_character_modifier = spiritualist
					remove_character_modifier = dark_shaman
				}
				set_character_flag = necromancer_discovered
				if = {
					limit = {
						NOT = { has_secret_religion_trait_trigger = yes }
						NOT = {
							religion = hakkar
							religion = burning_legion
							religion = forgotten_shadow
							religion = lich_king
							religion = cult_of_the_infinite
							religion = cult_of_the_destroyer
							religion = old_gods
							religion = emerald_nightmare
							religion = azshara
							religion = demonology
						}
					}
					religion = forgotten_shadow
				}
				if = {
					limit = {
						OR = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = forgotten_shadow
							secret_religion = old_gods
							secret_religion = twilights_hammer
							secret_religion = azshara
							secret_religion = burning_legion
							secret_religion = demonology
							secret_religion = lich_king
						}
					}
					flip_to_secret_religion_effect = yes
				}
			}
			if = {
				limit = {
					has_character_modifier = blood_magic
				}
				remove_character_modifier = evocation_fake
				set_character_flag = blood_magic_discovered
			}
			if = {
				limit = {
					has_character_modifier = shadow_priest
				}
				remove_character_modifier = holy_priest_fake
				remove_character_modifier = sun_priest_fake
				remove_character_modifier = moon_priest_fake
				set_character_flag = shadow_priest_discovered
				if = {
					limit = {
						NOT = { has_secret_religion_trait_trigger = yes }
						NOT = {
							religion = cult_of_the_infinite
							religion = cult_of_the_destroyer
							religion = emerald_nightmare
							religion = forgotten_shadow
							religion = old_gods
							religion = twilights_hammer
							religion = azshara
							religion = burning_legion
							religion = mercantilism
							religion = demonology
							religion = lich_king
						}
					}
					religion = forgotten_shadow
				}
				if = {
					limit = {
						OR = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = forgotten_shadow
							secret_religion = old_gods
							secret_religion = twilights_hammer
							secret_religion = azshara
							secret_religion = burning_legion
							secret_religion = mercantilism
							secret_religion = demonology
							secret_religion = lich_king
						}
					}
					flip_to_secret_religion_effect = yes
				}
			}
			if = {
				limit = {
					has_character_modifier = dark_shaman
				}
				remove_character_modifier = elementalist_fake
				set_character_flag = dark_shaman_discovered
				if = {
					limit = {
						OR = {
							religion = shamanism
							religion = old_ways
						}
					}
					religion = old_gods
				}
				if = {
					limit = {
						OR = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = old_gods
							secret_religion = twilights_hammer
						}
					}
					flip_to_secret_religion_effect = yes
				}
			}
			if = {
				limit = {
					has_character_modifier = nightmare_druid
				}
				remove_character_modifier = mender_fake
				set_character_flag = nightmare_druid_discovered
				if = {
					limit = {
						NOR = {
							true_religion = cult_of_the_infinite
							true_religion = cult_of_the_destroyer
							true_religion = emerald_nightmare
							true_religion = old_gods
							true_religion = twilights_hammer
						}
					}
					religion = emerald_nightmare
				}
				if = {
					limit = {
						OR = {						
							secret_religion = cult_of_the_infinite
							secret_religion = cult_of_the_destroyer
							secret_religion = emerald_nightmare
							secret_religion = old_gods
							secret_religion = twilights_hammer
						}
					}
					flip_to_secret_religion_effect = yes
				}
			}
		}
		ai_will_do = {
			factor = 0.02
			modifier = {
				factor = 10
				trait = honest
			}
			modifier = {
				factor = 4
				trait = trusting
			}
		}
	}
	
	train_warrior = {
		potential = {
			prisoner = no
			has_regent = no
			NOT = { trait = infirm }
			NOT = { trait = incapable }
			OR = {
				AND = {
					society_rank >= 3
					society_member_of = tyrs_guard_society
				}
				has_landed_title = d_tyrs_guard
				has_landed_title = d_sunfury
				any_liege = {
					OR = {
						has_landed_title = d_tyrs_guard
						has_landed_title = d_sunfury
					}
				}
			}
			trait = fighter
			NOT = { has_character_flag = has_adv_class}
			NOT = { has_character_flag = refused_warrior }
		}
		
		allow = {
			trait = fighter
			NOT = {	has_character_flag = has_adv_class }
			NOT = {	has_character_flag = ct_class_start }
			NOT = { has_character_flag = refused_warrior }
			martial = 15
			OR = {
				AND = {
					society_member_of = tyrs_guard_society
					has_society_currency_major_trigger = yes
				}
				AND = {
					NOT = { society_member_of = tyrs_guard_society }
					prestige = 200
				}
			}
		}
		
		effect = {
			character_event = { id = classgain.24 }
			if = {
				limit = {
					society_member_of = tyrs_guard_society
				}
				increase_visibility_effect = yes
				detract_society_currency_major_effect = yes
			}
			if = {
				limit = {
					NOT = { society_member_of = tyrs_guard_society }
				}
				prestige = -200
			}
		}
		
		revoke_allowed = {
			always = no
		}
		
		ai_will_do = {
			factor = 0.5
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 1.2
				trait = diligent
			}
		}
	}
	
	train_fighter = {
		is_in_society = yes
		
		potential = {
			prisoner = no
			has_regent = no
			NOT = { trait = incapable }
			OR = {
				AND = {
					society_rank >= 2
					society_member_of = tyrs_guard_society
				}
				has_landed_title = d_tyrs_guard
				any_liege = {
					has_landed_title = d_tyrs_guard
				}
			}
			NOT = { has_character_flag = refused_fighter }
			NOT = { trait = fighter }
		}
		
		allow = {
			NOT = { trait = weak }
			NOT = { trait = feeble }
			NOT = { trait = inbred }
			NOT = {
				trait = fighter
				trait = death_knight
				trait = demon_hunter
				trait = warrior
				trait = paladin
				trait = monk
			}
			NOT = {	lifestyle_traits = 2 }
			NOT = {	has_character_flag = ct_class_start }
			NOT = { has_character_flag = refused_fighter }
			martial = 10
			OR = {
				AND = {
					society_member_of = tyrs_guard_society
					has_society_currency_minor_trigger = yes
				}
				AND = {
					NOT = { society_member_of = tyrs_guard_society }
					prestige = 100
				}
			}
		}
		
		effect = {
			character_event = { id = classgain.6 }
			if = {
				limit = {
					society_member_of = tyrs_guard_society
				}
				increase_visibility_effect = yes
				detract_society_currency_minor_effect = yes
			}
			if = {
				limit = {
					NOT = { society_member_of = tyrs_guard_society }
				}
				prestige = -100
			}
		}
		
		revoke_allowed = {
			always = no
		}
		
		ai_will_do = {
			factor = 0.5
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 1.2
				trait = diligent
			}
		}
	}
	
	train_paladin = {
		potential = {
			prisoner = no
			has_regent = no
			NOT = { trait = infirm }
			NOT = { trait = incapable }
			OR = {
				AND = {
					society_rank >= 3
					society_member_of = tyrs_guard_society
				}
				AND = {
					society_rank >= 2
					society_member_of = blood_knights
				}
				has_landed_title = d_tyrs_guard
				has_landed_title = d_blood_knights
				any_liege = {
					OR = {
						has_landed_title = d_tyrs_guard
						has_landed_title = d_blood_knights
					}
				}
			}
			trait = fighter
			OR = {
				AND = {
					OR = {
						trait = human
						trait = AK_trait_dwarf
					}
					OR = {
						#whatever condition I set for regular paladins existing
						has_global_flag = thirdwar_bookmark
						has_global_flag = wow_bookmark
					}
				}
			}
			NOT = { has_character_flag = has_adv_class}
			NOT = { has_character_flag = refused_paladin }
		}
		
		allow = {
			trait = fighter
			NOT = {	has_character_flag = has_adv_class }
			NOT = {	has_character_flag = ct_class_start }
			NOT = { has_character_flag = refused_paladin }
			OR = {
				martial = 15
				learning = 15
			}
			OR = {
				AND = {
					OR = {
						society_member_of = tyrs_guard_society
						society_member_of = blood_knights
					}
					has_society_currency_major_trigger = yes
				}
				AND = {
					NOT = { society_member_of = tyrs_guard_society }
					NOT = { society_member_of = blood_knights }
					prestige = 200
				}
			}
		}
		
		effect = {
			character_event = { id = classgain.25 }
			if = {
				limit = {
					OR = {
						society_member_of = tyrs_guard_society
						society_member_of = blood_knights
					}
				}
				if = {
					limit = {
						society_member_of = tyrs_guard_society
					}
					increase_visibility_effect = yes
				}
			}
			detract_society_currency_major_effect = yes
			if = {
				limit = {
					NOT = { society_member_of = tyrs_guard_society }
					NOT = { society_member_of = blood_knights }
				}
				prestige = -200
			}
		}
		
		revoke_allowed = {
			always = no
		}
		
		ai_will_do = {
			factor = 0.5
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 1.2
				trait = diligent
			}
		}
	}
	
	train_mage = {
		potential = {
			prisoner = no
			has_regent = no
			NOT = { trait = infirm }
			NOT = { trait = incapable }
			OR = {
				AND = {
					society_rank >= 2
					society_member_of = magisters
				}
				AND = {
					society_rank >= 2
					society_member_of = sunreavers
				}
			}
			trait = arcanist
			NOT = { has_character_flag = has_adv_class}
			NOT = { has_character_flag = refused_mage }
		}
		
		allow = {
			trait = arcanist
			NOT = {	has_character_flag = has_adv_class }
			NOT = {	has_character_flag = ct_class_start }
			NOT = { has_character_flag = refused_mage }
			learning = 15
			OR = {
				AND = {
					OR = {
						society_member_of = magisters
						society_member_of = sunreavers
					}
					has_society_currency_major_trigger = yes
				}
				AND = {
					NOT = { society_member_of = magisters }
					NOT = { society_member_of = sunreavers }
					prestige = 200
				}
			}
		}
		
		effect = {
			character_event = { id = classgain.7 }
			if = {
				limit = {
					OR = {
						society_member_of = magisters
						society_member_of = sunreavers
					}
				}
				detract_society_currency_major_effect = yes
			}
			if = {
				limit = {
					NOT = { society_member_of = magisters }
					NOT = { society_member_of = sunreavers }
				}
				prestige = -200
			}
		}
		
		revoke_allowed = {
			always = no
		}
		
		ai_will_do = {
			factor = 0.5
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 1.2
				trait = diligent
			}
		}
	}
	
	train_ranger = {
		potential = {
			prisoner = no
			has_regent = no
			NOT = { trait = infirm }
			NOT = { trait = incapable }
			society_rank >= 2
			society_member_of = farstriders
			trait = scout
			NOT = { has_character_flag = has_adv_class}
			NOT = { has_character_flag = refused_ranger }
		}
		
		allow = {
			trait = arcanist
			NOT = {	has_character_flag = has_adv_class }
			NOT = {	has_character_flag = ct_class_start }
			NOT = { has_character_flag = refused_ranger }
			stewardship = 15
			OR = {
				AND = {
					society_member_of = farstriders
					has_society_currency_major_trigger = yes
				}
				AND = {
					NOT = { society_member_of = farstriders }
					prestige = 200
				}
			}
		}
		
		effect = {
			character_event = { id = classgain.20 }
			if = {
				limit = {
					society_member_of = farstriders
				}
				detract_society_currency_major_effect = yes
			}
			if = {
				limit = {
					NOT = { society_member_of = farstriders }
				}
				prestige = -200
			}
		}
		
		revoke_allowed = {
			always = no
		}
		
		ai_will_do = {
			factor = 0.5
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 1.2
				trait = diligent
			}
		}
	}
	
	train_explorer = {
		potential = {
			prisoner = no
			has_regent = no
			NOT = { trait = infirm }
			NOT = { trait = incapable }
			society_rank >= 2
			society_member_of = reliquary
			trait = scout
			NOT = { has_character_flag = has_adv_class}
			NOT = { has_character_flag = refused_explorer }
		}
		
		allow = {
			trait = scout
			NOT = {	has_character_flag = has_adv_class }
			NOT = {	has_character_flag = ct_class_start }
			NOT = { has_character_flag = refused_explorer }
			stewardship = 15
			OR = {
				AND = {
					society_member_of = reliquary
					has_society_currency_major_trigger = yes
				}
				AND = {
					NOT = { society_member_of = reliquary }
					prestige = 200
				}
			}
		}
		
		effect = {
			character_event = { id = classgain.19 }
			if = {
				limit = {
					society_member_of = reliquary
				}
				detract_society_currency_major_effect = yes
			}
			if = {
				limit = {
					NOT = { society_member_of = reliquary }
				}
				prestige = -200
			}
		}
		
		revoke_allowed = {
			always = no
		}
		
		ai_will_do = {
			factor = 0.5
			modifier = {
				factor = 0.2
				trait = slothful
			}
			modifier = {
				factor = 1.2
				trait = diligent
			}
		}
	}
	
	hire_adventurers = {
		potential = {
			prisoner = no
			has_regent = no
			is_landed = yes
			society_rank >= 2
			society_member_of = reliquary
		}
		allow = {
			has_society_currency_minor_trigger = yes
			NOT = { has_character_modifier = hired_adventurers }
			war = yes
		}
		effect = {
			add_character_modifier = { name = hired_adventurers duration = 180 }
			detract_society_currency_minor_effect = yes
			capital_holding = {
				ROOT = {
					spawn_unit = {
						province = PREV
						home = PREV
						owner = THIS
						troops = {
							archers = { 100 100 }
							light_infantry = { 340 340 }
							heavy_infantry = { 50 50 }
							mages = { 10 10 }
						}
						disband_on_peace = yes
						match_character = THIS
						match_mult = 0.8
						match_max = 1000
						match_min = 500
						attrition = 0
						maintenance_multiplier = 0.5
						can_toggle_looting = yes
						reinforces = no
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
		}
	}

	train_tactics = {
		potential = {
			prisoner = no
			NOT = { trait = incapable }
			society_rank >= 2
			society_member_of = reliquary
			can_have_more_leadership_traits = yes
		}
		allow = {
			has_society_currency_minor_trigger = yes
			NOT = { has_character_modifier = trained_tactics_recently }
		}
		effect = {
			add_character_modifier = { name = trained_tactics_recently duration = 180 }
			detract_society_currency_minor_effect = yes
			character_event = { id = helfsoc.16 }
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.5
		}
	}
	
	celebrate_hallows_end = {
		potential = {
			OR = {
				trait = human
				culture = forsaken
			}
			NOT = { trait = undead_scourge }
			is_ruler = yes
			is_landed = yes
			independent = yes
			NOT = {
				has_character_modifier = holding_hallows_end
			}
			NOT = {
				has_character_modifier = hallows_end_timer
			}
			num_of_vassals = 1
			OR = {
				NOT = { has_character_flag = recent_hallows_end }
				had_character_flag = {
					flag = recent_hallows_end
					days = 60
				}
			}
		}
		allow = {
			war = no
			custom_tooltip = {
				text = UNOCCUPIED_DEMESNE_TITLE
				hidden_tooltip = {
					any_demesne_title = {
						NOT = { higher_tier_than = count }
						is_occupied = no
					}
				}
			}
			wealth = 25
			prisoner = no
			NOT = { is_inaccessible_trigger = yes }
			month = 9
			NOT = {
				month = 12
			}
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = { NOT = { has_character_flag = do_not_disturb } }
			}
		}
		effect = {
			wealth = -25
			add_character_modifier = {
				name = holding_hallows_end
				duration = -1
			}
			set_character_flag = recent_minor_decision
			set_character_flag = do_not_disturb
			hidden_tooltip = {
				character_event = { id = hallows.1 }
				any_realm_character = {
					limit = {
						is_ruler = yes
						OR = {
							AND = {
								trait = human
								NOT = { culture = forsaken }
								ROOT = {
									trait = human
									NOT = { culture = forsaken }
								}
							}
							AND = {
								culture = forsaken
								ROOT = {
									culture = forsaken
								}
							}
						}
					}
					character_event = { id = hallows.1 }
				}
				character_event = { id = hallows.5 days = 60 }
			}
			if = {
				limit = {
					has_dlc = "Reapers"
				}
				custom_tooltip = {
					text = capital_prospers_custom_tooltip
					hidden_tooltip = {
						capital_scope = {
							change_variable = { which = prosperity_value value = 8 }
						}
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			
			modifier = {
				factor = 0
				NOT = {
					wealth = 200
				}
			}

			modifier = {
				factor = 0
				trait = slothful
			}	
			
			modifier = {
				factor = 0.5
				NOT = { stewardship = 10 }
			}
			
			modifier = {
				factor = 0
				has_character_flag = recent_minor_decision
				NOT = {
					had_character_flag = {
						flag = recent_minor_decision
						days = 730
					}
				}
			}			
			
		}
	}
	
}

targetted_decisions = {

	duel_test = { #DISABLE THIS
		from_potential = {
			ai = no
		}
		potential = {
			always = yes
		}
		allow = {
			always = yes
		}
		effect = {
			FROM = {
				ROOT = {
					character_event = { id = duel.1 }
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	
	send_kid_to_dalaran = {
		is_high_prio = yes
		filter = home_court
		ai_target_filter = home_court
		from_potential = {
			trait = human
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			is_landed = yes
			NOT = { trait = distrusts_magic }
			NOR = {
				government = kirin_tor_government
				any_liege = {
					government = kirin_tor_government
				}
			}
			OR = {
				k_dalaran = {
					holder_scope = {
						government = kirin_tor_government
					}
				}
				d_dalaran = {
					holder_scope = {
						government = kirin_tor_government
					}
				}
				c_dalaran = {
					holder_scope = {
						government = kirin_tor_government
					}
				}
			}
		}
		potential = {
			prisoner = no
			liege = {
				OR = {
					dynasty = ROOT
					is_father = ROOT
					is_mother = ROOT
				}
			}
			NOR = {
				trait = infirm
				trait = incapable
			}
			NOT = { trait = distrusts_magic }
			NOT = {	lifestyle_traits = 2 }
			OR = {
				AND = {
					trait = arcanist
					learning = 15
					NOT = { has_character_flag = has_adv_class }
				}
				AND = {
					NOT = { has_class = yes }
					learning = 10
				}
			}
			NOT = { has_character_flag = sent_to_education }
			NOT = { age = 26 } # super arbitrary
			is_ruler = no
		}
		allow = {
			FROM = { wealth = 10 }
			NOT = { trait = distrusts_magic }
			NOT = {	lifestyle_traits = 2 }
			OR = {
				AND = {
					trait = arcanist
					NOT = { has_character_flag = has_adv_class }
				}
				NOT = { has_class = yes }
			}
		}
		effect = {
			set_character_flag = sent_to_education
			FROM = {
				scaled_wealth = {
					value = -0.2
					min = 10
					max = 100
				}
			}
			random = {
				chance = 25
				religion = arcane
			}
			if = {
				limit = {
					is_title_active = k_dalaran
					k_dalaran = {
						holder_scope = {
							government = kirin_tor_government
						}
					}
				}
				k_dalaran = {
					holder_scope = {
						ROOT = {
							move_character = PREV
						}
						character_event = { id = dalaran.11 }
					}
				}
			}
			if = {
				limit = {
					OR = {
						NOT = { is_title_active = k_dalaran }
						k_dalaran = {
							holder_scope = {
								NOT = { government = kirin_tor_government }
							}
						}
					}
					is_title_active = d_dalaran
					d_dalaran = {
						holder_scope = {
							government = kirin_tor_government
						}
					}
				}
				d_dalaran = {
					holder_scope = {
						ROOT = {
							move_character = PREV
						}
						character_event = { id = dalaran.11 }
					}
				}
			}
			if = {
				limit = {
					OR = {
						NOT = { is_title_active = k_dalaran }
						NOT = { is_title_active = d_dalaran }
						k_dalaran = {
							holder_scope = {
								NOT = { government = kirin_tor_government }
							}
						}
						d_dalaran = {
							holder_scope = {
								NOT = { government = kirin_tor_government }
							}
						}
					}
					is_title_active = c_dalaran
					c_dalaran = {
						holder_scope = {
							government = kirin_tor_government
						}
					}
				}
				c_dalaran = {
					holder_scope = {
						ROOT = {
							move_character = PREV
						}
						character_event = { id = dalaran.11 }
					}
				}
			}
			random_list = {
				4 = {
					modifier = {
						factor = 2
						trait = diligent
					}
					modifier = {
						factor = 2
						trait = genius
					}
					modifier = {
						factor = 1.5
						trait = quick
					}
					if = {
						limit = {
							NOT = { trait = arcanist }
						}
						character_event = { id = classgain.1 }
					}
					if = {
						limit = {
							trait = arcanist
						}
						character_event = { id = classgain.7 }
					}
				}
				1 = {
					modifier = {
						factor = 2
						trait = slothful
					}
					modifier = {
						factor = 2
						trait = depressed
					}
					modifier = {
						factor = 1.5
						trait = stressed
					}
					FROM = {
						save_event_target_as = sktd_liege
					}
					character_event = { id = dalaran.12 days = 700 random = 50 }
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.2
			modifier = {
				factor = 0.3
				ROOT = {
					NOT = { reverse_opinion = { who = FROM value = 0 } }
				}
			}
			modifier = {
				factor = 0.5
				trait = paranoid
			}
			modifier = {
				factor = 2
				trait = diligent
			}
			modifier = {
				factor = 2
				OR = {
					trait = arcanist
					trait = mage
				}
			}
		}
	}
	
	send_kid_to_knights = {
		is_high_prio = yes
		filter = home_court
		ai_target_filter = home_court
		from_potential = {
			trait = human
			NOR = {
				trait = undead_generic
				trait = undead_scourge
				trait = undead_forsaken
			}
			is_landed = yes
			OR = {
				AND = {
					OR = {
						has_landed_title = k_stormwind
						k_stormwind = {
							holder_scope = {
								is_vassal_or_below = ROOT
							}
						}
					}
					is_title_active = d_brotherhood_of_the_horse
				}
				AND = {
					OR = {
						has_landed_title = k_alterac
						k_alterac = {
							holder_scope = {
								is_vassal_or_below = ROOT
							}
						}
					}
					is_title_active = d_ravenguard
				}
				AND = {
					OR = {
						has_landed_title = k_stormwind
						has_landed_title = e_arathor
						k_stormwind = {
							holder_scope = {
								is_vassal_or_below = ROOT
							}
						}
						e_arathor = {
							holder_scope = {
								is_vassal_or_below = ROOT
							}
						}
					}
					is_title_active = d_order_of_the_firstborn
				}
				AND = {
					OR = {
						has_landed_title = k_lordaeron
						k_lordaeron = {
							holder_scope = {
								is_vassal_or_below = ROOT
							}
						}
					}
					is_title_active = d_knights_of_the_north
				}
				AND = {
					OR = {
						has_landed_title = k_gilneas
						k_gilneas = {
							holder_scope = {
								is_vassal_or_below = ROOT
							}
						}
					}
					is_title_active = d_wolfpack
				}
			}
		}
		potential = {
			prisoner = no
			liege = {
				OR = {
					dynasty = ROOT
					is_father = ROOT
					is_mother = ROOT
				}
			}
			NOR = {
				trait = infirm
				trait = incapable
				trait = weak
				trait = feeble
			}
			NOT = { has_character_flag = sent_to_education }
			NOT = {	lifestyle_traits = 2 }
			OR = {
				martial = 10
				combat_rating = 1
			}
			NOT = { age = 26 } # super arbitrary
			is_ruler = no
		}
		allow = {
			FROM = { wealth = 10 }
		}
		effect = {
			set_character_flag = sent_to_education
			FROM = {
				scaled_wealth = {
					value = -0.2
					min = 10
					max = 100
				}
			}
			if = {
				limit = {
					is_title_active = k_dalaran
					k_dalaran = {
						holder_scope = {
							government = kirin_tor_government
						}
					}
				}
				k_dalaran = {
					holder_scope = {
						ROOT = {
							move_character = PREV
						}
						character_event = { id = dalaran.11 }
					}
				}
			}
			if = {
				limit = {
					FROM = {
						OR = {
							has_landed_title = k_stormwind
							k_stormwind = {
								holder_scope = {
									is_vassal_or_below = ROOT
								}
							}
						}
						is_title_active = d_brotherhood_of_the_horse
					}
				}
				d_brotherhood_of_the_horse = {
					holder_scope = {
						ROOT = {
							move_character = PREV
						}
						character_event = { id = knights.22 }
					}
				}
			}
			if = {
				limit = {
					FROM = {
						OR = {
							has_landed_title = k_alterac
							k_alterac = {
								holder_scope = {
									is_vassal_or_below = ROOT
								}
							}
						}
						is_title_active = d_ravenguard
					}
				}
				d_ravenguard = {
					holder_scope = {
						ROOT = {
							move_character = PREV
						}
						character_event = { id = knights.22 }
					}
				}
			}
			if = {
				limit = {
					FROM = {
						OR = {
							has_landed_title = k_lordaeron
							k_lordaeron = {
								holder_scope = {
									is_vassal_or_below = ROOT
								}
							}
						}
						is_title_active = d_knights_of_the_north
					}
				}
				d_knights_of_the_north = {
					holder_scope = {
						ROOT = {
							move_character = PREV
						}
						character_event = { id = knights.22 }
					}
				}
			}
			if = {
				limit = {
					FROM = {
						OR = {
							has_landed_title = k_gilneas
							k_gilneas = {
								holder_scope = {
									is_vassal_or_below = ROOT
								}
							}
						}
						is_title_active = d_wolfpack
					}
				}
				d_wolfpack = {
					holder_scope = {
						ROOT = {
							move_character = PREV
						}
						character_event = { id = knights.22 }
					}
				}
			}
			if = {
				limit = {
					FROM = {
						NOR = {
							AND = {
								OR = {
									has_landed_title = k_stormwind
									k_stormwind = {
										holder_scope = {
											is_vassal_or_below = ROOT
										}
									}
								}
								is_title_active = d_brotherhood_of_the_horse
							}
							AND = {
								OR = {
									has_landed_title = k_alterac
									k_alterac = {
										holder_scope = {
											is_vassal_or_below = ROOT
										}
									}
								}
								is_title_active = d_ravenguard
							}
							AND = {
								OR = {
									has_landed_title = k_lordaeron
									k_lordaeron = {
										holder_scope = {
											is_vassal_or_below = ROOT
										}
									}
								}
								is_title_active = d_knights_of_the_north
							}
							AND = {
								OR = {
									has_landed_title = k_gilneas
									k_gilneas = {
										holder_scope = {
											is_vassal_or_below = ROOT
										}
									}
								}
								is_title_active = d_wolfpack
							}
						}
						OR = {
							has_landed_title = k_stromgarde
							has_landed_title = e_arathor
							k_stromgarde = {
								holder_scope = {
									is_vassal_or_below = ROOT
								}
							}
							e_arathor = {
								holder_scope = {
									is_vassal_or_below = ROOT
								}
							}
						}
						is_title_active = d_order_of_the_firstborn
					}
				}
				d_order_of_the_firstborn = {
					holder_scope = {
						ROOT = {
							move_character = PREV
						}
						character_event = { id = knights.22 }
					}
				}
			}
			random_list = {
				4 = {
					modifier = {
						factor = 2
						trait = diligent
					}
					modifier = {
						factor = 2
						trait = strong
					}
					modifier = {
						factor = 1.5
						trait = robust
					}
					character_event = { id = knights.23 days = 150 random = 50 }
				}
				1 = {
					modifier = {
						factor = 2
						trait = slothful
					}
					modifier = {
						factor = 2
						trait = depressed
					}
					modifier = {
						factor = 1.5
						trait = stressed
					}
					FROM = {
						save_event_target_as = sktk_liege
					}
					character_event = { id = knights.24 days = 700 random = 50 }
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.2
			modifier = {
				factor = 0.3
				ROOT = {
					NOT = { reverse_opinion = { who = FROM value = 0 } }
				}
			}
			modifier = {
				factor = 0.5
				trait = paranoid
			}
			modifier = {
				factor = 2
				trait = diligent
			}
			modifier = {
				factor = 2
				OR = {
					trait = arcanist
					trait = mage
				}
			}
		}
	}
	
	human_intervene_war = {
		filter = all
		ai_target_filter = all
		from_potential = {
			war = no
			independent = yes
			trait = human
			NOR = {
				trait = undead_generic
				trait = undead_forsaken
				trait = undead_scourge
			}
			distance = { who = ROOT value = 500 } # I have no idea
		}
		potential = {
			independent = yes
			war = yes
			any_war = {
				any_defender = {
					character = ROOT
					is_primary_war_defender = yes
				}
				any_attacker = {
					OR = {
						NOT = { trait = human }
						trait = undead_scourge
						trait = undead_forsaken
						trait = undead_generic
					}
					is_primary_war_attacker = yes
					NOT = { character = ROOT }
				}
			}
		}
		allow = {
			FROM = {
				prestige = 50
			}
		}
		effect = {
			FROM = {
				prestige = -50
				ROOT = {
					letter_event = { id = hfy.1 }
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.5
		}
	}
	
}